{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what The first production ready, and most loved Bun framework is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain The first production ready, and most loved Bun framework in elysiajs.\n\n# The first production ready, and most loved Bun framework\n\nElysia is a high-performance framework built on Bun, designed for type safety and developer experience.Here's a quick rundown of what this is about:\n\n## The Next Level of Type Safety\n\nElysia provides dynamic type safety, allowing developers to enforce types at runtime. This ensures that the application behaves as expected and reduces runtime errors.\n\n## Type Inference\n\nElysia automatically infers types based on the codebase, adapting to the developer's needs and ensuring maximum type safety.\n\n## Performance Benchmark\n\nElysia is one of the top-performing JavaScript frameworks, with a benchmark of 2,454,631 requests per second, significantly outperforming other frameworks like Gin, Spring, Fastify, and Express.\n\n## Community Support\n\nElysia is driven by a passionate community, with contributions from various developers and organizations. The framework is not owned by any single entity, emphasizing its open-source nature.\n\n## Key Features\n\nElysia is designed for builders, inventors, and visionaries, focusing on speed, type safety, and developer experience.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "overview", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I the next level of type safety in elysiajs?\n\nAssistant: To the next level of type safety in elysiajs, here's what you do:\nElysia provides dynamic type safety, allowing developers to enforce types at runtime. This ensures that the application behaves as expected and reduces runtime errors..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type inference in elysiajs?\n\nAssistant: To type inference in elysiajs, here's what you do:\nElysia automatically infers types based on the codebase, adapting to the developer's needs and ensuring maximum type safety..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I performance benchmark in elysiajs?\n\nAssistant: To performance benchmark in elysiajs, here's what you do:\nElysia is one of the top-performing JavaScript frameworks, with a benchmark of 2,454,631 requests per second, significantly outperforming other frameworks like Gin, Spring, Fastify, and Express..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I community support in elysiajs?\n\nAssistant: To community support in elysiajs, here's what you do:\nElysia is driven by a passionate community, with contributions from various developers and organizations. The framework is not owned by any single entity, emphasizing its open-source nature..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I key features in elysiajs?\n\nAssistant: To key features in elysiajs, here's what you do:\nElysia is designed for builders, inventors, and visionaries, focusing on speed, type safety, and developer experience..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for The first production ready, and most loved Bun framework in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Elysia Setup**:\n\n```yaml\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n\t.get('/', 'Hello World')\n\t.get('/image', file('mika.webp'))\n\t.get('/stream', function* () {\n\t\tyield 'Hello'\n\t\tyield 'World'\n\t})\n\t.ws('/realtime', {\n\t\tmessage(ws, message) {\n\t\t\tws.send('got:' + message)\n\t\t}\n\t})\n\t.listen(3000)\n```\n\nThis snippet shows you how to basic elysia setup, which is an important aspect of the first production ready, and most loved bun framework.\n\n**Type Safety Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.get('/id/:id', ({ params, set }) => {\n\t\tset.headers.a\n\t\treturn 'Su'\n\t})\n\t.get('/optional/:name?', ({ params: { name } }) => {\n\t\treturn name ?? 'Pardofelis'\n\t})\n\t.listen(3000)\n```\n\nThis snippet shows you how to type safety example, which is an important aspect of the first production ready, and most loved bun framework.\n\n**Using Swagger with Elysia**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport swagger from '@elysiajs/swagger'\n\nnew Elysia()\n\t.use(swagger())\n\t.use(character)\n\t.use(auth)\n\t.listen(3000)\n```\n\nThis snippet shows you how to using swagger with elysia, which is an important aspect of the first production ready, and most loved bun framework.\n\n**API Interaction Example**:\n\n```yaml\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst api = treaty<App>('api.elysiajs.com')\n\nconst { data } = await api.profile.patch({\n\tage: 21\n})\n```\n\nThis snippet shows you how to api interaction example, which is an important aspect of the first production ready, and most loved bun framework.\n\n**Testing User Duplication**:\n\n```yaml\nimport { treaty } from '@elysiajs/eden'\nimport { app } from './index'\nimport { test, expect } from 'bun:test'\n\nconst server = treaty(app)\n\ntest('should handle duplicated user', async () => {\n\tconst { error } = await server.user.put({\n\t\tusername: 'mika',\n\t})\n\n\texpect(error?.value).toEqual({\n\t\tsuccess: false,\n\t\tmessage: 'Username already taken'\n\t})\n})\n```\n\nThis snippet shows you how to testing user duplication, which is an important aspect of the first production ready, and most loved bun framework.\n\n", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "code_examples", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using The first production ready, and most loved Bun framework in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia is designed for maximum type safety, ensuring that developers can catch errors at compile time rather than runtime.\n\nUtilize the community resources and contributions to enhance your development experience with Elysia.\n\nLeverage the performance benchmarks to choose Elysia for high-performance applications.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com", "title": "The first production ready, and most loved Bun framework", "description": "Elysia is a high-performance framework built on Bun, designed for type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 02:50:34", "type": "best_practices", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Elysia - Ergonomic Framework for Humans", "og:title": "Elysia - Ergonomic Framework for Humans", "og:description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "description": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "title": "Elysia - Ergonomic Framework for Humans | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "language": "en-US", "ogDescription": "Elysia is an ergonomic framework for Humans. With end-to-end type safety and great developer experience. Elysia is familiar, fast, and first class TypeScript support with well-thought integration between services whether it's tRPC, Swagger or WebSocket. Elysia got you covered, start building next generation TypeScript web servers today.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "70aa2a1b-f2b0-4bb7-9fd7-948c17cc1dcc", "sourceURL": "https://elysiajs.com", "url": "https://elysiajs.com/", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia Blog Updates is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia Blog Updates in elysiajs.\n\n# Elysia Blog Updates\n\nA collection of updates and features introduced in various versions of Elysia.Here's a quick rundown of what this is about:\n\n## Elysia 1.2 - You and Me\n\nIntroducing Adapter for universal runtime support, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.\n\n## Elysia 1.1 - Grown-up's Paradise\n\nIntroducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconciliation. Generator response stream.\n\n## Elysia 1.0 - Lament of the Fallen\n\nIntroducing Sucrose, a better static code analysis engine, improved startup time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.\n\n## Introducing Elysia 0.8 - Gate of Steiner\n\nIntroducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvements.\n\n## Introducing Elysia 0.7 - Stellar Stellar\n\nIntroducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.\n\n## Introducing Elysia 0.6 - This Game\n\nIntroducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.\n\n## Accelerate your next Prisma server with Elysia\n\nWith the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerates our creation of backend web server in terms of both developer experience and performance.\n\n## Introducing Elysia 0.5 - Radiant\n\nIntroducing Static Code Analysis, New router Memoirist, TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.\n\n## Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)\n\nIntroducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn.\n\n## Elysia with Supabase. Your next backend at sonic speed\n\nElysia, and Supabase are a great match for rapidly developing prototypes in less than an hour, let's take a look at how we can take advantage of both.\n\n## Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]\n\nIntroducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.\n\n## Integrate existing tRPC server to Bun with Elysia\n\nLearn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.\n\n## Introducing Elysia 0.2 - The Blessing\n\nIntroducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "overview", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia 1.2 - you and me in elysiajs?\n\nAssistant: To elysia 1.2 - you and me in elysiajs, here's what you do:\nIntroducing Adapter for universal runtime support, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia 1.1 - grown-up's paradise in elysiajs?\n\nAssistant: To elysia 1.1 - grown-up's paradise in elysiajs, here's what you do:\nIntroducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconciliation. Generator response stream..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia 1.0 - lament of the fallen in elysiajs?\n\nAssistant: To elysia 1.0 - lament of the fallen in elysiajs, here's what you do:\nIntroducing Sucrose, a better static code analysis engine, improved startup time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.8 - gate of steiner in elysiajs?\n\nAssistant: To introducing elysia 0.8 - gate of steiner in elysiajs, here's what you do:\nIntroducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvements..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.7 - stellar stellar in elysiajs?\n\nAssistant: To introducing elysia 0.7 - stellar stellar in elysiajs, here's what you do:\nIntroducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.6 - this game in elysiajs?\n\nAssistant: To introducing elysia 0.6 - this game in elysiajs, here's what you do:\nIntroducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I accelerate your next prisma server with elysia in elysiajs?\n\nAssistant: To accelerate your next prisma server with elysia in elysiajs, here's what you do:\nWith the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerates our creation of backend web server in terms of both developer experience and performance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.5 - radiant in elysiajs?\n\nAssistant: To introducing elysia 0.5 - radiant in elysiajs, here's what you do:\nIntroducing Static Code Analysis, New router Memoirist, TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.4 - 月夜の音楽会 (moonlit night concert) in elysiajs?\n\nAssistant: To introducing elysia 0.4 - 月夜の音楽会 (moonlit night concert) in elysiajs, here's what you do:\nIntroducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia with supabase. your next backend at sonic speed in elysiajs?\n\nAssistant: To elysia with supabase. your next backend at sonic speed in elysiajs, here's what you do:\nElysia, and Supabase are a great match for rapidly developing prototypes in less than an hour, let's take a look at how we can take advantage of both..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.3 - 大地の閾を探して [looking for edge of ground] in elysiajs?\n\nAssistant: To introducing elysia 0.3 - 大地の閾を探して [looking for edge of ground] in elysiajs, here's what you do:\nIntroducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I integrate existing trpc server to bun with elysia in elysiajs?\n\nAssistant: To integrate existing trpc server to bun with elysia in elysiajs, here's what you do:\nLearn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introducing elysia 0.2 - the blessing in elysiajs?\n\nAssistant: To introducing elysia 0.2 - the blessing in elysiajs, here's what you do:\nIntroducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog", "title": "Elysia Blog Updates", "description": "A collection of updates and features introduced in various versions of Elysia.", "has_code_examples": false, "has_best_practices": false, "section_count": 13, "timestamp": "2025-03-01 02:53:39", "type": "section_detail", "page_metadata": {"og:image:height": "1080", "ogTitle": "Blog - ElysiaJS", "language": "en-US", "description": "Update of ElysiaJS, from core maintainers", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Update of ElysiaJS from core maintainers", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:title": "Blog - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "Update of ElysiaJS from core maintainers", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Elysia Blog | ElysiaJS", "scrapeId": "9e9b0f27-487a-4628-b698-05e6aa614893", "sourceURL": "https://elysiajs.com/blog", "url": "https://elysiajs.com/blog", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Integration with Expo is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Integration with Expo in elysiajs.\n\n# Integration with Expo\n\nStarting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.Here's a quick rundown of what this is about:\n\n## Integration Steps\n\n1. Create an Expo app if it doesn't exist with:\n\n```typescript\nbun create expo-app --template tabs\n```\n\n2. Create **app/[...slugs]+api.ts**\n3. In **[...slugs]+api.ts**, create or import an existing Elysia server\n4. Export the handler with the name of method you want to expose\n\n```typescript\n// app/[...slugs]+api.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hello Next')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nElysia will work normally as expected because of WinterCG compliance, however, some plugins like **Elysia Static** may not work if you are running Expo on Node.\n\nYou can treat the Elysia server as if normal Expo API route.\n\nWith this approach, you can have co-location of both frontend and backend in a single repository and have [End-to-end type safety with Eden](https://elysiajs.com/eden/overview.html) with both client-side and server action.\n\nPlease refer to [API route](https://docs.expo.dev/router/reference/api-routes/) for more information.\n\n## Prefix\n\nIf you place an Elysia server not in the root directory of the app router, you need to annotate the prefix to the Elysia server.\n\nFor example, if you place Elysia server in **app/api/[...slugs]+api.ts**, you need to annotate prefix as **/api** to Elysia server.\n\n```typescript\n// app/api/[...slugs]+api.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia({ prefix: '/api' })\n    .get('/', () => 'hi')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nThis will ensure that Elysia routing will work properly in any location you place in.\n\n## Deployment\n\nYou can either directly use API route using Elysia and deploy as normal Elysia app normally if need or using [experimental Expo server runtime](https://docs.expo.dev/router/reference/api-routes/#deployment).\n\nIf you are using Expo server runtime, you may use `expo export` command to create optimized build for your expo app, this will include an Expo function which is using Elysia at **dist/server/_expo/functions/[...slugs]+api.js**\n\nTIP\n\nPlease note that Expo Functions are treated as Edge functions instead of normal server, so running the Edge function directly will not allocate any port.\n\nYou may use the Expo function adapter provided by Expo to deploy your Edge Function.\n\nCurrently Expo support the following adapter:\n\n- [Express](https://docs.expo.dev/router/reference/api-routes/#express)\n- [Netlify](https://docs.expo.dev/router/reference/api-routes/#netlify)\n- [Vercel](https://docs.expo.dev/router/reference/api-routes/#vercel)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/integrations/expo", "title": "Integration with Expo", "description": "Starting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:57", "type": "overview", "page_metadata": {"ogTitle": "Integration with Expo - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with Expo - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "title": "Integration with Expo - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "language": "en-US", "ogDescription": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:width": "1920", "description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "c89650af-9ef7-44e2-a3b0-76a971944b40", "sourceURL": "https://elysiajs.com/integrations/expo", "url": "https://elysiajs.com/integrations/expo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I integration steps in elysiajs?\n\nAssistant: To integration steps in elysiajs, here's what you do:\n1. Create an Expo app if it doesn't exist with:\n\n```typescript\nbun create expo-app --template tabs\n```\n\n2. Create **app/[...slugs]+api.ts**\n3. In **[...slugs]+api.ts**, create or import an existing Elysia server\n4. Export the handler with the name of method you want to expose\n\n```typescript\n// app/[...slugs]+api.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hello Next')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nElysia will work normally as expected because of WinterCG compliance, however, some plugins like **Elysia Static** may not work if you are running Expo on Node.\n\nYou can treat the Elysia server as if normal Expo API route.\n\nWith this approach, you can have co-location of both frontend and backend in a single repository and have [End-to-end type safety with Eden](https://elysiajs.com/eden/overview.html) with both client-side and server action.\n\nPlease refer to [API route](https://docs.expo.dev/router/reference/api-routes/) for more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/expo", "title": "Integration with Expo", "description": "Starting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:57", "type": "section_detail", "page_metadata": {"ogTitle": "Integration with Expo - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with Expo - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "title": "Integration with Expo - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "language": "en-US", "ogDescription": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:width": "1920", "description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "c89650af-9ef7-44e2-a3b0-76a971944b40", "sourceURL": "https://elysiajs.com/integrations/expo", "url": "https://elysiajs.com/integrations/expo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I prefix in elysiajs?\n\nAssistant: To prefix in elysiajs, here's what you do:\nIf you place an Elysia server not in the root directory of the app router, you need to annotate the prefix to the Elysia server.\n\nFor example, if you place Elysia server in **app/api/[...slugs]+api.ts**, you need to annotate prefix as **/api** to Elysia server.\n\n```typescript\n// app/api/[...slugs]+api.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia({ prefix: '/api' })\n    .get('/', () => 'hi')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nThis will ensure that Elysia routing will work properly in any location you place in..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/expo", "title": "Integration with Expo", "description": "Starting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:57", "type": "section_detail", "page_metadata": {"ogTitle": "Integration with Expo - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with Expo - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "title": "Integration with Expo - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "language": "en-US", "ogDescription": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:width": "1920", "description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "c89650af-9ef7-44e2-a3b0-76a971944b40", "sourceURL": "https://elysiajs.com/integrations/expo", "url": "https://elysiajs.com/integrations/expo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I deployment in elysiajs?\n\nAssistant: To deployment in elysiajs, here's what you do:\nYou can either directly use API route using Elysia and deploy as normal Elysia app normally if need or using [experimental Expo server runtime](https://docs.expo.dev/router/reference/api-routes/#deployment).\n\nIf you are using Expo server runtime, you may use `expo export` command to create optimized build for your expo app, this will include an Expo function which is using Elysia at **dist/server/_expo/functions/[...slugs]+api.js**\n\nTIP\n\nPlease note that Expo Functions are treated as Edge functions instead of normal server, so running the Edge function directly will not allocate any port.\n\nYou may use the Expo function adapter provided by Expo to deploy your Edge Function.\n\nCurrently Expo support the following adapter:\n\n- [Express](https://docs.expo.dev/router/reference/api-routes/#express)\n- [Netlify](https://docs.expo.dev/router/reference/api-routes/#netlify)\n- [Vercel](https://docs.expo.dev/router/reference/api-routes/#vercel).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/expo", "title": "Integration with Expo", "description": "Starting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:57", "type": "section_detail", "page_metadata": {"ogTitle": "Integration with Expo - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with Expo - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "title": "Integration with Expo - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "language": "en-US", "ogDescription": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:width": "1920", "description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "c89650af-9ef7-44e2-a3b0-76a971944b40", "sourceURL": "https://elysiajs.com/integrations/expo", "url": "https://elysiajs.com/integrations/expo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Integration with Expo in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Creating an Expo App**:\n\n```yaml\nbun create expo-app --template tabs\n```\n\nThis snippet shows you how to creating an expo app, which is an important aspect of integration with expo.\n\n**Elysia Server Example**:\n\n```yaml\n// app/[...slugs]+api.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hello Next')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nThis snippet shows you how to elysia server example, which is an important aspect of integration with expo.\n\n**Elysia Server with Prefix Example**:\n\n```yaml\n// app/api/[...slugs]+api.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia({ prefix: '/api' })\n    .get('/', () => 'hi')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nThis snippet shows you how to elysia server with prefix example, which is an important aspect of integration with expo.\n\n**Expo Export Command**:\n\n```yaml\nexpo export\n```\n\nThis snippet shows you how to expo export command, which is an important aspect of integration with expo.\n\n", "metadata": {"source_url": "https://elysiajs.com/integrations/expo", "title": "Integration with Expo", "description": "Starting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:57", "type": "code_examples", "page_metadata": {"ogTitle": "Integration with Expo - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with Expo - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "title": "Integration with Expo - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "language": "en-US", "ogDescription": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:width": "1920", "description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "c89650af-9ef7-44e2-a3b0-76a971944b40", "sourceURL": "https://elysiajs.com/integrations/expo", "url": "https://elysiajs.com/integrations/expo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Integration with Expo in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia will work normally as expected because of WinterCG compliance, however, some plugins like Elysia Static may not work if you are running Expo on Node.\n\nPlease note that Expo Functions are treated as Edge functions instead of normal server, so running the Edge function directly will not allocate any port.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/integrations/expo", "title": "Integration with Expo", "description": "Starting from Expo SDK 50, and App Router v3, Expo allows us to create API route directly in an Expo app.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:53:57", "type": "best_practices", "page_metadata": {"ogTitle": "Integration with Expo - ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with Expo - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "title": "Integration with Expo - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "language": "en-US", "ogDescription": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:width": "1920", "description": "With Expo App Router, you can run Elysia on Expo route. Elysia will work normally as expected thanks to WinterCG compliance.", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "c89650af-9ef7-44e2-a3b0-76a971944b40", "sourceURL": "https://elysiajs.com/integrations/expo", "url": "https://elysiajs.com/integrations/expo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Validation is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Validation in elysiajs.\n\n# Validation\n\nThe purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.Here's a quick rundown of what this is about:\n\n## TypeBox\n\nElysia.t is a schema builder based on TypeBox that provides type-safety at runtime, compile-time, and for OpenAPI schemas, enabling the generation of OpenAPI/Swagger documentation.\n\nTypeBox is a very fast, lightweight, and type-safe runtime validation library for TypeScript. Elysia extends and customizes the default behavior of TypeBox to match server-side validation requirements.\n\nWe believe that an integration like this should be handled by the framework by default, rather than relying on the user to set up a custom type for every project.\n\n## Schema type\n\nElysia supports declarative schemas with the following types:\n\nThese properties should be provided as the third argument of the route handler to validate the incoming request.\n\n## Body\n\nAn incoming HTTP Message is the data sent to the server. It can be in the form of JSON, form-data, or any other format.\n\n## Query\n\nQuery is the data sent through the URL. It can be in the form of ?key=value.\n\n## Params\n\nParams or path parameters are the data sent through the URL path.\n\n## Headers\n\nHeaders are the data sent through the request's header.\n\n## Cookie\n\nCookie is the data sent through the request's cookie.\n\n## Response\n\nResponse is the data returned from the handler.\n\n## Optional\n\nTo make a field optional, use t.Optional.\n\n## Guard\n\nGuard can be used to apply a schema to multiple handlers.\n\n## Normalize\n\nYou can use the Elysia constructor to set the behavior for unknown fields on outgoing and incoming bodies via the normalize option.\n\n## Primitive Type\n\nThe TypeBox API is designed around and is similar to TypeScript types.\n\n## Honorable Mentions\n\nThe following are common patterns often found useful when creating a schema.\n\n## Custom Error\n\nTypeBox offers an additional \"error\" property, allowing us to return a custom error message if the field is invalid.\n\n## Reference Model\n\nSometimes you might find yourself declaring duplicate models or re-using the same model multiple times.\n\n## Multiple Models\n\nmodel accepts an object with the key as a model name and the value as the model definition.\n\n## Naming Convention\n\nDuplicate model names will cause Elysia to throw an error.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "overview", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typebox in elysiajs?\n\nAssistant: To typebox in elysiajs, here's what you do:\nElysia.t is a schema builder based on TypeBox that provides type-safety at runtime, compile-time, and for OpenAPI schemas, enabling the generation of OpenAPI/Swagger documentation.\n\nTypeBox is a very fast, lightweight, and type-safe runtime validation library for TypeScript. Elysia extends and customizes the default behavior of TypeBox to match server-side validation requirements.\n\nWe believe that an integration like this should be handled by the framework by default, rather than relying on the user to set up a custom type for every project..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I schema type in elysiajs?\n\nAssistant: To schema type in elysiajs, here's what you do:\nElysia supports declarative schemas with the following types:\n\nThese properties should be provided as the third argument of the route handler to validate the incoming request..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I body in elysiajs?\n\nAssistant: To body in elysiajs, here's what you do:\nAn incoming HTTP Message is the data sent to the server. It can be in the form of JSON, form-data, or any other format..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I query in elysiajs?\n\nAssistant: To query in elysiajs, here's what you do:\nQuery is the data sent through the URL. It can be in the form of ?key=value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I params in elysiajs?\n\nAssistant: To params in elysiajs, here's what you do:\nParams or path parameters are the data sent through the URL path..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I headers in elysiajs?\n\nAssistant: To headers in elysiajs, here's what you do:\nHeaders are the data sent through the request's header..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie in elysiajs?\n\nAssistant: To cookie in elysiajs, here's what you do:\nCookie is the data sent through the request's cookie..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I response in elysiajs?\n\nAssistant: To response in elysiajs, here's what you do:\nResponse is the data returned from the handler..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I optional in elysiajs?\n\nAssistant: To optional in elysiajs, here's what you do:\nTo make a field optional, use t.Optional..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I guard in elysiajs?\n\nAssistant: To guard in elysiajs, here's what you do:\nGuard can be used to apply a schema to multiple handlers..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I normalize in elysiajs?\n\nAssistant: To normalize in elysiajs, here's what you do:\nYou can use the Elysia constructor to set the behavior for unknown fields on outgoing and incoming bodies via the normalize option..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I primitive type in elysiajs?\n\nAssistant: To primitive type in elysiajs, here's what you do:\nThe TypeBox API is designed around and is similar to TypeScript types..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I honorable mentions in elysiajs?\n\nAssistant: To honorable mentions in elysiajs, here's what you do:\nThe following are common patterns often found useful when creating a schema..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I custom error in elysiajs?\n\nAssistant: To custom error in elysiajs, here's what you do:\nTypeBox offers an additional \"error\" property, allowing us to return a custom error message if the field is invalid..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reference model in elysiajs?\n\nAssistant: To reference model in elysiajs, here's what you do:\nSometimes you might find yourself declaring duplicate models or re-using the same model multiple times..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I multiple models in elysiajs?\n\nAssistant: To multiple models in elysiajs, here's what you do:\nmodel accepts an object with the key as a model name and the value as the model definition..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I naming convention in elysiajs?\n\nAssistant: To naming convention in elysiajs, here's what you do:\nDuplicate model names will cause Elysia to throw an error..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "section_detail", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Validation in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Elysia Setup**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to basic elysia setup, which is an important aspect of validation.\n\n**Schema Type Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', () => 'Hello World!', {\n        query: t.Object({\n            name: t.String()\n        }),\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to schema type example, which is an important aspect of validation.\n\n**Body Validation Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .post('/body', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to body validation example, which is an important aspect of validation.\n\n**Query Validation Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/query', ({ query }) => query, {\n        query: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to query validation example, which is an important aspect of validation.\n\n**Params Validation Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params }) => params, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to params validation example, which is an important aspect of validation.\n\n**Headers Validation Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/headers', ({ headers }) => headers, {\n        headers: t.Object({\n            authorization: t.String()\n        })\n    })\n```\n\nThis snippet shows you how to headers validation example, which is an important aspect of validation.\n\n**Cookie Validation Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/cookie', ({ cookie }) => cookie, {\n        cookie: t.Cookie({\n            cookieName: t.String()\n        })\n    })\n```\n\nThis snippet shows you how to cookie validation example, which is an important aspect of validation.\n\n**Response Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/response', () => {\n        return {\n            name: 'Jane Doe'\n        }\n    }, {\n        response: t.Object({\n            name: t.String()\n        })\n    })\n```\n\nThis snippet shows you how to response example, which is an important aspect of validation.\n\n**Optional Field Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/optional', ({ query }) => query, {\n        query: t.Optional(\n            t.Object({\n                name: t.String()\n            })\n        )\n    })\n```\n\nThis snippet shows you how to optional field example, which is an important aspect of validation.\n\n**Guard Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/none', ({ query }) => 'hi')\n    .guard({\n        query: t.Object({\n            name: t.String()\n        })\n    })\n    .get('/query', ({ query }) => query)\n    .listen(3000\n```\n\nThis snippet shows you how to guard example, which is an important aspect of validation.\n\n**Normalize Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia({\n    normalize: true\n})\n```\n\nThis snippet shows you how to normalize example, which is an important aspect of validation.\n\n**Primitive Type Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .post('/', ({ body }) => `Hello ${body}`, {\n        body: t.String()\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to primitive type example, which is an important aspect of validation.\n\n**Custom Error Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .post('/', () => 'Hello World!', {\n        body: t.Object({\n            x: t.Number({\n                error: 'x must be a number'\n            })\n        })\n    })\n    .listen(3000\n```\n\nThis snippet shows you how to custom error example, which is an important aspect of validation.\n\n**Reference Model Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nconst SignDTO = t.Object({\n    username: t.String(),\n    password: t.String()\n})\n\nconst app = new Elysia()\n    .post('/sign-in', ({ body }) => body, {\n        body: SignDTO,\n        response: SignDTO\n    })\n```\n\nThis snippet shows you how to reference model example, which is an important aspect of validation.\n\n**Multiple Models Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nexport const authModel = new Elysia()\n    .model({\n        number: t.Number(),\n        sign: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n```\n\nThis snippet shows you how to multiple models example, which is an important aspect of validation.\n\n", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "code_examples", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Validation in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia will parse headers as lower-case keys only. Please make sure that you are using lower-case field names when using header validation.\n\nWhen specifying query parameters, it's crucial to understand that all query parameter values must be represented as strings. This is due to how they are encoded and appended to the URL.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/essential/validation", "title": "Validation", "description": "The purpose of creating an API server is to take an input and process it. JavaScript allows any data to be any type. Elysia provides a tool to validate data out of the box to ensure that the data is in the correct format.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 02:54:29", "type": "best_practices", "page_metadata": {"ogTitle": "Schema - ElysiaJS", "ogDescription": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Schema - ElysiaJS", "title": "Schema - ElysiaJS | ElysiaJS", "description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "generator": "VitePress v1.6.3", "og:image:height": "1080", "og:description": "Schemas are strictly typed definitions, used to infer TypeScript's type and data validation of an incoming request and outgoing response. Elysia's schema validation is based on Sinclair's TypeBox, a TypeScript library for data validation.", "scrapeId": "69f35f92-72a9-47ac-9136-efd1cee67aaf", "sourceURL": "https://elysiajs.com/essential/validation", "url": "https://elysiajs.com/essential/validation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what OpenTelemetry is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain OpenTelemetry in elysiajs.\n\n# OpenTelemetry\n\nTo start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.Here's a quick rundown of what this is about:\n\n## Usage\n\nSee [opentelemetry](https://elysiajs.com/recipe/opentelemetry.html) for usage and utilities.\n\n## Config\n\nThis plugin extends OpenTelemetry SDK parameters options.\n\nBelow is a config which is accepted by the plugin\n\n### autoDetectResources - boolean\n\nDetect resources automatically from the environment using the default resource detectors.\n\ndefault: `true`\n\n### contextManager - ContextManager\n\nUse a custom context manager.\n\ndefault: `AsyncHooksContextManager`\n\n### textMapPropagator - TextMapPropagator\n\nUse a custom propagator.\n\ndefault: `CompositePropagator` using W3C Trace Context and Baggage\n\n### metricReader - MetricReader\n\nAdd a MetricReader that will be passed to the MeterProvider.\n\n### views - View[]\n\nA list of views to be passed to the MeterProvider.\n\nAccepts an array of View-instances. This parameter can be used to configure explicit bucket sizes of histogram metrics.\n\n### instrumentations - (Instrumentation | Instrumentation[])[]\n\nConfigure instrumentations.\n\nBy default `getNodeAutoInstrumentations` is enabled, if you want to enable them you can use either metapackage or configure each instrumentation individually.\n\ndefault: `getNodeAutoInstrumentations()`\n\n### resource - IResource\n\nConfigure a resource.\n\nResources may also be detected by using the autoDetectResources method of the SDK.\n\n### resourceDetectors - Array<Detector | DetectorSync>\n\nConfigure resource detectors. By default, the resource detectors are [envDetector, processDetector, hostDetector]. NOTE: In order to enable the detection, the parameter autoDetectResources has to be true.\n\nIf resourceDetectors was not set, you can also use the environment variable OTEL_NODE_RESOURCE_DETECTORS to enable only certain detectors, or completely disable them:\n\n- env\n- host\n- os\n- process\n- serviceinstance (experimental)\n- all - enable all resource detectors above\n- none - disable resource detection\n\nFor example, to enable only the env, host detectors:\n\n```bash\nexport OTEL_NODE_RESOURCE_DETECTORS=\"env,host\"\n```\n\n### sampler - Sampler\n\nConfigure a custom sampler. By default, all traces will be sampled.\n\n### serviceName - string\n\nNamespace to be identify as.\n\n### spanProcessors - SpanProcessor[]\n\nAn array of span processors to register to the tracer provider.\n\n### traceExporter - SpanExporter\n\nConfigure a trace exporter. If an exporter is configured, it will be used with a `BatchSpanProcessor`.\n\nIf an exporter OR span processor is not configured programmatically, this package will auto setup the default otlp exporter with http/protobuf protocol with a BatchSpanProcessor.\n\n### spanLimits - SpanLimits\n\nConfigure tracing parameters. These are the same trace parameters used to configure a tracer.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:42", "type": "overview", "page_metadata": {"language": "en-US", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\".", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "OpenTelemetry Plugin - ElysiaJS", "og:image:width": "1920", "scrapeId": "bcff5ffd-f9e3-450b-bd92-e26727fa2185", "sourceURL": "https://elysiajs.com/plugins/opentelemetry", "url": "https://elysiajs.com/plugins/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nSee [opentelemetry](https://elysiajs.com/recipe/opentelemetry.html) for usage and utilities..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:42", "type": "section_detail", "page_metadata": {"language": "en-US", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\".", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "OpenTelemetry Plugin - ElysiaJS", "og:image:width": "1920", "scrapeId": "bcff5ffd-f9e3-450b-bd92-e26727fa2185", "sourceURL": "https://elysiajs.com/plugins/opentelemetry", "url": "https://elysiajs.com/plugins/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nThis plugin extends OpenTelemetry SDK parameters options.\n\nBelow is a config which is accepted by the plugin\n\n### autoDetectResources - boolean\n\nDetect resources automatically from the environment using the default resource detectors.\n\ndefault: `true`\n\n### contextManager - ContextManager\n\nUse a custom context manager.\n\ndefault: `AsyncHooksContextManager`\n\n### textMapPropagator - TextMapPropagator\n\nUse a custom propagator.\n\ndefault: `CompositePropagator` using W3C Trace Context and Baggage\n\n### metricReader - MetricReader\n\nAdd a MetricReader that will be passed to the MeterProvider.\n\n### views - View[]\n\nA list of views to be passed to the MeterProvider.\n\nAccepts an array of View-instances. This parameter can be used to configure explicit bucket sizes of histogram metrics.\n\n### instrumentations - (Instrumentation | Instrumentation[])[]\n\nConfigure instrumentations.\n\nBy default `getNodeAutoInstrumentations` is enabled, if you want to enable them you can use either metapackage or configure each instrumentation individually.\n\ndefault: `getNodeAutoInstrumentations()`\n\n### resource - IResource\n\nConfigure a resource.\n\nResources may also be detected by using the autoDetectResources method of the SDK.\n\n### resourceDetectors - Array<Detector | DetectorSync>\n\nConfigure resource detectors. By default, the resource detectors are [envDetector, processDetector, hostDetector]. NOTE: In order to enable the detection, the parameter autoDetectResources has to be true.\n\nIf resourceDetectors was not set, you can also use the environment variable OTEL_NODE_RESOURCE_DETECTORS to enable only certain detectors, or completely disable them:\n\n- env\n- host\n- os\n- process\n- serviceinstance (experimental)\n- all - enable all resource detectors above\n- none - disable resource detection\n\nFor example, to enable only the env, host detectors:\n\n```bash\nexport OTEL_NODE_RESOURCE_DETECTORS=\"env,host\"\n```\n\n### sampler - Sampler\n\nConfigure a custom sampler. By default, all traces will be sampled.\n\n### serviceName - string\n\nNamespace to be identify as.\n\n### spanProcessors - SpanProcessor[]\n\nAn array of span processors to register to the tracer provider.\n\n### traceExporter - SpanExporter\n\nConfigure a trace exporter. If an exporter is configured, it will be used with a `BatchSpanProcessor`.\n\nIf an exporter OR span processor is not configured programmatically, this package will auto setup the default otlp exporter with http/protobuf protocol with a BatchSpanProcessor.\n\n### spanLimits - SpanLimits\n\nConfigure tracing parameters. These are the same trace parameters used to configure a tracer..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:42", "type": "section_detail", "page_metadata": {"language": "en-US", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\".", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "OpenTelemetry Plugin - ElysiaJS", "og:image:width": "1920", "scrapeId": "bcff5ffd-f9e3-450b-bd92-e26727fa2185", "sourceURL": "https://elysiajs.com/plugins/opentelemetry", "url": "https://elysiajs.com/plugins/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for OpenTelemetry in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**OpenTelemetry Setup Example**:\n\n```yaml\nimport {\nElysia } from 'elysia'\nimport {\nopentelemetry } from '@elysiajs/opentelemetry'\n\nimport {\nBatchSpanProcessor } from '@opentelemetry/sdk-trace-node'\nimport {\nOTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-proto'\n\nnew\nElysia()\n\t.\nuse(\n\nopentelemetry({\n\nspanProcessors: [\n\t\tnew\nBatchSpanProcessor(\n\t\t\tnew\nOTLPTraceExporter()\n\t\t)\n\t]\n})\n)\n```\n\nThis snippet shows you how to opentelemetry setup example, which is an important aspect of opentelemetry.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:42", "type": "code_examples", "page_metadata": {"language": "en-US", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\".", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "OpenTelemetry Plugin - ElysiaJS", "og:image:width": "1920", "scrapeId": "bcff5ffd-f9e3-450b-bd92-e26727fa2185", "sourceURL": "https://elysiajs.com/plugins/opentelemetry", "url": "https://elysiajs.com/plugins/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using OpenTelemetry in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia OpenTelemetry will collect span of any library compatible OpenTelemetry standard, and will apply parent and child span automatically.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:54:42", "type": "best_practices", "page_metadata": {"language": "en-US", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\".", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "OpenTelemetry Plugin - ElysiaJS", "og:image:width": "1920", "scrapeId": "bcff5ffd-f9e3-450b-bd92-e26727fa2185", "sourceURL": "https://elysiajs.com/plugins/opentelemetry", "url": "https://elysiajs.com/plugins/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what JWT Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain JWT Plugin in elysiajs.\n\n# JWT Plugin\n\nThis plugin adds support for using JWT in Elysia handlerHere's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\n```bash\nbun add @elysiajs/jwt\n```\n\n## Usage Example\n\nThen use it:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { jwt } from '@elysiajs/jwt'\n\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'Fischl von Luftschloss Narfidort'\n        })\n    )\n    .get('/sign/:name', async ({ jwt, params: { name }, cookie: { auth } }) => {\n     const value = await jwt.sign(name)\n\n        auth.set({\n            value,\n            httpOnly: true,\n            maxAge: 7 * 86400,\n            path: '/profile',\n        })\n\n        return `Sign in as ${value}`\n    })\n    .get('/profile', async ({ jwt, error, cookie: { auth } }) => {\n        const profile = await jwt.verify(auth.value)\n\n        if (!profile)\n            return error(401, 'Unauthorized')\n\n        return `Hello ${profile.name}`\n    })\n    .listen(3000)\n```\n\nAnother example:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { jwt } from '@elysiajs/jwt'\n\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'Fischl von Luftschloss Narfidort'\n        })\n    )\n    .get('/sign/:name', ({ jwt, params: { name } }) => {\n     return jwt.sign(name)\n    })\n    .get('/profile', async ({ jwt, error, headers: { authorization } }) => {\n        const profile = await jwt.verify(authorization)\n\n        if (!profile)\n            return error(401, 'Unauthorized')\n\n        return `Hello ${profile.name}`\n    })\n    .listen(3000)\n```\n\n## Config\n\nThis plugin extends config from [jose](https://github.com/panva/jose).\n\nBelow is a config that is accepted by the plugin.\n\n### name\nName to register `jwt` function as.\n\nFor example, `jwt` function will be registered with a custom name.\n\n```typescript\napp\n    .use(\n        jwt({\n            name: 'myJWTNamespace',\n            secret: process.env.JWT_SECRETS!\n        })\n    )\n    .get('/sign/:name', ({ myJWTNamespace, params }) => {\n        return myJWTNamespace.sign(params)\n    })\n```\n\nBecause some might need to use multiple `jwt` with different configs in a single server, explicitly registering the JWT function with a different name is needed.\n\n### secret\nThe private key to sign JWT payload with.\n\n### schema\nType strict validation for JWT payload.\n\n### alg\n@default `HS256`\nSigning Algorithm to sign JWT payload with.\nPossible properties for jose are: HS256 HS384 HS512 PS256 PS384 PS512 RS256 RS384 RS512 ES256 ES256K ES384 ES512 EdDSA\n\n### iss\nThe issuer claim identifies the principal that issued the JWT as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.1)\n\nTLDR; is usually (the domain) name of the signer.\n\n### sub\nThe subject claim identifies the principal that is the subject of the JWT.\nThe claims in a JWT are normally statements about the subject as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.2)\n\n### aud\nThe audience claim identifies the recipients that the JWT is intended for.\nEach principal intended to process the JWT MUST identify itself with a value in the audience claim as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3)\n\n### jti\nJWT ID claim provides a unique identifier for the JWT as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.7)\n\n### nbf\nThe \"not before\" claim identifies the time before which the JWT must not be accepted for processing as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.5)\n\n### exp\nThe expiration time claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.4)\n\n### iat\nThe \"issued at\" claim identifies the time at which the JWT was issued.\nThis claim can be used to determine the age of the JWT as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.6)\n\n### b64\nThis JWS Extension Header Parameter modifies the JWS Payload representation and the JWS Signing input computation as per [RFC7797](https://www.rfc-editor.org/rfc/rfc7797).\n\n### kid\nA hint indicating which key was used to secure the JWS.\nThis parameter allows originators to explicitly signal a change of key to recipients as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.4)\n\n### x5t\n(X.509 certificate SHA-1 thumbprint) header parameter is a base64url-encoded SHA-1 digest of the DER encoding of the X.509 certificate [RFC5280](https://www.rfc-editor.org/rfc/rfc5280) corresponding to the key used to digitally sign the JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.7)\n\n### x5c\n(X.509 certificate chain) header parameter contains the X.509 public key certificate or certificate chain [RFC5280](https://www.rfc-editor.org/rfc/rfc5280) corresponding to the key used to digitally sign the JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.6)\n\n### x5u\n(X.509 URL) header parameter is a URI [RFC3986](https://www.rfc-editor.org/rfc/rfc3986) that refers to a resource for the X.509 public key certificate or certificate chain [RFC5280] corresponding to the key used to digitally sign the JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.5)\n\n### jwk\nThe \"jku\" (JWK Set URL) Header Parameter is a URI [RFC3986] that refers to a resource for a set of JSON-encoded public keys, one of which corresponds to the key used to digitally sign the JWS.\nThe keys MUST be encoded as a JWK Set [JWK] as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.2)\n\n### typ\nThe `typ` (type) Header Parameter is used by JWS applications to declare the media type [IANA.MediaTypes] of this complete JWS.\nThis is intended for use by the application when more than one kind of object could be present in an application data structure that can contain a JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.9)\n\n### ctr\nContent-Type parameter is used by JWS applications to declare the media type [IANA.MediaTypes] of the secured content (the payload).\nThis is intended for use by the application when more than one kind of object could be present in the JWS Payload as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.9)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/jwt", "title": "JWT Plugin", "description": "This plugin adds support for using JWT in Elysia handler", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:58:41", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "title": "JWT Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\".", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\"."], "og:title": "JWT Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "JWT Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "scrapeId": "c488008d-ad16-4be7-9eeb-390df64aaeec", "sourceURL": "https://elysiajs.com/plugins/jwt", "url": "https://elysiajs.com/plugins/jwt", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\n```bash\nbun add @elysiajs/jwt\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/jwt", "title": "JWT Plugin", "description": "This plugin adds support for using JWT in Elysia handler", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:58:41", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "title": "JWT Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\".", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\"."], "og:title": "JWT Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "JWT Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "scrapeId": "c488008d-ad16-4be7-9eeb-390df64aaeec", "sourceURL": "https://elysiajs.com/plugins/jwt", "url": "https://elysiajs.com/plugins/jwt", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage example in elysiajs?\n\nAssistant: To usage example in elysiajs, here's what you do:\nThen use it:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { jwt } from '@elysiajs/jwt'\n\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'Fischl von Luftschloss Narfidort'\n        })\n    )\n    .get('/sign/:name', async ({ jwt, params: { name }, cookie: { auth } }) => {\n     const value = await jwt.sign(name)\n\n        auth.set({\n            value,\n            httpOnly: true,\n            maxAge: 7 * 86400,\n            path: '/profile',\n        })\n\n        return `Sign in as ${value}`\n    })\n    .get('/profile', async ({ jwt, error, cookie: { auth } }) => {\n        const profile = await jwt.verify(auth.value)\n\n        if (!profile)\n            return error(401, 'Unauthorized')\n\n        return `Hello ${profile.name}`\n    })\n    .listen(3000)\n```\n\nAnother example:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { jwt } from '@elysiajs/jwt'\n\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'Fischl von Luftschloss Narfidort'\n        })\n    )\n    .get('/sign/:name', ({ jwt, params: { name } }) => {\n     return jwt.sign(name)\n    })\n    .get('/profile', async ({ jwt, error, headers: { authorization } }) => {\n        const profile = await jwt.verify(authorization)\n\n        if (!profile)\n            return error(401, 'Unauthorized')\n\n        return `Hello ${profile.name}`\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/jwt", "title": "JWT Plugin", "description": "This plugin adds support for using JWT in Elysia handler", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:58:41", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "title": "JWT Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\".", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\"."], "og:title": "JWT Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "JWT Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "scrapeId": "c488008d-ad16-4be7-9eeb-390df64aaeec", "sourceURL": "https://elysiajs.com/plugins/jwt", "url": "https://elysiajs.com/plugins/jwt", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nThis plugin extends config from [jose](https://github.com/panva/jose).\n\nBelow is a config that is accepted by the plugin.\n\n### name\nName to register `jwt` function as.\n\nFor example, `jwt` function will be registered with a custom name.\n\n```typescript\napp\n    .use(\n        jwt({\n            name: 'myJWTNamespace',\n            secret: process.env.JWT_SECRETS!\n        })\n    )\n    .get('/sign/:name', ({ myJWTNamespace, params }) => {\n        return myJWTNamespace.sign(params)\n    })\n```\n\nBecause some might need to use multiple `jwt` with different configs in a single server, explicitly registering the JWT function with a different name is needed.\n\n### secret\nThe private key to sign JWT payload with.\n\n### schema\nType strict validation for JWT payload.\n\n### alg\n@default `HS256`\nSigning Algorithm to sign JWT payload with.\nPossible properties for jose are: HS256 HS384 HS512 PS256 PS384 PS512 RS256 RS384 RS512 ES256 ES256K ES384 ES512 EdDSA\n\n### iss\nThe issuer claim identifies the principal that issued the JWT as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.1)\n\nTLDR; is usually (the domain) name of the signer.\n\n### sub\nThe subject claim identifies the principal that is the subject of the JWT.\nThe claims in a JWT are normally statements about the subject as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.2)\n\n### aud\nThe audience claim identifies the recipients that the JWT is intended for.\nEach principal intended to process the JWT MUST identify itself with a value in the audience claim as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.3)\n\n### jti\nJWT ID claim provides a unique identifier for the JWT as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.7)\n\n### nbf\nThe \"not before\" claim identifies the time before which the JWT must not be accepted for processing as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.5)\n\n### exp\nThe expiration time claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.4)\n\n### iat\nThe \"issued at\" claim identifies the time at which the JWT was issued.\nThis claim can be used to determine the age of the JWT as per [RFC7519](https://www.rfc-editor.org/rfc/rfc7519#section-4.1.6)\n\n### b64\nThis JWS Extension Header Parameter modifies the JWS Payload representation and the JWS Signing input computation as per [RFC7797](https://www.rfc-editor.org/rfc/rfc7797).\n\n### kid\nA hint indicating which key was used to secure the JWS.\nThis parameter allows originators to explicitly signal a change of key to recipients as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.4)\n\n### x5t\n(X.509 certificate SHA-1 thumbprint) header parameter is a base64url-encoded SHA-1 digest of the DER encoding of the X.509 certificate [RFC5280](https://www.rfc-editor.org/rfc/rfc5280) corresponding to the key used to digitally sign the JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.7)\n\n### x5c\n(X.509 certificate chain) header parameter contains the X.509 public key certificate or certificate chain [RFC5280](https://www.rfc-editor.org/rfc/rfc5280) corresponding to the key used to digitally sign the JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.6)\n\n### x5u\n(X.509 URL) header parameter is a URI [RFC3986](https://www.rfc-editor.org/rfc/rfc3986) that refers to a resource for the X.509 public key certificate or certificate chain [RFC5280] corresponding to the key used to digitally sign the JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.5)\n\n### jwk\nThe \"jku\" (JWK Set URL) Header Parameter is a URI [RFC3986] that refers to a resource for a set of JSON-encoded public keys, one of which corresponds to the key used to digitally sign the JWS.\nThe keys MUST be encoded as a JWK Set [JWK] as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.2)\n\n### typ\nThe `typ` (type) Header Parameter is used by JWS applications to declare the media type [IANA.MediaTypes] of this complete JWS.\nThis is intended for use by the application when more than one kind of object could be present in an application data structure that can contain a JWS as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.9)\n\n### ctr\nContent-Type parameter is used by JWS applications to declare the media type [IANA.MediaTypes] of the secured content (the payload).\nThis is intended for use by the application when more than one kind of object could be present in the JWS Payload as per [RFC7515](https://www.rfc-editor.org/rfc/rfc7515#section-4.1.9).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/jwt", "title": "JWT Plugin", "description": "This plugin adds support for using JWT in Elysia handler", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:58:41", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "title": "JWT Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\".", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\"."], "og:title": "JWT Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "JWT Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "scrapeId": "c488008d-ad16-4be7-9eeb-390df64aaeec", "sourceURL": "https://elysiajs.com/plugins/jwt", "url": "https://elysiajs.com/plugins/jwt", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for JWT Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**JWT Sign Example**:\n\n```yaml\n```typescript\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'Fischl von Luftschloss Narfidort'\n        })\n    )\n    .get('/sign/:name', async ({ jwt, params: { name }, cookie: { auth } }) => {\n     const value = await jwt.sign(name)\n\n        auth.set({\n            value,\n            httpOnly: true,\n            maxAge: 7 * 86400,\n            path: '/profile',\n        })\n\n        return `Sign in as ${value}`\n    })\n    .get('/profile', async ({ jwt, error, cookie: { auth } }) => {\n        const profile = await jwt.verify(auth.value)\n\n        if (!profile)\n            return error(401, 'Unauthorized')\n\n        return `Hello ${profile.name}`\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to jwt sign example, which is an important aspect of jwt plugin.\n\n**JWT Verify Example**:\n\n```yaml\n```typescript\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'Fischl von Luftschloss Narfidort'\n        })\n    )\n    .get('/sign/:name', ({ jwt, params: { name } }) => {\n     return jwt.sign(name)\n    })\n    .get('/profile', async ({ jwt, error, headers: { authorization } }) => {\n        const profile = await jwt.verify(authorization)\n\n        if (!profile)\n            return error(401, 'Unauthorized')\n\n        return `Hello ${profile.name}`\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to jwt verify example, which is an important aspect of jwt plugin.\n\n**Config Example**:\n\n```yaml\n```typescript\napp\n    .use(\n        jwt({\n            name: 'myJWTNamespace',\n            secret: process.env.JWT_SECRETS!\n        })\n    )\n    .get('/sign/:name', ({ myJWTNamespace, params }) => {\n        return myJWTNamespace.sign(params)\n    })\n```\n```\n\nThis snippet shows you how to config example, which is an important aspect of jwt plugin.\n\n**Set JWT Expiration Date Example**:\n\n```yaml\n```typescript\nconst app = new Elysia()\n    .use(\n        jwt({\n            name: 'jwt',\n            secret: 'kunikuzushi',\n            exp: '7d'\n        })\n    )\n    .get('/sign/:name', async ({ jwt, params }) => jwt.sign(params))\n```\n```\n\nThis snippet shows you how to set jwt expiration date example, which is an important aspect of jwt plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/jwt", "title": "JWT Plugin", "description": "This plugin adds support for using JWT in Elysia handler", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:58:41", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "title": "JWT Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\".", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\"."], "og:title": "JWT Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "JWT Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "scrapeId": "c488008d-ad16-4be7-9eeb-390df64aaeec", "sourceURL": "https://elysiajs.com/plugins/jwt", "url": "https://elysiajs.com/plugins/jwt", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using JWT Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nExplicitly register the JWT function with a different name if using multiple JWTs with different configs in a single server.\n\nUse environment variables for sensitive information like JWT secrets.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/jwt", "title": "JWT Plugin", "description": "This plugin adds support for using JWT in Elysia handler", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 02:58:41", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "title": "JWT Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\".", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using JWT (JSON Web Token) in Elysia server. Start by installing the plugin with \"bun add @elysiajs/jwt\"."], "og:title": "JWT Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "JWT Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "scrapeId": "c488008d-ad16-4be7-9eeb-390df64aaeec", "sourceURL": "https://elysiajs.com/plugins/jwt", "url": "https://elysiajs.com/plugins/jwt", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia Plugins Overview is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia Plugins Overview in elysiajs.\n\n# Elysia Plugins Overview\n\nAn overview of the official and community plugins available for Elysia, a modular and lightweight web server framework.Here's a quick rundown of what this is about:\n\n## Overview\n\nElysia is designed to be modular and lightweight.\n\nFollowing the same idea as Arch Linux (btw, I use Arch):\n\n> Design decisions are made on a case-by-case basis through developer consensus\n\nThis is to ensure developers end up with a performant web server they intend to create. By extension, Elysia includes pre-built common pattern plugins for convenient developer usage.\n\n## Official plugins\n\n- [Bearer](https://elysiajs.com/plugins/bearer.html) - retrieve [Bearer](https://swagger.io/docs/specification/authentication/bearer-authentication/) token automatically\n- [CORS](https://elysiajs.com/plugins/cors.html) - set up [Cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)\n- [Cron](https://elysiajs.com/plugins/cron.html) - set up [cron](https://en.wikipedia.org/wiki/Cron) job\n- [Eden](https://elysiajs.com/eden/overview.html) - end-to-end type safety client for Elysia\n- [GraphQL Apollo](https://elysiajs.com/plugins/graphql-apollo.html) - run [Apollo GraphQL](https://www.apollographql.com/) on Elysia\n- [GraphQL Yoga](https://elysiajs.com/plugins/graphql-yoga.html) - run [GraphQL Yoga](https://github.com/dotansimha/graphql-yoga) on Elysia\n- [HTML](https://elysiajs.com/plugins/html.html) - handle HTML responses\n- [JWT](https://elysiajs.com/plugins/jwt.html) - authenticate with [JWTs](https://jwt.io/)\n- [OpenTelemetry](https://elysiajs.com/plugins/opentelemetry.html) - add support for OpenTelemetry\n- [Server Timing](https://elysiajs.com/plugins/server-timing.html) - audit performance bottlenecks with the [Server-Timing API](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing)\n- [Static](https://elysiajs.com/plugins/static.html) - serve static files/folders\n- [Stream](https://elysiajs.com/plugins/stream.html) - integrate response streaming and [server-sent events (SSEs)](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events)\n- [Swagger](https://elysiajs.com/plugins/swagger.html) - generate [Swagger](https://swagger.io/) documentation\n- [tRPC](https://elysiajs.com/plugins/trpc.html) - support [tRPC](https://trpc.io/)\n- [WebSocket](https://elysiajs.com/patterns/websocket.html) - support [WebSockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/overview", "title": "Elysia Plugins Overview", "description": "An overview of the official and community plugins available for Elysia, a modular and lightweight web server framework.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:57", "type": "overview", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further."], "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "title": "Plugin Overview - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "description": "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Swagger Plugin - ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "scrapeId": "8a350f54-416c-4026-9072-ce4a6ad2f344", "sourceURL": "https://elysiajs.com/plugins/overview", "url": "https://elysiajs.com/plugins/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I overview in elysiajs?\n\nAssistant: To overview in elysiajs, here's what you do:\nElysia is designed to be modular and lightweight.\n\nFollowing the same idea as Arch Linux (btw, I use Arch):\n\n> Design decisions are made on a case-by-case basis through developer consensus\n\nThis is to ensure developers end up with a performant web server they intend to create. By extension, Elysia includes pre-built common pattern plugins for convenient developer usage..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/overview", "title": "Elysia Plugins Overview", "description": "An overview of the official and community plugins available for Elysia, a modular and lightweight web server framework.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:57", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further."], "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "title": "Plugin Overview - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "description": "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Swagger Plugin - ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "scrapeId": "8a350f54-416c-4026-9072-ce4a6ad2f344", "sourceURL": "https://elysiajs.com/plugins/overview", "url": "https://elysiajs.com/plugins/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I official plugins in elysiajs?\n\nAssistant: To official plugins in elysiajs, here's what you do:\n- [Bearer](https://elysiajs.com/plugins/bearer.html) - retrieve [Bearer](https://swagger.io/docs/specification/authentication/bearer-authentication/) token automatically\n- [CORS](https://elysiajs.com/plugins/cors.html) - set up [Cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)\n- [Cron](https://elysiajs.com/plugins/cron.html) - set up [cron](https://en.wikipedia.org/wiki/Cron) job\n- [Eden](https://elysiajs.com/eden/overview.html) - end-to-end type safety client for Elysia\n- [GraphQL Apollo](https://elysiajs.com/plugins/graphql-apollo.html) - run [Apollo GraphQL](https://www.apollographql.com/) on Elysia\n- [GraphQL Yoga](https://elysiajs.com/plugins/graphql-yoga.html) - run [GraphQL Yoga](https://github.com/dotansimha/graphql-yoga) on Elysia\n- [HTML](https://elysiajs.com/plugins/html.html) - handle HTML responses\n- [JWT](https://elysiajs.com/plugins/jwt.html) - authenticate with [JWTs](https://jwt.io/)\n- [OpenTelemetry](https://elysiajs.com/plugins/opentelemetry.html) - add support for OpenTelemetry\n- [Server Timing](https://elysiajs.com/plugins/server-timing.html) - audit performance bottlenecks with the [Server-Timing API](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing)\n- [Static](https://elysiajs.com/plugins/static.html) - serve static files/folders\n- [Stream](https://elysiajs.com/plugins/stream.html) - integrate response streaming and [server-sent events (SSEs)](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events)\n- [Swagger](https://elysiajs.com/plugins/swagger.html) - generate [Swagger](https://swagger.io/) documentation\n- [tRPC](https://elysiajs.com/plugins/trpc.html) - support [tRPC](https://trpc.io/)\n- [WebSocket](https://elysiajs.com/patterns/websocket.html) - support [WebSockets](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/overview", "title": "Elysia Plugins Overview", "description": "An overview of the official and community plugins available for Elysia, a modular and lightweight web server framework.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:57", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further."], "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "title": "Plugin Overview - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "description": "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Swagger Plugin - ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "scrapeId": "8a350f54-416c-4026-9072-ce4a6ad2f344", "sourceURL": "https://elysiajs.com/plugins/overview", "url": "https://elysiajs.com/plugins/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia Plugins Overview in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nDesign decisions are made on a case-by-case basis through developer consensus.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/overview", "title": "Elysia Plugins Overview", "description": "An overview of the official and community plugins available for Elysia, a modular and lightweight web server framework.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:58:57", "type": "best_practices", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further."], "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "title": "Plugin Overview - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "description": "Elysia is designed to be modular and lightweight, which is why Elysia includes pre-built plugins involving common patterns for convenient developer usage. Elysia is enhanced by community plugins which customize it even further.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Swagger Plugin - ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "scrapeId": "8a350f54-416c-4026-9072-ce4a6ad2f344", "sourceURL": "https://elysiajs.com/plugins/overview", "url": "https://elysiajs.com/plugins/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Integration with SvelteKit is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Integration with SvelteKit in elysiajs.\n\n# Integration with SvelteKit\n\nWith SvelteKit, you can run Elysia on server routes.Here's a quick rundown of what this is about:\n\n## Integration with SvelteKit\n\nWith SvelteKit, you can run Elysia on server routes.\n\n1. Create **src/routes/[...slugs]/+server.ts**.\n2. In **+server.ts**, create or import an existing Elysia server\n3. Export the handler with the name of method you want to expose\n\nYou can treat the Elysia server as a normal SvelteKit server route.\n\nWith this approach, you can have co-location of both frontend and backend in a single repository and have [End-to-end type-safety with Eden](https://elysiajs.com/eden/overview.html) with both client-side and server action.\n\nPlease refer to [SvelteKit Routing](https://kit.svelte.dev/docs/routing#server) for more information.\n\n## Prefix\n\nIf you place an Elysia server not in the root directory of the app router, you need to annotate the prefix to the Elysia server.\n\nFor example, if you place Elysia server in **src/routes/api/[...slugs]/+server.ts**, you need to annotate prefix as **/api** to Elysia server.\n\nThis will ensure that Elysia routing will work properly in any location you place it.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/integrations/sveltekit", "title": "Integration with SvelteKit", "description": "With SvelteKit, you can run Elysia on server routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:59:12", "type": "overview", "page_metadata": {"ogTitle": "Integration with SvelteKit - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "With SvelteKit, you can run Elysia on server routes.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With SvelteKit, you can run Elysia on server routes.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with SvelteKit - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with SvelteKit - ElysiaJS", "twitter:card": "summary_large_image", "language": "en-US", "description": "With SvelteKit, you can run Elysia on server routes.", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "dbf51212-b738-4c5e-aa50-887a204ba366", "sourceURL": "https://elysiajs.com/integrations/sveltekit", "url": "https://elysiajs.com/integrations/sveltekit", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I integration with sveltekit in elysiajs?\n\nAssistant: To integration with sveltekit in elysiajs, here's what you do:\nWith SvelteKit, you can run Elysia on server routes.\n\n1. Create **src/routes/[...slugs]/+server.ts**.\n2. In **+server.ts**, create or import an existing Elysia server\n3. Export the handler with the name of method you want to expose\n\nYou can treat the Elysia server as a normal SvelteKit server route.\n\nWith this approach, you can have co-location of both frontend and backend in a single repository and have [End-to-end type-safety with Eden](https://elysiajs.com/eden/overview.html) with both client-side and server action.\n\nPlease refer to [SvelteKit Routing](https://kit.svelte.dev/docs/routing#server) for more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/sveltekit", "title": "Integration with SvelteKit", "description": "With SvelteKit, you can run Elysia on server routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:59:12", "type": "section_detail", "page_metadata": {"ogTitle": "Integration with SvelteKit - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "With SvelteKit, you can run Elysia on server routes.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With SvelteKit, you can run Elysia on server routes.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with SvelteKit - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with SvelteKit - ElysiaJS", "twitter:card": "summary_large_image", "language": "en-US", "description": "With SvelteKit, you can run Elysia on server routes.", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "dbf51212-b738-4c5e-aa50-887a204ba366", "sourceURL": "https://elysiajs.com/integrations/sveltekit", "url": "https://elysiajs.com/integrations/sveltekit", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I prefix in elysiajs?\n\nAssistant: To prefix in elysiajs, here's what you do:\nIf you place an Elysia server not in the root directory of the app router, you need to annotate the prefix to the Elysia server.\n\nFor example, if you place Elysia server in **src/routes/api/[...slugs]/+server.ts**, you need to annotate prefix as **/api** to Elysia server.\n\nThis will ensure that Elysia routing will work properly in any location you place it..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/sveltekit", "title": "Integration with SvelteKit", "description": "With SvelteKit, you can run Elysia on server routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:59:12", "type": "section_detail", "page_metadata": {"ogTitle": "Integration with SvelteKit - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "With SvelteKit, you can run Elysia on server routes.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With SvelteKit, you can run Elysia on server routes.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with SvelteKit - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with SvelteKit - ElysiaJS", "twitter:card": "summary_large_image", "language": "en-US", "description": "With SvelteKit, you can run Elysia on server routes.", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "dbf51212-b738-4c5e-aa50-887a204ba366", "sourceURL": "https://elysiajs.com/integrations/sveltekit", "url": "https://elysiajs.com/integrations/sveltekit", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Integration with SvelteKit in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Elysia Server in SvelteKit**:\n\n```yaml\n// src/routes/[...slugs]/+server.ts\nimport { Elysia, t } from 'elysia';\n\nconst app = new Elysia()\n    .get('/', () => 'hello SvelteKit')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\ntype RequestHandler = (v: { request: Request }) => Response | Promise<Response>\n\nexport const GET: RequestHandler = ({ request }) => app.handle(request)\nexport const POST: RequestHandler = ({ request }) => app.handle(request)\n```\n\nThis snippet shows you how to basic elysia server in sveltekit, which is an important aspect of integration with sveltekit.\n\n", "metadata": {"source_url": "https://elysiajs.com/integrations/sveltekit", "title": "Integration with SvelteKit", "description": "With SvelteKit, you can run Elysia on server routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:59:12", "type": "code_examples", "page_metadata": {"ogTitle": "Integration with SvelteKit - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "With SvelteKit, you can run Elysia on server routes.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With SvelteKit, you can run Elysia on server routes.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with SvelteKit - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with SvelteKit - ElysiaJS", "twitter:card": "summary_large_image", "language": "en-US", "description": "With SvelteKit, you can run Elysia on server routes.", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "dbf51212-b738-4c5e-aa50-887a204ba366", "sourceURL": "https://elysiajs.com/integrations/sveltekit", "url": "https://elysiajs.com/integrations/sveltekit", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Integration with SvelteKit in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou can treat the Elysia server as a normal SvelteKit server route.\n\nEnsure to annotate the prefix if the Elysia server is not in the root directory of the app router.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/integrations/sveltekit", "title": "Integration with SvelteKit", "description": "With SvelteKit, you can run Elysia on server routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 02:59:12", "type": "best_practices", "page_metadata": {"ogTitle": "Integration with SvelteKit - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "With SvelteKit, you can run Elysia on server routes.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "With SvelteKit, you can run Elysia on server routes.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with SvelteKit - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "og:image:width": "1920", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Integration with SvelteKit - ElysiaJS", "twitter:card": "summary_large_image", "language": "en-US", "description": "With SvelteKit, you can run Elysia on server routes.", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "dbf51212-b738-4c5e-aa50-887a204ba366", "sourceURL": "https://elysiajs.com/integrations/sveltekit", "url": "https://elysiajs.com/integrations/sveltekit", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what WebSocket is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain WebSocket in elysiajs.\n\n# WebSocket\n\nWebSocket is a realtime protocol for communication between your client and server.Here's a quick rundown of what this is about:\n\n## WebSocket\n\nWebSocket is a realtime protocol for communication between your client and server.\n\nUnlike HTTP where our client repeatedly asking the website for information and waiting for a reply each time, WebSocket sets up a direct line where our client and server can send messages back and forth directly, making the conversation quicker and smoother without having to start over each message.\n\nSocketIO is a popular library for WebSocket, but it is not the only one. Elysia uses uWebSocket which Bun uses under the hood with the same API.\n\nTo use websocket, simply call `Elysia.ws()`: \n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .ws('/ws', {\n        message(ws, message) {\n            ws.send(message)\n        }\n    })\n    .listen(3000)\n```\n\n## WebSocket message validation\n\nSame as normal route, WebSockets also accepts a **schema** object to strictly type and validate requests.\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/ws', {\n        // validate incoming message\n        body: t.Object({\n            message: t.String()\n        }),\n        query: t.Object({\n            id: t.String()\n        }),\n        message(ws, { message }) {\n            // Get schema from `ws.data`\n            const { id } = ws.data.query\n            ws.send({\n                id,\n                message,\n                time: Date.now()\n            })\n        }\n    })\n    .listen(3000)\n```\n\nWebSocket schema can validate the following:\n\n- **message** - An incoming message.\n- **query** - Query string or URL parameters.\n- **params** - Path parameters.\n- **header** - Request's headers.\n- **cookie** - Request's cookie\n- **response** - Value returned from handler\n\nBy default Elysia will parse incoming stringified JSON message as Object for validation.\n\n## Configuration\n\nYou can set Elysia constructor to set the Web Socket value.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n    websocket: {\n        idleTimeout: 30\n    }\n})\n```\n\nElysia's WebSocket implementation extends Bun's WebSocket configuration, please refer to Bun's WebSocket documentation for more information.\n\nThe following are a brief configuration from Bun WebSocket:\n\n### perMessageDeflate\n@default `false`\n\nEnable compression for clients that support it.\n\nBy default, compression is disabled.\n\n### maxPayloadLength\nThe maximum size of a message.\n\n### idleTimeout\n@default `120`\n\nAfter a connection has not received a message for this many seconds, it will be closed.\n\n### backpressureLimit\n@default `16777216` (16MB)\n\nThe maximum number of bytes that can be buffered for a single connection.\n\n### closeOnBackpressureLimit\n@default `false`\n\nClose the connection if the backpressure limit is reached.\n\n## Methods\n\nBelow are the new methods that are available to the WebSocket route.\n\n## ws\n\nCreate a websocket handler\n\nExample:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/ws', {\n        message(ws, message) {\n            ws.send(message)\n        }\n    })\n    .listen(3000)\n```\n\nType:\n\n```typescript\n.ws(endpoint: path, options: Partial<WebSocketHandler<Context>>): this\n```\n\n- **endpoint** - A path to exposed as websocket handler\n- **options** - Customize WebSocket handler behavior.\n\n## WebSocketHandler\n\nWebSocketHandler extends config from configuration.\n\nBelow is a config which is accepted by `ws`.\n\n## open\n\nCallback function for new websocket connection.\n\nType:\n\n```typescript\nopen(ws: ServerWebSocket<{\n    // uid for each connection\n    id: string\n    data: Context\n}>): this\n```\n\n## message\n\nCallback function for incoming websocket message.\n\nType:\n\n```typescript\nmessage(\n    ws: ServerWebSocket<{\n        // uid for each connection\n        id: string\n        data: Context\n    }>,\n    message: Message\n): this\n```\n\n`Message` type based on `schema.message`. Default is `string`.\n\n## close\n\nCallback function for closing websocket connection.\n\nType:\n\n```typescript\nclose(ws: ServerWebSocket<{\n    // uid for each connection\n    id: string\n    data: Context\n}>): this\n```\n\n## drain\n\nCallback function for the server is ready to accept more data.\n\nType:\n\n```typescript\ndrain(\n    ws: ServerWebSocket<{\n        // uid for each connection\n        id: string\n        data: Context\n    }>,\n    code: number,\n    reason: string\n): this\n```\n\n## parse\n\n`Parse` middleware to parse the request before upgrading the HTTP connection to WebSocket.\n\n## beforeHandle\n\n`Before Handle` middleware which execute before upgrading the HTTP connection to WebSocket.\n\nIdeal place for validation.\n\n## transform\n\n`Transform` middleware which execute before validation.\n\n## transformMessage\n\nLike `transform`, but execute before validation of WebSocket message.\n\nAdditional headers to add before upgrade connection to WebSocket.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "overview", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket in elysiajs?\n\nAssistant: To websocket in elysiajs, here's what you do:\nWebSocket is a realtime protocol for communication between your client and server.\n\nUnlike HTTP where our client repeatedly asking the website for information and waiting for a reply each time, WebSocket sets up a direct line where our client and server can send messages back and forth directly, making the conversation quicker and smoother without having to start over each message.\n\nSocketIO is a popular library for WebSocket, but it is not the only one. Elysia uses uWebSocket which Bun uses under the hood with the same API.\n\nTo use websocket, simply call `Elysia.ws()`: \n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .ws('/ws', {\n        message(ws, message) {\n            ws.send(message)\n        }\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket message validation in elysiajs?\n\nAssistant: To websocket message validation in elysiajs, here's what you do:\nSame as normal route, WebSockets also accepts a **schema** object to strictly type and validate requests.\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/ws', {\n        // validate incoming message\n        body: t.Object({\n            message: t.String()\n        }),\n        query: t.Object({\n            id: t.String()\n        }),\n        message(ws, { message }) {\n            // Get schema from `ws.data`\n            const { id } = ws.data.query\n            ws.send({\n                id,\n                message,\n                time: Date.now()\n            })\n        }\n    })\n    .listen(3000)\n```\n\nWebSocket schema can validate the following:\n\n- **message** - An incoming message.\n- **query** - Query string or URL parameters.\n- **params** - Path parameters.\n- **header** - Request's headers.\n- **cookie** - Request's cookie\n- **response** - Value returned from handler\n\nBy default Elysia will parse incoming stringified JSON message as Object for validation..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I configuration in elysiajs?\n\nAssistant: To configuration in elysiajs, here's what you do:\nYou can set Elysia constructor to set the Web Socket value.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n    websocket: {\n        idleTimeout: 30\n    }\n})\n```\n\nElysia's WebSocket implementation extends Bun's WebSocket configuration, please refer to Bun's WebSocket documentation for more information.\n\nThe following are a brief configuration from Bun WebSocket:\n\n### perMessageDeflate\n@default `false`\n\nEnable compression for clients that support it.\n\nBy default, compression is disabled.\n\n### maxPayloadLength\nThe maximum size of a message.\n\n### idleTimeout\n@default `120`\n\nAfter a connection has not received a message for this many seconds, it will be closed.\n\n### backpressureLimit\n@default `16777216` (16MB)\n\nThe maximum number of bytes that can be buffered for a single connection.\n\n### closeOnBackpressureLimit\n@default `false`\n\nClose the connection if the backpressure limit is reached..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I methods in elysiajs?\n\nAssistant: To methods in elysiajs, here's what you do:\nBelow are the new methods that are available to the WebSocket route..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ws in elysiajs?\n\nAssistant: To ws in elysiajs, here's what you do:\nCreate a websocket handler\n\nExample:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/ws', {\n        message(ws, message) {\n            ws.send(message)\n        }\n    })\n    .listen(3000)\n```\n\nType:\n\n```typescript\n.ws(endpoint: path, options: Partial<WebSocketHandler<Context>>): this\n```\n\n- **endpoint** - A path to exposed as websocket handler\n- **options** - Customize WebSocket handler behavior..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websockethandler in elysiajs?\n\nAssistant: To websockethandler in elysiajs, here's what you do:\nWebSocketHandler extends config from configuration.\n\nBelow is a config which is accepted by `ws`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I open in elysiajs?\n\nAssistant: To open in elysiajs, here's what you do:\nCallback function for new websocket connection.\n\nType:\n\n```typescript\nopen(ws: ServerWebSocket<{\n    // uid for each connection\n    id: string\n    data: Context\n}>): this\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I message in elysiajs?\n\nAssistant: To message in elysiajs, here's what you do:\nCallback function for incoming websocket message.\n\nType:\n\n```typescript\nmessage(\n    ws: ServerWebSocket<{\n        // uid for each connection\n        id: string\n        data: Context\n    }>,\n    message: Message\n): this\n```\n\n`Message` type based on `schema.message`. Default is `string`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I close in elysiajs?\n\nAssistant: To close in elysiajs, here's what you do:\nCallback function for closing websocket connection.\n\nType:\n\n```typescript\nclose(ws: ServerWebSocket<{\n    // uid for each connection\n    id: string\n    data: Context\n}>): this\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I drain in elysiajs?\n\nAssistant: To drain in elysiajs, here's what you do:\nCallback function for the server is ready to accept more data.\n\nType:\n\n```typescript\ndrain(\n    ws: ServerWebSocket<{\n        // uid for each connection\n        id: string\n        data: Context\n    }>,\n    code: number,\n    reason: string\n): this\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I parse in elysiajs?\n\nAssistant: To parse in elysiajs, here's what you do:\n`Parse` middleware to parse the request before upgrading the HTTP connection to WebSocket..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I beforehandle in elysiajs?\n\nAssistant: To beforehandle in elysiajs, here's what you do:\n`Before Handle` middleware which execute before upgrading the HTTP connection to WebSocket.\n\nIdeal place for validation..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I transform in elysiajs?\n\nAssistant: To transform in elysiajs, here's what you do:\n`Transform` middleware which execute before validation..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I transformmessage in elysiajs?\n\nAssistant: To transformmessage in elysiajs, here's what you do:\nLike `transform`, but execute before validation of WebSocket message.\n\nAdditional headers to add before upgrade connection to WebSocket..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for WebSocket in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic WebSocket Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .ws('/ws', {\n        message(ws, message) {\n            ws.send(message)\n        }\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to basic websocket example, which is an important aspect of websocket.\n\n**WebSocket Message Validation Example**:\n\n```yaml\n```typescript\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/ws', {\n        // validate incoming message\n        body: t.Object({\n            message: t.String()\n        }),\n        query: t.Object({\n            id: t.String()\n        }),\n        message(ws, { message }) {\n            // Get schema from `ws.data`\n            const { id } = ws.data.query\n            ws.send({\n                id,\n                message,\n                time: Date.now()\n            })\n        }\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to websocket message validation example, which is an important aspect of websocket.\n\n**WebSocket Configuration Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n    websocket: {\n        idleTimeout: 30\n    }\n})\n```\n```\n\nThis snippet shows you how to websocket configuration example, which is an important aspect of websocket.\n\n**WebSocket Handler Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/ws', {\n        message(ws, message) {\n            ws.send(message)\n        }\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to websocket handler example, which is an important aspect of websocket.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "code_examples", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using WebSocket in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nBy default Elysia will parse incoming stringified JSON message as Object for validation.\n\nElysia's WebSocket implementation extends Bun's WebSocket configuration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/websocket", "title": "WebSocket", "description": "WebSocket is a realtime protocol for communication between your client and server.", "has_code_examples": true, "has_best_practices": true, "section_count": 14, "timestamp": "2025-03-01 02:59:36", "type": "best_practices", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server.", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "ElysiaJS", "title": "WebSocket - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:height": "1080", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Elysia's WebSocket implementation. Start by declaring WebSocket route with \"ws\". WebSocket is a realtime protocol for communication between your client and server."], "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "ba0e7685-53fb-4cf1-9032-425c18865863", "sourceURL": "https://elysiajs.com/patterns/websocket", "url": "https://elysiajs.com/patterns/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what At glance is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain At glance in elysiajs.\n\n# At glance\n\nElysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.Here's a quick rundown of what this is about:\n\n## Introduction\n\nElysia is an ergonomic web framework for building backend servers with Bun. Designed with simplicity and type-safety in mind, Elysia has a familiar API with extensive support for TypeScript, optimized for Bun.\n\n## Hello World Example\n\nHere's a simple hello world in Elysia.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'Hello Elysia')\n    .get('/user/:id', ({ params: { id }}) => id)\n    .post('/form', ({ body }) => body)\n    .listen(3000)\n```\n\nNavigate to [localhost:3000](http://localhost:3000/) and it should show 'Hello Elysia' as a result.\n\n## Performance\n\nBuilding on Bun and extensive optimization like Static Code Analysis allows Elysia to generate optimized code on the fly. Elysia can outperform most of the web frameworks available today, and even match the performance of Golang and Rust frameworks.\n\n| Framework | Runtime | Average | Plain Text | Dynamic Parameters | JSON Body |\n| --- | --- | --- | --- | --- | --- |\n| bun | bun | 262,660.433 | 326,375.76 | 237,083.18 | 224,522.36 |\n| elysia | bun | 255,574.717 | 313,073.64 | 241,891.57 | 211,758.94 |\n| hyper-express | node | 234,395.837 | 311,775.43 | 249,675 | 141,737.08 |\n| hono | bun | 203,937.883 | 239,229.82 | 201,663.43 | 170,920.4 |\n| h3 | node | 96,515.027 | 114,971.87 | 87,935.94 | 86,637.27 |\n| oak | deno | 46,569.853 | 55,174.24 | 48,260.36 | 36,274.96 |\n| fastify | bun | 65,897.043 | 92,856.71 | 81,604.66 | 23,229.76 |\n| fastify | node | 60,322.413 | 71,150.57 | 62,060.26 | 47,756.41 |\n| koa | node | 39,594.14 | 46,219.64 | 40,961.72 | 31,601.06 |\n| express | bun | 29,715.537 | 39,455.46 | 34,700.85 | 14,990.3 |\n| express | node | 15,913.153 | 17,736.92 | 17,128.7 | 12,873.84 |\n\n## TypeScript\n\nElysia is designed to help you write less TypeScript. Elysia's Type System is fine-tuned to infer your code into types automatically, without needing to write explicit TypeScript, while providing type-safety at both runtime and compile time to provide you with the most ergonomic developer experience.\n\nTake a look at this example:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/user/:id', ({ params: { id } }) => id)\n    .listen(3000)\n```\n\nThe above code creates a path parameter \"id\". The value that replaces `:id` will be passed to `params.id` both at runtime and in types without manual type declaration.\n\n## Type Integrity\n\nTo take a step further, Elysia provides **Elysia.t**, a schema builder to validate types and values at both runtime and compile-time to create a single source of truth for your data-type.\n\nLet's modify the previous code to accept only a numeric value instead of a string.\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Numeric()\n        })\n    })\n    .listen(3000)\n```\n\nThis code ensures that our path parameter **id** will always be a numeric string and then transforms it into a number automatically at both runtime and compile-time (type-level).\n\n## Standard\n\nElysia adopts many standards by default, like OpenAPI, and WinterCG compliance, allowing you to integrate with most of the industry standard tools or at least easily integrate with tools you are familiar with.\n\nFor instance, because Elysia adopts OpenAPI by default, generating documentation with Swagger is as easy as adding a one-liner:\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nnew Elysia()\n    .use(swagger())\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000)\n```\n\nWith the Swagger plugin, you can seamlessly generate a Swagger page without additional code or specific config and share it with your team effortlessly.\n\n## End-to-end Type Safety\n\nWith Elysia, type safety is not limited to server-side only. With Elysia, you can synchronize your types with your frontend team automatically like tRPC, with Elysia's client library, \"Eden\".\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nAnd on your client-side:\n\n```typescript\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst app = treaty<App>('localhost:3000')\n\n// Get data from /user/617\nconst { data } = await app.user({ id: 617 }).get()\n\nconsole.log(data)\n```\n\nWith Eden, you can use the existing Elysia types to query an Elysia server **without code generation** and synchronize types for both frontend and backend automatically.\n\n## Platform Agnostic\n\nElysia was designed for Bun, but is **not limited to Bun**. Being WinterCG compliant allows you to deploy Elysia servers on Cloudflare Workers, Vercel Edge Functions, and most other runtimes that support Web Standard Requests.\n\n## Community\n\nIf you have questions or get stuck regarding Elysia, feel free to ask our community on GitHub Discussions, Discord, and Twitter.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "overview", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introduction in elysiajs?\n\nAssistant: To introduction in elysiajs, here's what you do:\nElysia is an ergonomic web framework for building backend servers with Bun. Designed with simplicity and type-safety in mind, Elysia has a familiar API with extensive support for TypeScript, optimized for Bun..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I hello world example in elysiajs?\n\nAssistant: To hello world example in elysiajs, here's what you do:\nHere's a simple hello world in Elysia.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'Hello Elysia')\n    .get('/user/:id', ({ params: { id }}) => id)\n    .post('/form', ({ body }) => body)\n    .listen(3000)\n```\n\nNavigate to [localhost:3000](http://localhost:3000/) and it should show 'Hello Elysia' as a result..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I performance in elysiajs?\n\nAssistant: To performance in elysiajs, here's what you do:\nBuilding on Bun and extensive optimization like Static Code Analysis allows Elysia to generate optimized code on the fly. Elysia can outperform most of the web frameworks available today, and even match the performance of Golang and Rust frameworks.\n\n| Framework | Runtime | Average | Plain Text | Dynamic Parameters | JSON Body |\n| --- | --- | --- | --- | --- | --- |\n| bun | bun | 262,660.433 | 326,375.76 | 237,083.18 | 224,522.36 |\n| elysia | bun | 255,574.717 | 313,073.64 | 241,891.57 | 211,758.94 |\n| hyper-express | node | 234,395.837 | 311,775.43 | 249,675 | 141,737.08 |\n| hono | bun | 203,937.883 | 239,229.82 | 201,663.43 | 170,920.4 |\n| h3 | node | 96,515.027 | 114,971.87 | 87,935.94 | 86,637.27 |\n| oak | deno | 46,569.853 | 55,174.24 | 48,260.36 | 36,274.96 |\n| fastify | bun | 65,897.043 | 92,856.71 | 81,604.66 | 23,229.76 |\n| fastify | node | 60,322.413 | 71,150.57 | 62,060.26 | 47,756.41 |\n| koa | node | 39,594.14 | 46,219.64 | 40,961.72 | 31,601.06 |\n| express | bun | 29,715.537 | 39,455.46 | 34,700.85 | 14,990.3 |\n| express | node | 15,913.153 | 17,736.92 | 17,128.7 | 12,873.84 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typescript in elysiajs?\n\nAssistant: To typescript in elysiajs, here's what you do:\nElysia is designed to help you write less TypeScript. Elysia's Type System is fine-tuned to infer your code into types automatically, without needing to write explicit TypeScript, while providing type-safety at both runtime and compile time to provide you with the most ergonomic developer experience.\n\nTake a look at this example:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/user/:id', ({ params: { id } }) => id)\n    .listen(3000)\n```\n\nThe above code creates a path parameter \"id\". The value that replaces `:id` will be passed to `params.id` both at runtime and in types without manual type declaration..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type integrity in elysiajs?\n\nAssistant: To type integrity in elysiajs, here's what you do:\nTo take a step further, Elysia provides **Elysia.t**, a schema builder to validate types and values at both runtime and compile-time to create a single source of truth for your data-type.\n\nLet's modify the previous code to accept only a numeric value instead of a string.\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Numeric()\n        })\n    })\n    .listen(3000)\n```\n\nThis code ensures that our path parameter **id** will always be a numeric string and then transforms it into a number automatically at both runtime and compile-time (type-level)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I standard in elysiajs?\n\nAssistant: To standard in elysiajs, here's what you do:\nElysia adopts many standards by default, like OpenAPI, and WinterCG compliance, allowing you to integrate with most of the industry standard tools or at least easily integrate with tools you are familiar with.\n\nFor instance, because Elysia adopts OpenAPI by default, generating documentation with Swagger is as easy as adding a one-liner:\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nnew Elysia()\n    .use(swagger())\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000)\n```\n\nWith the Swagger plugin, you can seamlessly generate a Swagger page without additional code or specific config and share it with your team effortlessly..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I end-to-end type safety in elysiajs?\n\nAssistant: To end-to-end type safety in elysiajs, here's what you do:\nWith Elysia, type safety is not limited to server-side only. With Elysia, you can synchronize your types with your frontend team automatically like tRPC, with Elysia's client library, \"Eden\".\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nAnd on your client-side:\n\n```typescript\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst app = treaty<App>('localhost:3000')\n\n// Get data from /user/617\nconst { data } = await app.user({ id: 617 }).get()\n\nconsole.log(data)\n```\n\nWith Eden, you can use the existing Elysia types to query an Elysia server **without code generation** and synchronize types for both frontend and backend automatically..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I platform agnostic in elysiajs?\n\nAssistant: To platform agnostic in elysiajs, here's what you do:\nElysia was designed for Bun, but is **not limited to Bun**. Being WinterCG compliant allows you to deploy Elysia servers on Cloudflare Workers, Vercel Edge Functions, and most other runtimes that support Web Standard Requests..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I community in elysiajs?\n\nAssistant: To community in elysiajs, here's what you do:\nIf you have questions or get stuck regarding Elysia, feel free to ask our community on GitHub Discussions, Discord, and Twitter..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "section_detail", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for At glance in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Hello World Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'Hello Elysia')\n    .get('/user/:id', ({ params: { id }}) => id)\n    .post('/form', ({ body }) => body)\n    .listen(3000)\n```\n\nThis snippet shows you how to hello world example, which is an important aspect of at glance.\n\n**TypeScript Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/user/:id', ({ params: { id } }) => id)\n    .listen(3000)\n```\n\nThis snippet shows you how to typescript example, which is an important aspect of at glance.\n\n**Type Integrity Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Numeric()\n        })\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to type integrity example, which is an important aspect of at glance.\n\n**Standard Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nnew Elysia()\n    .use(swagger())\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to standard example, which is an important aspect of at glance.\n\n**End-to-end Type Safety Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .get('/user/:id', ({ params: { id } }) => id, {\n        params: t.Object({\n            id: t.Number()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThis snippet shows you how to end-to-end type safety example, which is an important aspect of at glance.\n\n", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "code_examples", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using At glance in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nHover over the code snippet to see the type definition.\n\nIn the mock browser, click on the path highlighted in blue to change paths and preview the response.\n\nElysia can run in the browser, and the results you see are actually run using Elysia.\n\nTypeScript is not needed to use Elysia, but it's recommended to use Elysia with TypeScript.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/at-glance", "title": "At glance", "description": "Elysia is an ergonomic web framework for building backend servers with Bun, designed with simplicity and type-safety in mind, with extensive support for TypeScript.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:00:07", "type": "best_practices", "page_metadata": {"description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "language": "en-US", "title": "At glance - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "og:image:height": "1080", "og:image:width": "1920", "ogTitle": "At glance - ElysiaJS", "og:title": "At glance - ElysiaJS", "og:description": "Designed with ergonomic design, extensive support for TypeScript, modern JavaScript API, optimized for Bun. Offers a unique experience unified type, and end-to-end type safety while maintaining excellent performance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "5ae73cd4-ec07-4ff1-aee4-8f8adadd22a2", "sourceURL": "https://elysiajs.com/at-glance", "url": "https://elysiajs.com/at-glance", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Test is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Test in elysiajs.\n\n# Eden Test\n\nUsing Eden, we can create an integration test with end-to-end type safety and auto-completion.Here's a quick rundown of what this is about:\n\n## Setup\n\nWe can use [Bun test](https://bun.sh/guides/test/watch-mode) to create tests.\n\nCreate **test/index.test.ts** in the root of project directory with the following:\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\n\nimport { edenTreaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/', () => 'hi')\n    .listen(3000)\n\nconst api = edenTreaty<typeof app>('http://localhost:3000')\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const { data } = await api.get()\n\n        expect(data).toBe('hi')\n    })\n})\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/test", "title": "Eden Test", "description": "Using Eden, we can create an integration test with end-to-end type safety and auto-completion.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:14", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "ogTitle": "Eden Unit Test - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "title": "Eden Test - ElysiaJS | ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Unit Test - ElysiaJS", "og:description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "og:image:height": "1080", "scrapeId": "9865738f-f1e0-42c8-8341-290f403c3744", "sourceURL": "https://elysiajs.com/eden/test", "url": "https://elysiajs.com/eden/test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I setup in elysiajs?\n\nAssistant: To setup in elysiajs, here's what you do:\nWe can use [Bun test](https://bun.sh/guides/test/watch-mode) to create tests.\n\nCreate **test/index.test.ts** in the root of project directory with the following:\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\n\nimport { edenTreaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/', () => 'hi')\n    .listen(3000)\n\nconst api = edenTreaty<typeof app>('http://localhost:3000')\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const { data } = await api.get()\n\n        expect(data).toBe('hi')\n    })\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/test", "title": "Eden Test", "description": "Using Eden, we can create an integration test with end-to-end type safety and auto-completion.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:14", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "ogTitle": "Eden Unit Test - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "title": "Eden Test - ElysiaJS | ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Unit Test - ElysiaJS", "og:description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "og:image:height": "1080", "scrapeId": "9865738f-f1e0-42c8-8341-290f403c3744", "sourceURL": "https://elysiajs.com/eden/test", "url": "https://elysiajs.com/eden/test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Test in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Eden Test Example**:\n\n```yaml\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\n\nimport { edenTreaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/', () => 'hi')\n    .listen(3000)\n\nconst api = edenTreaty<typeof app>('http://localhost:3000')\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const { data } = await api.get()\n\n        expect(data).toBe('hi')\n    })\n})\n```\n\nThis snippet shows you how to eden test example, which is an important aspect of eden test.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/test", "title": "Eden Test", "description": "Using Eden, we can create an integration test with end-to-end type safety and auto-completion.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:14", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "ogTitle": "Eden Unit Test - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "title": "Eden Test - ElysiaJS | ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Unit Test - ElysiaJS", "og:description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "og:image:height": "1080", "scrapeId": "9865738f-f1e0-42c8-8341-290f403c3744", "sourceURL": "https://elysiajs.com/eden/test", "url": "https://elysiajs.com/eden/test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Test in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThis allows us to perform integration tests programmatically instead of manual fetch while supporting type checking automatically.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/test", "title": "Eden Test", "description": "Using Eden, we can create an integration test with end-to-end type safety and auto-completion.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:00:14", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "ogTitle": "Eden Unit Test - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "title": "Eden Test - ElysiaJS | ElysiaJS", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Unit Test - ElysiaJS", "og:description": "Using Eden, we can perform unit-test to provide end-to-end type safety, and auto-completion, tracking type safety from migration", "og:image:height": "1080", "scrapeId": "9865738f-f1e0-42c8-8341-290f403c3744", "sourceURL": "https://elysiajs.com/eden/test", "url": "https://elysiajs.com/eden/test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what tRPC Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain tRPC Plugin in elysiajs.\n\n# tRPC Plugin\n\nThis plugin adds support for using tRPCHere's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/trpc @trpc/server @elysiajs/websocket\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport { Elysia, t as T } from 'elysia'\n\nimport { initTRPC } from '@trpc/server'\nimport { compile as c, trpc } from '@elysiajs/trpc'\n\nconst t = initTRPC.create()\nconst p = t.procedure\n\nconst router = t.router({\n\tgreet: p\n\t\t// 💡 Using Zod\n\t\t//.input(z.string())\n\t\t// 💡 Using Elysia's T\n\t\t.input(c(T.String()))\n\t\t.query(({ input }) => input)\n})\n\nexport type Router = typeof router\n\nconst app = new Elysia().use(trpc(router)).listen(3000)\n```\n\n## trpc\n\nAccept the tRPC router and register to Elysia's handler.\n\nts\n\n````\ntrpc(\n\trouter: Router,\n\toption?: {\n\t    endpoint?: string\n\t}\n): this\n````\n\n`Router` is the TRPC Router instance.\n\n### endpoint\n\nThe path to the exposed TRPC endpoint.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/trpc", "title": "tRPC Plugin", "description": "This plugin adds support for using tRPC", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:41", "type": "overview", "page_metadata": {"og:image:width": "1920", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with \"bun add @elysiajs/trpc\"."], "description": "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "tRPC Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image:height": "1080", "title": "tRPC Plugin - ElysiaJS | ElysiaJS", "og:title": "tRPC Plugin - ElysiaJS", "scrapeId": "190451d6-f874-46ad-a972-48327bd57031", "sourceURL": "https://elysiajs.com/plugins/trpc", "url": "https://elysiajs.com/plugins/trpc", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/trpc @trpc/server @elysiajs/websocket\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/trpc", "title": "tRPC Plugin", "description": "This plugin adds support for using tRPC", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:41", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with \"bun add @elysiajs/trpc\"."], "description": "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "tRPC Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image:height": "1080", "title": "tRPC Plugin - ElysiaJS | ElysiaJS", "og:title": "tRPC Plugin - ElysiaJS", "scrapeId": "190451d6-f874-46ad-a972-48327bd57031", "sourceURL": "https://elysiajs.com/plugins/trpc", "url": "https://elysiajs.com/plugins/trpc", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport { Elysia, t as T } from 'elysia'\n\nimport { initTRPC } from '@trpc/server'\nimport { compile as c, trpc } from '@elysiajs/trpc'\n\nconst t = initTRPC.create()\nconst p = t.procedure\n\nconst router = t.router({\n\tgreet: p\n\t\t// 💡 Using Zod\n\t\t//.input(z.string())\n\t\t// 💡 Using Elysia's T\n\t\t.input(c(T.String()))\n\t\t.query(({ input }) => input)\n})\n\nexport type Router = typeof router\n\nconst app = new Elysia().use(trpc(router)).listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/trpc", "title": "tRPC Plugin", "description": "This plugin adds support for using tRPC", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:41", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with \"bun add @elysiajs/trpc\"."], "description": "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "tRPC Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image:height": "1080", "title": "tRPC Plugin - ElysiaJS | ElysiaJS", "og:title": "tRPC Plugin - ElysiaJS", "scrapeId": "190451d6-f874-46ad-a972-48327bd57031", "sourceURL": "https://elysiajs.com/plugins/trpc", "url": "https://elysiajs.com/plugins/trpc", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trpc in elysiajs?\n\nAssistant: To trpc in elysiajs, here's what you do:\nAccept the tRPC router and register to Elysia's handler.\n\nts\n\n````\ntrpc(\n\trouter: Router,\n\toption?: {\n\t    endpoint?: string\n\t}\n): this\n````\n\n`Router` is the TRPC Router instance.\n\n### endpoint\n\nThe path to the exposed TRPC endpoint..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/trpc", "title": "tRPC Plugin", "description": "This plugin adds support for using tRPC", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:41", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with \"bun add @elysiajs/trpc\"."], "description": "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "tRPC Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image:height": "1080", "title": "tRPC Plugin - ElysiaJS | ElysiaJS", "og:title": "tRPC Plugin - ElysiaJS", "scrapeId": "190451d6-f874-46ad-a972-48327bd57031", "sourceURL": "https://elysiajs.com/plugins/trpc", "url": "https://elysiajs.com/plugins/trpc", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for tRPC Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/trpc @trpc/server @elysiajs/websocket\n```\n\nThis snippet shows you how to installation command, which is an important aspect of trpc plugin.\n\n**Usage Example**:\n\n```yaml\nimport { Elysia, t as T } from 'elysia'\n\nimport { initTRPC } from '@trpc/server'\nimport { compile as c, trpc } from '@elysiajs/trpc'\n\nconst t = initTRPC.create()\nconst p = t.procedure\n\nconst router = t.router({\n\tgreet: p\n\t\t// 💡 Using Zod\n\t\t//.input(z.string())\n\t\t// 💡 Using Elysia's T\n\t\t.input(c(T.String()))\n\t\t.query(({ input }) => input)\n})\n\nexport type Router = typeof router\n\nconst app = new Elysia().use(trpc(router)).listen(3000)\n```\n\nThis snippet shows you how to usage example, which is an important aspect of trpc plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/trpc", "title": "tRPC Plugin", "description": "This plugin adds support for using tRPC", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:41", "type": "code_examples", "page_metadata": {"og:image:width": "1920", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with \"bun add @elysiajs/trpc\"."], "description": "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "tRPC Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image:height": "1080", "title": "tRPC Plugin - ElysiaJS | ElysiaJS", "og:title": "tRPC Plugin - ElysiaJS", "scrapeId": "190451d6-f874-46ad-a972-48327bd57031", "sourceURL": "https://elysiajs.com/plugins/trpc", "url": "https://elysiajs.com/plugins/trpc", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using tRPC Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUsing Zod for input validation is recommended.\n\nUsing Elysia's T for type safety is encouraged.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/trpc", "title": "tRPC Plugin", "description": "This plugin adds support for using tRPC", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:00:41", "type": "best_practices", "page_metadata": {"og:image:width": "1920", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with \"bun add @elysiajs/trpc\"."], "description": "Plugin for Elysia that adds support for using tRPC on Bun with Elysia Server. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "tRPC Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "og:image:height": "1080", "title": "tRPC Plugin - ElysiaJS | ElysiaJS", "og:title": "tRPC Plugin - ElysiaJS", "scrapeId": "190451d6-f874-46ad-a972-48327bd57031", "sourceURL": "https://elysiajs.com/plugins/trpc", "url": "https://elysiajs.com/plugins/trpc", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Configuration is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Configuration in elysiajs.\n\n# Configuration\n\nThis page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.Here's a quick rundown of what this is about:\n\n## Configuration\n\nWe can configure Elysia behavior by passing an object to the constructor.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tprefix: '/group'\n})\n```\n\nAbove is an example of configuring Elysia to use `/group` as the path prefix.\n\n## Max body size\n\nWe can set the maximum body size by setting [`serve.maxRequestBodySize`](https://elysiajs.com/patterns/configuration#maxrequestbodysize) in the `serve` configuration.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\tmaxRequestBodySize: 1024 * 1024 * 256 // 256MB\n\t}\n})\n```\n\nBy default the maximum request body size is 128MB (1024 * 1024 * 128).\n\n## TLS\n\nWe can enable TLS (known as successor of SSL) by passing in a value for key and cert; both are required to enable TLS.\n\n```ts\nimport { Elysia, file } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\ttls: {\n\t\t\tcert: file('cert.pem'),\n\t\t\tkey: file('key.pem')\n\t\t}\n\t}\n})\n```\n\nElysia extends Bun configuration which supports TLS out of the box, powered by BoringSSL.\n\nSee [TLS Options](https://elysiajs.com/patterns/configuration#tls-options) for available configuration.\n\n## Config\n\nBelow is a config accepted by Elysia:\n\n### prefix\n@default `\"\"`\n\nPath prefix of the instance\n\n### name\nName of the instance for debugging, and plugin deduplication purpose\n\n### seed\nSeed for generating checksum for [plugin deduplication](https://elysiajs.com/essential/plugin.html#plugin-deduplication)\n\n### detail\nOpenAPI documentation for documentation generation\n\nThis configuration extends [Swagger Specification](https://swagger.io/specification).\n\n@see [Swagger Specification](https://swagger.io/specification)\n\n### tags\nOpenAPI tags for documentation generation\n\nDecorate all instance routes with tags\n\nThis configuration extends [Tag Object](https://swagger.io/specification/#tag-object)\n\n@see [Tag Object](https://swagger.io/specification/#tag-object)\n\n### precompile\n@default `false`\n\nWarm up Elysia before starting the server\n\nThis will perform Ahead of Time compilation and generate code for route handlers\n\nIf set to false, Elysia will perform Just in Time compilation\n\nOnly required for root instance (instance which use listen) to effect\n\n### aot\n@default `false`\n\nAhead of Time compilation\n\nReduced performance but faster startup time.\n\n## strictPath\n\n@default `false`\n\nWhether should Elysia tolerate suffix `/` or vice-versa\n\n#### Example\nIf `strictPath` is set to `true`, Elysia will match `/id` and not `/id/`\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tstrictPath: true\n})\n\t.get('/id', 'work')\n```\n\nNormally, both `/id` and `/id/` will match the route handler (default is `false`).\n\n## normalize\n\n@default `true`\n\nIf enabled, the handlers will run a [clean](https://github.com/sinclairzx81/typebox?tab=readme-ov-file#clean) on incoming and outgoing bodies instead of failing directly.\n\nThis allows for sending unknown or disallowed properties in the bodies. These will simply be filtered out instead of failing the request.\n\nThis has no effect when the schemas allow additional properties.\n\nSince this uses dynamic schema it may have an impact on performance.\n\n## nativeStaticResponse\n\n@default `true` @since 1.1.11\n\nEnable Bun static response.\n\nWhether Elysia should use Bun's static response.\n\nThis allows Elysia to improve static content performance and reduce memory significantly.\n\n#### Example\nElysia will use Bun's static response for static content\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.get('/static', 'work')\n```\n\nAbove is an equivalent to:\n\n```ts\nBun.serve({\n\tstatic: {\n\t\t'static': 'work',\n\t\t'/static': '/work'\n\t}\n})\n```\n\nTIP\n\nThis configuration will only work if using Bun > 1.1.27 as the server.\n\n## websocket\n\nOverride websocket configuration\n\nRecommended to leave this as default as Elysia will generate suitable configuration for handling WebSocket automatically.\n\nThis configuration extends [Bun WebSocket API](https://bun.sh/docs/api/websockets).\n\n## serve\n\nBun serve configuration.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\thostname: 'elysiajs.com',\n\t\ttls: {\n\t\t\tcert: Bun.file('cert.pem'),\n\t\t\tkey: Bun.file('key.pem')\n\t\t}\n\t},\n})\n```\n\nThis configuration extends [Bun Serve API](https://bun.sh/docs/api/http) and [Bun TLS](https://bun.sh/docs/api/http#tls).\n\nThe following is ported from Bun JSDoc and Bun documentation:\n\n### port\n@default `3000`\n\nPort to listen on\n\n### unix\nIf set, the HTTP server will listen on a unix socket instead of a port.\n\n(Cannot be used with hostname+port)\n\n### hostname\n@default `0.0.0.0`\n\nSet the hostname which the server listens on\n\n### maxRequestBodySize\n@default `1024 * 1024 * 128` (128MB)\n\nSet the maximum size of a request body (in bytes)\n\n### reusePort\n@default `true`\n\nIf the `SO_REUSEPORT` flag should be set\n\nThis allows multiple processes to bind to the same port, which is useful for load balancing.\n\nThis configuration is override and turns on by default by Elysia.\n\n### id\nUniquely identify a server instance with an ID.\n\nThis string will be used to hot reload the server without interrupting pending requests or websockets. If not provided, a value will be generated. To disable hot reloading, set this value to `null`.\n\n### rejectUnauthorized\n@default `NODE_TLS_REJECT_UNAUTHORIZED` environment variable\n\nIf set to `false`, any certificate is accepted.\n\n## TLS options\n\nThis configuration extends [Bun TLS API](https://bun.sh/docs/api/http#tls)\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\ttls: {\n\t\tcert: Bun.file('cert.pem'),\n\t\tkey: Bun.file('key.pem')\n\t}\n})\n```\n\n### cert\nCert chains in PEM format. One cert chain should be provided per private key.\n\nEach cert chain should consist of the PEM formatted certificate for a provided private key, followed by the PEM formatted intermediate certificates (if any), in order, and not including the root CA (the root CA must be pre-known to the peer, see ca).\n\nWhen providing multiple cert chains, they do not have to be in the same order as their private keys in key.\n\nIf the intermediate certificates are not provided, the peer will not be able to validate the certificate, and the handshake will fail.\n\n### key\nPrivate keys in PEM format. PEM allows the option of private keys being encrypted. Encrypted keys will be decrypted with options.passphrase.\n\nMultiple keys using different algorithms can be provided either as an array of unencrypted key strings or buffers, or an array of objects in the form .\n\nThe object form can only occur in an array.\n\n**object.passphrase** is optional. Encrypted keys will be decrypted with **object.passphrase** if provided, or **options.passphrase** if it is not.\n\n### ca\nOptionally override the trusted CA certificates. Default is to trust the well-known CAs curated by Mozilla.\n\nMozilla's CAs are completely replaced when CAs are explicitly specified using this option.\n\n### passphrase\nShared passphrase for a single private key and/or a PFX.\n\n### dhParamsFile\nFile path to a .pem file custom Diffie Helman parameters.\n\n### requestCert\n@default `false`\n\nIf set to `true`, the server will request a client certificate.\n\n### secureOptions\nOptionally affect the OpenSSL protocol behavior, which is not usually necessary.\n\nThis should be used carefully if at all!\n\nValue is a numeric bitmask of the SSL_OP_* options from OpenSSL Options.\n\n### serverName\nExplicitly set a server name.\n\n### lowMemoryMode\n@default `false`\n\nThis sets `OPENSSL_RELEASE_BUFFERS` to 1.\n\nIt reduces overall performance but saves some memory.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I configuration in elysiajs?\n\nAssistant: To configuration in elysiajs, here's what you do:\nWe can configure Elysia behavior by passing an object to the constructor.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tprefix: '/group'\n})\n```\n\nAbove is an example of configuring Elysia to use `/group` as the path prefix..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I max body size in elysiajs?\n\nAssistant: To max body size in elysiajs, here's what you do:\nWe can set the maximum body size by setting [`serve.maxRequestBodySize`](https://elysiajs.com/patterns/configuration#maxrequestbodysize) in the `serve` configuration.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\tmaxRequestBodySize: 1024 * 1024 * 256 // 256MB\n\t}\n})\n```\n\nBy default the maximum request body size is 128MB (1024 * 1024 * 128)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I tls in elysiajs?\n\nAssistant: To tls in elysiajs, here's what you do:\nWe can enable TLS (known as successor of SSL) by passing in a value for key and cert; both are required to enable TLS.\n\n```ts\nimport { Elysia, file } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\ttls: {\n\t\t\tcert: file('cert.pem'),\n\t\t\tkey: file('key.pem')\n\t\t}\n\t}\n})\n```\n\nElysia extends Bun configuration which supports TLS out of the box, powered by BoringSSL.\n\nSee [TLS Options](https://elysiajs.com/patterns/configuration#tls-options) for available configuration..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nBelow is a config accepted by Elysia:\n\n### prefix\n@default `\"\"`\n\nPath prefix of the instance\n\n### name\nName of the instance for debugging, and plugin deduplication purpose\n\n### seed\nSeed for generating checksum for [plugin deduplication](https://elysiajs.com/essential/plugin.html#plugin-deduplication)\n\n### detail\nOpenAPI documentation for documentation generation\n\nThis configuration extends [Swagger Specification](https://swagger.io/specification).\n\n@see [Swagger Specification](https://swagger.io/specification)\n\n### tags\nOpenAPI tags for documentation generation\n\nDecorate all instance routes with tags\n\nThis configuration extends [Tag Object](https://swagger.io/specification/#tag-object)\n\n@see [Tag Object](https://swagger.io/specification/#tag-object)\n\n### precompile\n@default `false`\n\nWarm up Elysia before starting the server\n\nThis will perform Ahead of Time compilation and generate code for route handlers\n\nIf set to false, Elysia will perform Just in Time compilation\n\nOnly required for root instance (instance which use listen) to effect\n\n### aot\n@default `false`\n\nAhead of Time compilation\n\nReduced performance but faster startup time..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I strictpath in elysiajs?\n\nAssistant: To strictpath in elysiajs, here's what you do:\n@default `false`\n\nWhether should Elysia tolerate suffix `/` or vice-versa\n\n#### Example\nIf `strictPath` is set to `true`, Elysia will match `/id` and not `/id/`\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tstrictPath: true\n})\n\t.get('/id', 'work')\n```\n\nNormally, both `/id` and `/id/` will match the route handler (default is `false`)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I normalize in elysiajs?\n\nAssistant: To normalize in elysiajs, here's what you do:\n@default `true`\n\nIf enabled, the handlers will run a [clean](https://github.com/sinclairzx81/typebox?tab=readme-ov-file#clean) on incoming and outgoing bodies instead of failing directly.\n\nThis allows for sending unknown or disallowed properties in the bodies. These will simply be filtered out instead of failing the request.\n\nThis has no effect when the schemas allow additional properties.\n\nSince this uses dynamic schema it may have an impact on performance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I nativestaticresponse in elysiajs?\n\nAssistant: To nativestaticresponse in elysiajs, here's what you do:\n@default `true` @since 1.1.11\n\nEnable Bun static response.\n\nWhether Elysia should use Bun's static response.\n\nThis allows Elysia to improve static content performance and reduce memory significantly.\n\n#### Example\nElysia will use Bun's static response for static content\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.get('/static', 'work')\n```\n\nAbove is an equivalent to:\n\n```ts\nBun.serve({\n\tstatic: {\n\t\t'static': 'work',\n\t\t'/static': '/work'\n\t}\n})\n```\n\nTIP\n\nThis configuration will only work if using Bun > 1.1.27 as the server..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket in elysiajs?\n\nAssistant: To websocket in elysiajs, here's what you do:\nOverride websocket configuration\n\nRecommended to leave this as default as Elysia will generate suitable configuration for handling WebSocket automatically.\n\nThis configuration extends [Bun WebSocket API](https://bun.sh/docs/api/websockets)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I serve in elysiajs?\n\nAssistant: To serve in elysiajs, here's what you do:\nBun serve configuration.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\thostname: 'elysiajs.com',\n\t\ttls: {\n\t\t\tcert: Bun.file('cert.pem'),\n\t\t\tkey: Bun.file('key.pem')\n\t\t}\n\t},\n})\n```\n\nThis configuration extends [Bun Serve API](https://bun.sh/docs/api/http) and [Bun TLS](https://bun.sh/docs/api/http#tls).\n\nThe following is ported from Bun JSDoc and Bun documentation:\n\n### port\n@default `3000`\n\nPort to listen on\n\n### unix\nIf set, the HTTP server will listen on a unix socket instead of a port.\n\n(Cannot be used with hostname+port)\n\n### hostname\n@default `0.0.0.0`\n\nSet the hostname which the server listens on\n\n### maxRequestBodySize\n@default `1024 * 1024 * 128` (128MB)\n\nSet the maximum size of a request body (in bytes)\n\n### reusePort\n@default `true`\n\nIf the `SO_REUSEPORT` flag should be set\n\nThis allows multiple processes to bind to the same port, which is useful for load balancing.\n\nThis configuration is override and turns on by default by Elysia.\n\n### id\nUniquely identify a server instance with an ID.\n\nThis string will be used to hot reload the server without interrupting pending requests or websockets. If not provided, a value will be generated. To disable hot reloading, set this value to `null`.\n\n### rejectUnauthorized\n@default `NODE_TLS_REJECT_UNAUTHORIZED` environment variable\n\nIf set to `false`, any certificate is accepted..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I tls options in elysiajs?\n\nAssistant: To tls options in elysiajs, here's what you do:\nThis configuration extends [Bun TLS API](https://bun.sh/docs/api/http#tls)\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\ttls: {\n\t\tcert: Bun.file('cert.pem'),\n\t\tkey: Bun.file('key.pem')\n\t}\n})\n```\n\n### cert\nCert chains in PEM format. One cert chain should be provided per private key.\n\nEach cert chain should consist of the PEM formatted certificate for a provided private key, followed by the PEM formatted intermediate certificates (if any), in order, and not including the root CA (the root CA must be pre-known to the peer, see ca).\n\nWhen providing multiple cert chains, they do not have to be in the same order as their private keys in key.\n\nIf the intermediate certificates are not provided, the peer will not be able to validate the certificate, and the handshake will fail.\n\n### key\nPrivate keys in PEM format. PEM allows the option of private keys being encrypted. Encrypted keys will be decrypted with options.passphrase.\n\nMultiple keys using different algorithms can be provided either as an array of unencrypted key strings or buffers, or an array of objects in the form .\n\nThe object form can only occur in an array.\n\n**object.passphrase** is optional. Encrypted keys will be decrypted with **object.passphrase** if provided, or **options.passphrase** if it is not.\n\n### ca\nOptionally override the trusted CA certificates. Default is to trust the well-known CAs curated by Mozilla.\n\nMozilla's CAs are completely replaced when CAs are explicitly specified using this option.\n\n### passphrase\nShared passphrase for a single private key and/or a PFX.\n\n### dhParamsFile\nFile path to a .pem file custom Diffie Helman parameters.\n\n### requestCert\n@default `false`\n\nIf set to `true`, the server will request a client certificate.\n\n### secureOptions\nOptionally affect the OpenSSL protocol behavior, which is not usually necessary.\n\nThis should be used carefully if at all!\n\nValue is a numeric bitmask of the SSL_OP_* options from OpenSSL Options.\n\n### serverName\nExplicitly set a server name.\n\n### lowMemoryMode\n@default `false`\n\nThis sets `OPENSSL_RELEASE_BUFFERS` to 1.\n\nIt reduces overall performance but saves some memory..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Configuration in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Configuration Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tprefix: '/group'\n})\n```\n\nThis snippet shows you how to configuration example, which is an important aspect of configuration.\n\n**Max Body Size Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\tmaxRequestBodySize: 1024 * 1024 * 256 // 256MB\n\t}\n})\n```\n\nThis snippet shows you how to max body size example, which is an important aspect of configuration.\n\n**TLS Example**:\n\n```yaml\nimport { Elysia, file } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\ttls: {\n\t\t\tcert: file('cert.pem'),\n\t\t\tkey: file('key.pem')\n\t\t}\n\t}\n})\n```\n\nThis snippet shows you how to tls example, which is an important aspect of configuration.\n\n**Strict Path Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tstrictPath: true\n})\n\t.get('/id', 'work')\n```\n\nThis snippet shows you how to strict path example, which is an important aspect of configuration.\n\n**Native Static Response Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.get('/static', 'work')\n```\n\nThis snippet shows you how to native static response example, which is an important aspect of configuration.\n\n**Serve Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\tserve: {\n\t\thostname: 'elysiajs.com',\n\t\ttls: {\n\t\t\tcert: Bun.file('cert.pem'),\n\t\t\tkey: Bun.file('key.pem')\n\t\t}\n\t},\n})\n```\n\nThis snippet shows you how to serve example, which is an important aspect of configuration.\n\n**TLS Options Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n\ttls: {\n\t\tcert: Bun.file('cert.pem'),\n\t\tkey: Bun.file('key.pem')\n\t}\n})\n```\n\nThis snippet shows you how to tls options example, which is an important aspect of configuration.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Configuration in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThis configuration will only work if using Bun > 1.1.27 as the server.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/configuration", "title": "Configuration", "description": "This page covers how to configure Elysia behavior by passing an object to the constructor, including settings for body size, TLS, and various other options.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:01:30", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:image:width": "1920", "description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "language": "en-US", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "og:image:height": "1080", "ogTitle": "Configuration - ElysiaJS", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:title": "Configuration - ElysiaJS", "title": "Configuration - ElysiaJS | ElysiaJS", "scrapeId": "eb03e69c-7455-4f25-8d1c-cf030a7b8fe8", "sourceURL": "https://elysiajs.com/patterns/configuration", "url": "https://elysiajs.com/patterns/configuration", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Cookie Documentation is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Cookie Documentation in elysiajs.\n\n# Cookie Documentation\n\nThis documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.Here's a quick rundown of what this is about:\n\n## Outline\n\nTo use Cookie, you can extract the cookie property and access its name and value directly.\n\nThere's no get/set, you can extract the cookie name and retrieve or update its value directly.\n\n## Reactivity\n\nThe Elysia cookie is reactive. This means that when you change the cookie value, the cookie will be updated automatically based on approach like signal.\n\nA single source of truth for handling cookies is provided by Elysia cookies, which have the ability to automatically set headers and sync cookie values.\n\nSince cookies are Proxy-dependent objects by default, the extract value can never be undefined; instead, it will always be a value of `Cookie<unknown>`, which can be obtained by invoking the **.value** property.\n\nWe can treat the cookie jar as a regular object, iteration over it will only iterate over an already-existing cookie value.\n\n## Cookie Attribute\n\nTo use Cookie attribute, you can either use one of the following:\n\n1. Setting the property directly\n2. Using `set` or `add` to update cookie property.\n\nSee [cookie attribute config](https://elysiajs.com/patterns/cookie.html#config) for more information.\n\n## Assign Property\n\nYou can get/set the property of a cookie like any normal object, the reactivity model synchronizes the cookie value automatically.\n\n## set\n\n**set** permits updating multiple cookie properties all at once through **reset all property** and overwrite the property with a new value.\n\n## add\n\nLike **set**, **add** allow us to update multiple cookie properties at once, but instead, will only overwrite the property defined instead of resetting.\n\n## remove\n\nTo remove a cookie, you can use either:\n\n1. name.remove\n2. delete cookie.name\n\n## Cookie Schema\n\nYou can strictly validate cookie type and providing type inference for cookie by using cookie schema with `t.Cookie`.\n\n## Nullable Cookie\n\nTo handle nullable cookie value, you can use `t.Optional` on the cookie name you want to be nullable.\n\n## Cookie Signature\n\nWith an introduction of Cookie Schema, and `t.Cookie` type, we can create a unified type for handling sign/verify cookie signature automatically.\n\nCookie signature is a cryptographic hash appended to a cookie's value, generated using a secret key and the content of the cookie to enhance security by adding a signature to the cookie.\n\n## Using Cookie Signature\n\nBy provide a cookie secret, and `sign` property to indicate which cookie should have a signature verification.\n\n## Constructor\n\nYou can use Elysia constructor to set global cookie `secret`, and `sign` value to apply to all route globally instead of inlining to every route you need.\n\n## Cookie Rotation\n\nElysia handle Cookie's secret rotation automatically.\n\nCookie Rotation is a migration technique to sign a cookie with a newer secret, while also be able to verify the old signature of the cookie.\n\n## Config\n\nBelow is a cookie config accepted by Elysia.\n\n## secret\n\nThe secret key for signing/un-signing cookies.\n\nIf an array is passed, will use Key Rotation.\n\n## domain\n\nSpecifies the value for the [Domain Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n\n## encode\n\n@default `encodeURIComponent`\n\nSpecifies a function that will be used to encode a cookie's value.\n\n## expires\n\nSpecifies the Date object to be the value for the [Expires Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n\n## httpOnly\n\n@default `false`\n\nSpecifies the boolean value for the [HttpOnly Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n\n## maxAge\n\n@default `undefined`\n\nSpecifies the number (in seconds) to be the value for the [Max-Age Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n\n## path\n\nSpecifies the value for the [Path Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n\n## priority\n\nSpecifies the string to be the value for the [Priority Set-Cookie attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n\n## sameSite\n\nSpecifies the boolean or string to be the value for the [SameSite Set-Cookie attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n\n## secure\n\nSpecifies the boolean value for the [Secure Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "overview", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I outline in elysiajs?\n\nAssistant: To outline in elysiajs, here's what you do:\nTo use Cookie, you can extract the cookie property and access its name and value directly.\n\nThere's no get/set, you can extract the cookie name and retrieve or update its value directly..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reactivity in elysiajs?\n\nAssistant: To reactivity in elysiajs, here's what you do:\nThe Elysia cookie is reactive. This means that when you change the cookie value, the cookie will be updated automatically based on approach like signal.\n\nA single source of truth for handling cookies is provided by Elysia cookies, which have the ability to automatically set headers and sync cookie values.\n\nSince cookies are Proxy-dependent objects by default, the extract value can never be undefined; instead, it will always be a value of `Cookie<unknown>`, which can be obtained by invoking the **.value** property.\n\nWe can treat the cookie jar as a regular object, iteration over it will only iterate over an already-existing cookie value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie attribute in elysiajs?\n\nAssistant: To cookie attribute in elysiajs, here's what you do:\nTo use Cookie attribute, you can either use one of the following:\n\n1. Setting the property directly\n2. Using `set` or `add` to update cookie property.\n\nSee [cookie attribute config](https://elysiajs.com/patterns/cookie.html#config) for more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I assign property in elysiajs?\n\nAssistant: To assign property in elysiajs, here's what you do:\nYou can get/set the property of a cookie like any normal object, the reactivity model synchronizes the cookie value automatically..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I set in elysiajs?\n\nAssistant: To set in elysiajs, here's what you do:\n**set** permits updating multiple cookie properties all at once through **reset all property** and overwrite the property with a new value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I add in elysiajs?\n\nAssistant: To add in elysiajs, here's what you do:\nLike **set**, **add** allow us to update multiple cookie properties at once, but instead, will only overwrite the property defined instead of resetting..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I remove in elysiajs?\n\nAssistant: To remove in elysiajs, here's what you do:\nTo remove a cookie, you can use either:\n\n1. name.remove\n2. delete cookie.name.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie schema in elysiajs?\n\nAssistant: To cookie schema in elysiajs, here's what you do:\nYou can strictly validate cookie type and providing type inference for cookie by using cookie schema with `t.Cookie`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I nullable cookie in elysiajs?\n\nAssistant: To nullable cookie in elysiajs, here's what you do:\nTo handle nullable cookie value, you can use `t.Optional` on the cookie name you want to be nullable..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie signature in elysiajs?\n\nAssistant: To cookie signature in elysiajs, here's what you do:\nWith an introduction of Cookie Schema, and `t.Cookie` type, we can create a unified type for handling sign/verify cookie signature automatically.\n\nCookie signature is a cryptographic hash appended to a cookie's value, generated using a secret key and the content of the cookie to enhance security by adding a signature to the cookie..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I using cookie signature in elysiajs?\n\nAssistant: To using cookie signature in elysiajs, here's what you do:\nBy provide a cookie secret, and `sign` property to indicate which cookie should have a signature verification..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I constructor in elysiajs?\n\nAssistant: To constructor in elysiajs, here's what you do:\nYou can use Elysia constructor to set global cookie `secret`, and `sign` value to apply to all route globally instead of inlining to every route you need..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie rotation in elysiajs?\n\nAssistant: To cookie rotation in elysiajs, here's what you do:\nElysia handle Cookie's secret rotation automatically.\n\nCookie Rotation is a migration technique to sign a cookie with a newer secret, while also be able to verify the old signature of the cookie..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nBelow is a cookie config accepted by Elysia..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I secret in elysiajs?\n\nAssistant: To secret in elysiajs, here's what you do:\nThe secret key for signing/un-signing cookies.\n\nIf an array is passed, will use Key Rotation..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I domain in elysiajs?\n\nAssistant: To domain in elysiajs, here's what you do:\nSpecifies the value for the [Domain Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I encode in elysiajs?\n\nAssistant: To encode in elysiajs, here's what you do:\n@default `encodeURIComponent`\n\nSpecifies a function that will be used to encode a cookie's value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I expires in elysiajs?\n\nAssistant: To expires in elysiajs, here's what you do:\nSpecifies the Date object to be the value for the [Expires Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I httponly in elysiajs?\n\nAssistant: To httponly in elysiajs, here's what you do:\n@default `false`\n\nSpecifies the boolean value for the [HttpOnly Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I maxage in elysiajs?\n\nAssistant: To maxage in elysiajs, here's what you do:\n@default `undefined`\n\nSpecifies the number (in seconds) to be the value for the [Max-Age Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I path in elysiajs?\n\nAssistant: To path in elysiajs, here's what you do:\nSpecifies the value for the [Path Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I priority in elysiajs?\n\nAssistant: To priority in elysiajs, here's what you do:\nSpecifies the string to be the value for the [Priority Set-Cookie attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I samesite in elysiajs?\n\nAssistant: To samesite in elysiajs, here's what you do:\nSpecifies the boolean or string to be the value for the [SameSite Set-Cookie attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I secure in elysiajs?\n\nAssistant: To secure in elysiajs, here's what you do:\nSpecifies the boolean value for the [Secure Set-Cookie attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "section_detail", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Cookie Documentation in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Cookie Usage**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ cookie: { name } }) => {\n        // Get\n        name.value\n\n        // Set\n        name.value = \"New Value\"\n    })\n```\n\nThis snippet shows you how to basic cookie usage, which is an important aspect of cookie documentation.\n\n**Assign Property Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ cookie: { name } }) => {\n        // get\n        name.domain\n\n        // set\n        name.domain = 'millennium.sh'\n        name.httpOnly = true\n    })\n```\n\nThis snippet shows you how to assign property example, which is an important aspect of cookie documentation.\n\n**Set Cookie Properties Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ cookie: { name } }) => {\n        name.set({\n            domain: 'millennium.sh',\n            httpOnly: true\n        })\n    })\n```\n\nThis snippet shows you how to set cookie properties example, which is an important aspect of cookie documentation.\n\n**Remove Cookie Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ cookie, cookie: { name } }) => {\n        name.remove()\n\n        delete cookie.name\n    })\n```\n\nThis snippet shows you how to remove cookie example, which is an important aspect of cookie documentation.\n\n**Cookie Schema Example**:\n\n```yaml\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n    .get('/', ({\ncookie: {\nname } }) => {\n        // Set\n\nname.\nvalue = {\n\nid: 617,\n\nname: 'Summoning 101'\n        }\n    }, {\n\ncookie:\nt.\nCookie({\n\nname:\nt.\nObject({\n\nid:\nt.\nNumeric(),\n\nname:\nt.\nString()\n            })\n        })\n    })\n```\n\nThis snippet shows you how to cookie schema example, which is an important aspect of cookie documentation.\n\n**Nullable Cookie Example**:\n\n```yaml\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n    .get('/', ({\ncookie: {\nname } }) => {\n        // Set\n\nname.\nvalue = {\n\nid: 617,\n\nname: 'Summoning 101'\n        }\n    }, {\n\ncookie:\nt.\nCookie({\n\nname:\nt.\nOptional(\n\n    t.\nObject({\n\nid:\nt.\nNumeric(),\n\nname:\nt.\nString()\n                })\n            )\n        })\n    })\n```\n\nThis snippet shows you how to nullable cookie example, which is an important aspect of cookie documentation.\n\n**Using Cookie Signature Example**:\n\n```yaml\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n    .get('/', ({\ncookie: {\nprofile } }) => {\n\nprofile.\nvalue = {\n\nid: 617,\n\nname: 'Summoning 101'\n        }\n    }, {\n\ncookie:\nt.\nCookie({\n\nprofile:\nt.\nObject({\n\nid:\nt.\nNumeric(),\n\nname:\nt.\nString()\n            })\n        }, {\n\nsecrets: 'Fischl von Luftschloss Narfidort',\n\nsign: ['profile']\n        })\n    })\n```\n\nThis snippet shows you how to using cookie signature example, which is an important aspect of cookie documentation.\n\n**Constructor Example**:\n\n```yaml\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia({\n\ncookie: {\n\nsecrets: 'Fischl von Luftschloss Narfidort',\n\nsign: ['profile']\n    }\n})\n    .get('/', ({\ncookie: {\nprofile } }) => {\n\nprofile.\nvalue = {\n\nid: 617,\n\nname: 'Summoning 101'\n        }\n    }, {\n\ncookie:\nt.\nCookie({\n\nprofile:\nt.\nObject({\n\nid:\nt.\nNumeric(),\n\nname:\nt.\nString()\n            })\n        })\n    })\n```\n\nThis snippet shows you how to constructor example, which is an important aspect of cookie documentation.\n\n**Cookie Rotation Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia({\n    cookie: {\n        secrets: ['Vengeance will be mine', 'Fischl von Luftschloss Narfidort']\n    }\n})\n```\n\nThis snippet shows you how to cookie rotation example, which is an important aspect of cookie documentation.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "code_examples", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Cookie Documentation in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe cookie storage model specification states that if both `expires` and `maxAge` are set, then `maxAge` takes precedence, but not all clients may obey this, so if both are set, they should point to the same date and time.\n\nBe careful when setting `httpOnly` to true, as compliant clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n\nBe careful when setting `secure` to true, as compliant clients will not send the cookie back to the server in the future if the browser does not have an HTTPS connection.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/cookie", "title": "Cookie Documentation", "description": "This documentation covers the usage, attributes, and best practices for handling cookies in Elysia framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 24, "timestamp": "2025-03-01 03:02:28", "type": "best_practices", "page_metadata": {"og:description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:image:width": "1920", "twitter:card": "summary_large_image", "ogTitle": "Reactive Cookie - ElysiaJS", "ogDescription": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Reactive Cookie - ElysiaJS | ElysiaJS", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Reactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API. There's no 'getCookie', 'setCookie', everything is just a cookie object. When you want to use cookie, you just extract the name and value directly.", "og:title": "Reactive Cookie - ElysiaJS", "generator": "VitePress v1.6.3", "language": "en-US", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "b0593ec0-5011-4486-aa68-f3b2108d0dfc", "sourceURL": "https://elysiajs.com/patterns/cookie", "url": "https://elysiajs.com/patterns/cookie", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Handler is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Handler in elysiajs.\n\n# Handler\n\nHandler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.Here's a quick rundown of what this is about:\n\n## Handler\n\nHandler is a function that responds to the request for each route.\n\nAccepting request information and returning a response to the client.\n\nAltenatively, handler is also known as a **Controller** in other frameworks.\n\n## Context\n\n**Context** contains a request information which unique for each request, and is not shared except for `store`(global mutable state).\n\n**Context** can be only retrieve in a route handler, consists of:\n\n- **path** - Pathname of the request\n- **body** - [HTTP message](https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages), form or file upload.\n- **query** - [Query String](https://en.wikipedia.org/wiki/Query_string), include additional parameters for search query as JavaScript Object. (Query is extracted from a value after pathname starting from '?' question mark sign)\n- **params** - Elysia's path parameters parsed as JavaScript object\n- **headers** - [HTTP Header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers), additional information about the request like User-Agent, Content-Type, Cache Hint.\n- **request** - [Web Standard Request](https://developer.mozilla.org/en-US/docs/Web/API/Request)\n- **redirect** - A function to redirect a response\n- **store** - A global mutable store for Elysia instance\n- **cookie** - A global mutable signal store for interacting with Cookie (including get/set)\n- **set** - Property to apply to Response:\n  - **status** - [HTTP status](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status), defaults to 200 if not set.\n  - **headers** - Response headers\n  - **redirect** - Response as a path to redirect to\n- **error** - A function to return custom status code\n- **server** - Bun server instance\n\n## Set\n\n**set** is a mutable property that form a response accessible via `Context.set`.\n\n- **set.status** - Set custom status code\n- **set.headers** - Append custom headers\n- **set.redirect** - Append redirect\n\n## status\n\nWe can return a custom status code by using either:\n\n- **error** function (recommended)\n- **set.status** (legacy)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "overview", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I handler in elysiajs?\n\nAssistant: To handler in elysiajs, here's what you do:\nHandler is a function that responds to the request for each route.\n\nAccepting request information and returning a response to the client.\n\nAltenatively, handler is also known as a **Controller** in other frameworks..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I context in elysiajs?\n\nAssistant: To context in elysiajs, here's what you do:\n**Context** contains a request information which unique for each request, and is not shared except for `store`(global mutable state).\n\n**Context** can be only retrieve in a route handler, consists of:\n\n- **path** - Pathname of the request\n- **body** - [HTTP message](https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages), form or file upload.\n- **query** - [Query String](https://en.wikipedia.org/wiki/Query_string), include additional parameters for search query as JavaScript Object. (Query is extracted from a value after pathname starting from '?' question mark sign)\n- **params** - Elysia's path parameters parsed as JavaScript object\n- **headers** - [HTTP Header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers), additional information about the request like User-Agent, Content-Type, Cache Hint.\n- **request** - [Web Standard Request](https://developer.mozilla.org/en-US/docs/Web/API/Request)\n- **redirect** - A function to redirect a response\n- **store** - A global mutable store for Elysia instance\n- **cookie** - A global mutable signal store for interacting with Cookie (including get/set)\n- **set** - Property to apply to Response:\n  - **status** - [HTTP status](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status), defaults to 200 if not set.\n  - **headers** - Response headers\n  - **redirect** - Response as a path to redirect to\n- **error** - A function to return custom status code\n- **server** - Bun server instance.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I set in elysiajs?\n\nAssistant: To set in elysiajs, here's what you do:\n**set** is a mutable property that form a response accessible via `Context.set`.\n\n- **set.status** - Set custom status code\n- **set.headers** - Append custom headers\n- **set.redirect** - Append redirect.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I status in elysiajs?\n\nAssistant: To status in elysiajs, here's what you do:\nWe can return a custom status code by using either:\n\n- **error** function (recommended)\n- **set.status** (legacy).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Handler in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Handler Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    // the function `() => 'hello world'` is a handler\n    .get('/', () => 'hello world')\n    .listen(3000)\n```\n\nThis snippet shows you how to basic handler example, which is an important aspect of handler.\n\n**Inline Value Handler Example**:\n\n```yaml\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n    .get('/', 'Hello Elysia')\n    .get('/video', file('kyuukurarin.mp4'))\n    .listen(3000)\n```\n\nThis snippet shows you how to inline value handler example, which is an important aspect of handler.\n\n**Context Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', (context) => context.path) // ^ This is a context\n```\n\nThis snippet shows you how to context example, which is an important aspect of handler.\n\n**Set Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set, error }) => {\n        set.headers = { 'X-Teapot': 'true' }\n        return error(418, 'I am a teapot')\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to set example, which is an important aspect of handler.\n\n**Error Function Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ error }) => error(418, \"Kirifuji Nagisa\"))\n    .listen(3000)\n```\n\nThis snippet shows you how to error function example, which is an important aspect of handler.\n\n**Set Status Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/error', ({ error }) => error(418, 'I am a teapot'))\n    .get('/set.status', ({ set }) => {\n        set.status = 418\n        return 'I am a teapot'\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to set status example, which is an important aspect of handler.\n\n**Set Headers Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.headers['x-powered-by'] = 'Elysia'\n        return 'a mimir'\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to set headers example, which is an important aspect of handler.\n\n**Redirect Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ redirect }) => {\n        return redirect('https://youtu.be/whpVWVWBW4U?&t=8')\n    })\n    .get('/custom-status', ({ redirect }) => {\n        return redirect('https://youtu.be/whpVWVWBW4U?&t=8', 302)\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to redirect example, which is an important aspect of handler.\n\n**Server Instance Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/port', ({ server }) => {\n        return server?.port\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to server instance example, which is an important aspect of handler.\n\n**Response Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'hi')\n    .listen(3000)\n```\n\nThis snippet shows you how to response example, which is an important aspect of handler.\n\n**Formdata Example**:\n\n```yaml\nimport { Elysia, form, file } from 'elysia'\n\nnew Elysia()\n    .get('/', () => form({\n        name: 'Tea Party',\n        images: [file('nagi.web'), file('mika.webp')]\n    }))\n    .listen(3000)\n```\n\nThis snippet shows you how to formdata example, which is an important aspect of handler.\n\n**Handle Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hello')\n    .post('/hi', () => 'hi')\n    .listen(3000)\n\napp.handle(new Request('http://localhost/')).then(console.log)\n```\n\nThis snippet shows you how to handle example, which is an important aspect of handler.\n\n**Stream Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/ok', function* () {\n        yield 1\n        yield 2\n        yield 3\n    })\n```\n\nThis snippet shows you how to stream example, which is an important aspect of handler.\n\n**Set Headers in Stream Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/ok', function* ({ set }) {\n        set.headers['x-name'] = 'Elysia'\n        yield 1\n        yield 2\n        set.headers['x-id'] = '1'\n        yield 3\n    })\n```\n\nThis snippet shows you how to set headers in stream example, which is an important aspect of handler.\n\n**Conditional Stream Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/ok', function* () {\n        if (Math.random() > 0.5) return 'ok'\n        yield 1\n        yield 2\n        yield 3\n    })\n```\n\nThis snippet shows you how to conditional stream example, which is an important aspect of handler.\n\n**Error from Resolve Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .derive(({ headers, error }) => {\n        const auth = headers['authorization']\n        if (!auth) return error(400)\n        return {\n            bearer: auth?.startsWith('Bearer ') ? auth.slice(7) : null\n        }\n    })\n    .get('/', ({ bearer }) => bearer)\n```\n\nThis snippet shows you how to error from resolve example, which is an important aspect of handler.\n\n", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "code_examples", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Handler in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nProviding an inline value is not a cache.\n\nIt's recommended to use `error` inside main handler as it has better inference.\n\nHTTP Status indicates the type of response. If the route handler is executed successfully without error, Elysia will return the status code 200.\n\nBeware that we cannot use a state value before assign.\n\nUsing remap, Elysia will treat a returned object as a new property, removing any property that is missing from the object.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/essential/handler", "title": "Handler", "description": "Handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Alternatively, handler is also known as a Controller in other frameworks.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:02:55", "type": "best_practices", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "ogTitle": "Handler - ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Handler - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:title": "Handler - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "handler is a function that responds to the request for each route. Accepting request information and returning a response to the client. Handler can be registered through Elysia.get / Elysia.post", "scrapeId": "efb8f9fb-0eba-48be-91a9-8136d4d13e81", "sourceURL": "https://elysiajs.com/essential/handler", "url": "https://elysiajs.com/essential/handler", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what End-to-End Type Safety is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain End-to-End Type Safety in elysiajs.\n\n# End-to-End Type Safety\n\nThis page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.Here's a quick rundown of what this is about:\n\n## End-to-End Type Safety\n\nImagine you have a toy train set.\n\nEach piece of the train track has to fit perfectly with the next one, like puzzle pieces.\n\nEnd-to-end type safety is like making sure all the pieces of the track match up correctly so the train doesn't fall off or get stuck.\n\nFor a framework to have end-to-end type safety means you can connect client and server in a type-safe manner.\n\nElysia provide end-to-end type safety **without code generation** out of the box with RPC-like connector, **Eden**\n\nOthers framework that support e2e type safety:\n\n- tRPC\n- Remix\n- SvelteKit\n- Nuxt\n- TS-Rest\n\nElysia allows you to change the type on the server and it will be instantly reflected on the client, helping with auto-completion and type-enforcement.\n\n## Eden\n\nEden is a RPC-like client to connect Elysia **end-to-end type safety** using only TypeScript's type inference instead of code generation.\n\nAllowing you to sync client and server types effortlessly, weighing less than 2KB.\n\nEden is consists of 2 modules:\n\n1. Eden Treaty **(recommended)**: an improved version RFC version of Eden Treaty\n2. Eden Fetch: Fetch-like client with type safety.\n\nBelow is an overview, use-case and comparison for each module.\n\n## Eden Treaty (Recommended)\n\nEden Treaty is an object-like representation of an Elysia server providing end-to-end type safety and a significantly improved developer experience.\n\nWith Eden Treaty we can connect interact Elysia server with full-type support and auto-completion, error handling with type narrowing, and creating type safe unit test.\n\n## Eden Fetch\n\nA fetch-like alternative to Eden Treaty for developers that prefers fetch syntax.\n\nNOTE\n\nUnlike Eden Treaty, Eden Fetch doesn't provide Web Socket implementation for Elysia server.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "overview", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I end-to-end type safety in elysiajs?\n\nAssistant: To end-to-end type safety in elysiajs, here's what you do:\nImagine you have a toy train set.\n\nEach piece of the train track has to fit perfectly with the next one, like puzzle pieces.\n\nEnd-to-end type safety is like making sure all the pieces of the track match up correctly so the train doesn't fall off or get stuck.\n\nFor a framework to have end-to-end type safety means you can connect client and server in a type-safe manner.\n\nElysia provide end-to-end type safety **without code generation** out of the box with RPC-like connector, **Eden**\n\nOthers framework that support e2e type safety:\n\n- tRPC\n- Remix\n- SvelteKit\n- Nuxt\n- TS-Rest\n\nElysia allows you to change the type on the server and it will be instantly reflected on the client, helping with auto-completion and type-enforcement..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden in elysiajs?\n\nAssistant: To eden in elysiajs, here's what you do:\nEden is a RPC-like client to connect Elysia **end-to-end type safety** using only TypeScript's type inference instead of code generation.\n\nAllowing you to sync client and server types effortlessly, weighing less than 2KB.\n\nEden is consists of 2 modules:\n\n1. Eden Treaty **(recommended)**: an improved version RFC version of Eden Treaty\n2. Eden Fetch: Fetch-like client with type safety.\n\nBelow is an overview, use-case and comparison for each module..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden treaty (recommended) in elysiajs?\n\nAssistant: To eden treaty (recommended) in elysiajs, here's what you do:\nEden Treaty is an object-like representation of an Elysia server providing end-to-end type safety and a significantly improved developer experience.\n\nWith Eden Treaty we can connect interact Elysia server with full-type support and auto-completion, error handling with type narrowing, and creating type safe unit test..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden fetch in elysiajs?\n\nAssistant: To eden fetch in elysiajs, here's what you do:\nA fetch-like alternative to Eden Treaty for developers that prefers fetch syntax.\n\nNOTE\n\nUnlike Eden Treaty, Eden Fetch doesn't provide Web Socket implementation for Elysia server..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for End-to-End Type Safety in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Eden Treaty Example**:\n\n```yaml\nimport {\ntreaty\n} from '@elysiajs/eden'\nimport type {\nApp\n} from './server'\n\nconst\napp\n=\ntreaty\n<App>('localhost:3000')\n\napp\n.\n// Call [GET] at '/'\nconst { data } = await\napp\n.index\n.get()\n\n// Call [PUT] at '/nendoroid/:id'\nconst {\ndata\n:\nnendoroid\n,\nerror\n} = await\napp\n.nendoroid({\nid\n: 1895 }).put({\nname\n: 'Skadi',\nfrom\n: 'Arknights'\n})\n```\n\nThis snippet shows you how to eden treaty example, which is an important aspect of end-to-end type safety.\n\n**Eden Fetch Example**:\n\n```yaml\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\nconst { data } = await fetch('/name/:name', {\n    method: 'POST',\n    params: {\n        name: 'Saori'\n    },\n    body: {\n        branch: 'Arius',\n        type: 'Striker'\n    }\n})\n```\n\nThis snippet shows you how to eden fetch example, which is an important aspect of end-to-end type safety.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "code_examples", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using End-to-End Type Safety in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia provides end-to-end type safety without code generation, which enhances developer experience.\n\nEden Treaty is recommended for full-type support and auto-completion.\n\nEden Fetch is a good alternative for those who prefer fetch syntax, but it lacks Web Socket implementation.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/overview", "title": "End-to-End Type Safety", "description": "This page covers the concept of end-to-end type safety in the Elysia framework, detailing how it connects client and server using type-safe methods without code generation.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:03:07", "type": "best_practices", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "ogTitle": "End-to-End Type Safety - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "title": "End-to-End Type Safety - ElysiaJS | ElysiaJS", "ogDescription": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "End-to-End Type Safety - ElysiaJS", "generator": "VitePress v1.6.3", "og:description": "Elysia supports end-to-end type safety with Elysia Eden since start. End-to-end type-safety refers to a system in which every component of the system is checked for type consistency, meaning that data is passed between components only if the types of the data are compatible.", "scrapeId": "e74870b4-1b94-40c5-92c0-62bb631931b4", "sourceURL": "https://elysiajs.com/eden/overview", "url": "https://elysiajs.com/eden/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what OpenAPI is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain OpenAPI in elysiajs.\n\n# OpenAPI\n\nElysia has first-class support and follows OpenAPI schema by default.Here's a quick rundown of what this is about:\n\n## Route definitions\n\nWe add route information by providing a schema type.\n\nHowever, sometime defining a type only isn't clear what the route might work. You can use `schema.detail` fields to explictly define what the route is all about.\n\nThe detail fields follows an OpenAPI V3 definition with auto-completion and type-safety by default.\n\nDetail is then passed to Swagger to put the description to Swagger route.\n\n## detail\n\n`detail` extends the [OpenAPI Operation Object](https://swagger.io/specification#operation-object)\n\nThe detail field is an object that can be use to describe information about the route for API documentation.\n\nWhich may contains the following fields:\n\n### tags\nAn array of tags for the operation. Tags can be used for logical grouping of operations by resources or any other qualifier.\n\n### summary\nA short summary of what the operation does.\n\n### description\nA verbose explanation of the operation behavior.\n\n### externalDocs\nAdditional external documentation for this operation.\n\n### operationId\nA unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive.\n\n### deprecated\nDeclares this operation to be deprecated. Consumers SHOULD refrain from usage of the declared operation. Default value is `false`.\n\n### security\nA declaration of which security mechanisms can be used for this operation. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. To make security optional, an empty security requirement ( `{}`) can be included in the array.\n\n## Hide\n\nYou can hide the route from the Swagger page by setting `detail.hide` to `true`.\n\n## Tags group\n\nElysia may accept tags to add an entire instance or group of routes to a specific tag.\n\n## Guard\n\nAlternatively, Elysia may accept guards to add an entire instance or group of routes to a specific guard.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "overview", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I route definitions in elysiajs?\n\nAssistant: To route definitions in elysiajs, here's what you do:\nWe add route information by providing a schema type.\n\nHowever, sometime defining a type only isn't clear what the route might work. You can use `schema.detail` fields to explictly define what the route is all about.\n\nThe detail fields follows an OpenAPI V3 definition with auto-completion and type-safety by default.\n\nDetail is then passed to Swagger to put the description to Swagger route..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I detail in elysiajs?\n\nAssistant: To detail in elysiajs, here's what you do:\n`detail` extends the [OpenAPI Operation Object](https://swagger.io/specification#operation-object)\n\nThe detail field is an object that can be use to describe information about the route for API documentation.\n\nWhich may contains the following fields:\n\n### tags\nAn array of tags for the operation. Tags can be used for logical grouping of operations by resources or any other qualifier.\n\n### summary\nA short summary of what the operation does.\n\n### description\nA verbose explanation of the operation behavior.\n\n### externalDocs\nAdditional external documentation for this operation.\n\n### operationId\nA unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive.\n\n### deprecated\nDeclares this operation to be deprecated. Consumers SHOULD refrain from usage of the declared operation. Default value is `false`.\n\n### security\nA declaration of which security mechanisms can be used for this operation. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. To make security optional, an empty security requirement ( `{}`) can be included in the array..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I hide in elysiajs?\n\nAssistant: To hide in elysiajs, here's what you do:\nYou can hide the route from the Swagger page by setting `detail.hide` to `true`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I tags group in elysiajs?\n\nAssistant: To tags group in elysiajs, here's what you do:\nElysia may accept tags to add an entire instance or group of routes to a specific tag..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I guard in elysiajs?\n\nAssistant: To guard in elysiajs, here's what you do:\nAlternatively, Elysia may accept guards to add an entire instance or group of routes to a specific guard..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for OpenAPI in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Swagger Plugin**:\n\n```yaml\nbash\n\n```\nbun add @elysiajs/swagger\n```\n```\n\nThis snippet shows you how to install swagger plugin, which is an important aspect of openapi.\n\n**Register Swagger Plugin**:\n\n```yaml\ntypescript\n\n```\nimport { Elysia } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n```\n```\n\nThis snippet shows you how to register swagger plugin, which is an important aspect of openapi.\n\n**Route Definition Example**:\n\n```yaml\ntypescript\n\n```\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nnew Elysia()\n    .use(swagger())\n    .post('/sign-in', ({ body }) => body, {\n        body: t.Object(\n            {\n                username: t.String(),\n                password: t.String({\n                 minLength: 8,\n                 description: 'User password (at least 8 characters)'\n                })\n            },\n            {\n                description: 'Expected an username and password'\n            }\n        ),\n        detail: {\n            summary: 'Sign in the user',\n            tags: ['authentication']\n        }\n    })\n```\n```\n\nThis snippet shows you how to route definition example, which is an important aspect of openapi.\n\n**Hide Route Example**:\n\n```yaml\ntypescript\n\n```\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nnew Elysia()\n    .use(swagger())\n    .post('/sign-in', ({ body }) => body, {\n        body: t.Object(\n            {\n                username: t.String(),\n                password: t.String()\n            },\n            {\n                description: 'Expected an username and password'\n            }\n        ),\n        detail: {\n         hide: true\n        }\n    })\n```\n```\n\nThis snippet shows you how to hide route example, which is an important aspect of openapi.\n\n**Tags Group Example**:\n\n```yaml\ntypescript\n\n```\nimport { Elysia, t } from 'elysia'\n\nnew Elysia({\n\ttags: ['user']\n})\n\t.get('/user', 'user')\n\t.get('/admin', 'admin')\n```\n```\n\nThis snippet shows you how to tags group example, which is an important aspect of openapi.\n\n**Guard Example**:\n\n```yaml\ntypescript\n\n```\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n\t.guard({\n\t\tdetail: {\n\t\t\tdescription: 'Require user to be logged in'\n\t\t}\n\t})\n\t.get('/user', 'user')\n\t.get('/admin', 'admin')\n```\n```\n\nThis snippet shows you how to guard example, which is an important aspect of openapi.\n\n", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "code_examples", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using OpenAPI in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse `schema.detail` fields to explicitly define route information for better clarity.\n\nUtilize tags for logical grouping of operations in your API documentation.\n\nConsider using the `detail` object to provide additional information about your routes, such as summary and description.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/recipe/openapi", "title": "OpenAPI", "description": "Elysia has first-class support and follows OpenAPI schema by default.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:03:25", "type": "best_practices", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogDescription": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "og:image:height": "1080", "title": "OpenAPI - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "OpenAPI - ElysiaJS", "twitter:card": "summary_large_image", "og:title": "OpenAPI - ElysiaJS", "og:description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "description": "Elysia has first-class support and follows OpenAPI schema by default. Allowing any Elysia server to generate a Swagger page and serve as documentation automatically by using just 1 line of the Elysia Swagger plugin.", "scrapeId": "e219e005-41cf-4dde-87f4-dabf0aacff91", "sourceURL": "https://elysiajs.com/recipe/openapi", "url": "https://elysiajs.com/recipe/openapi", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Key Concept is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Key Concept in elysiajs.\n\n# Key Concept\n\nThis page covers the most important concepts of Elysia that you should know before using the library effectively.Here's a quick rundown of what this is about:\n\n## We highly recommended you to read this page before start using Elysia\n\nAlthough Elysia is a simple library, it has some key concepts that you need to understand to use it effectively.\n\n## Everything is a component\n\nEvery Elysia instance is a component. A component is a plugin that could plug into other instances. It could be a router, a store, a service, or anything else.\n\n## Scope\n\nBy default, event/life-cycle in each instance is isolated from each other.\n\n## Method Chaining\n\nElysia code should always use method chaining. As Elysia type system is complex, every methods in Elysia returns a new type reference.\n\n## Dependency\n\nBy default, each instance will be re-execute everytime it's applied to another instance. This can cause a duplication of the same method being applied multiple times but some methods should be called once like lifecycle or routes.\n\n## Type Inference\n\nElysia has a complex type system that allows you to infer types from the instance.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "overview", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I we highly recommended you to read this page before start using elysia in elysiajs?\n\nAssistant: To we highly recommended you to read this page before start using elysia in elysiajs, here's what you do:\nAlthough Elysia is a simple library, it has some key concepts that you need to understand to use it effectively..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "section_detail", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I everything is a component in elysiajs?\n\nAssistant: To everything is a component in elysiajs, here's what you do:\nEvery Elysia instance is a component. A component is a plugin that could plug into other instances. It could be a router, a store, a service, or anything else..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "section_detail", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I scope in elysiajs?\n\nAssistant: To scope in elysiajs, here's what you do:\nBy default, event/life-cycle in each instance is isolated from each other..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "section_detail", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I method chaining in elysiajs?\n\nAssistant: To method chaining in elysiajs, here's what you do:\nElysia code should always use method chaining. As Elysia type system is complex, every methods in Elysia returns a new type reference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "section_detail", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I dependency in elysiajs?\n\nAssistant: To dependency in elysiajs, here's what you do:\nBy default, each instance will be re-execute everytime it's applied to another instance. This can cause a duplication of the same method being applied multiple times but some methods should be called once like lifecycle or routes..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "section_detail", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type inference in elysiajs?\n\nAssistant: To type inference in elysiajs, here's what you do:\nElysia has a complex type system that allows you to infer types from the instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "section_detail", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Key Concept in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Example of Elysia components**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst store = new Elysia()\n    .state({ visitor: 0 })\n\nconst router = new Elysia()\n    .use(store)\n    .get('/increase', ({ store }) => store.visitor++)\n\nconst app = new Elysia()\n    .use(router)\n    .get('/', ({ store }) => store)\n    .listen(3000)\n```\n\nThis snippet shows you how to example of elysia components, which is an important aspect of key concept.\n\n**Example of Scope in Elysia**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst ip = new Elysia()\n    .derive(({ server, request }) => ({\n        ip: server?.requestIP(request)\n    }))\n    .get('/ip', ({ ip }) => ip)\n\nconst server = new Elysia()\n    .use(ip)\n    .get('/ip', ({ ip }) => ip)\n    .listen(3000)\n```\n\nThis snippet shows you how to example of scope in elysia, which is an important aspect of key concept.\n\n**Example of Method Chaining**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('build', 1)\n    .get('/', ({ store: { build } }) => build)\n    .listen(3000)\n```\n\nThis snippet shows you how to example of method chaining, which is an important aspect of key concept.\n\n**Example of Dependency in Elysia**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst ip = new Elysia({ name: 'ip' })\n    .derive({ as: 'global' }, ({ server, request }) => ({\n        ip: server?.requestIP(request)\n    }))\n    .get('/ip', ({ ip }) => ip)\n\nconst router1 = new Elysia()\n    .use(ip)\n    .get('/ip-1', ({ ip }) => ip)\n\nconst router2 = new Elysia()\n    .use(ip)\n    .get('/ip-2', ({ ip }) => ip)\n\nconst server = new Elysia()\n    .use(router1)\n    .use(router2)\n```\n\nThis snippet shows you how to example of dependency in elysia, which is an important aspect of key concept.\n\n**Example of Type Inference**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n```\n\nThis snippet shows you how to example of type inference, which is an important aspect of key concept.\n\n", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "code_examples", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Key Concept in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways use method chaining to provide accurate type inference.\n\nBe mindful of the scope of each property to prevent accidental sharing between instances.\n\nUse an inline function for accurate type inference when possible.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/key-concept", "title": "Key Concept", "description": "This page covers the most important concepts of Elysia that you should know before using the library effectively.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:03:51", "type": "best_practices", "page_metadata": {"language": "en-US", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "generator": "VitePress v1.6.3", "ogTitle": "Key Concept - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "ogDescription": "Although Elysia is a simple library, it has some key concepts that you need to understand to use it effectively. This page will guide you through the key concepts of ElysiaJS.", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Key Concept - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Key Concept - ElysiaJS", "og:image:height": "1080", "scrapeId": "6e1a03f6-282e-48ca-af73-69b4fa1f3263", "sourceURL": "https://elysiajs.com/key-concept", "url": "https://elysiajs.com/key-concept", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what CORS Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain CORS Plugin in elysiajs.\n\n# CORS Plugin\n\nThis plugin adds support for customizing Cross-Origin Resource Sharing behavior.Here's a quick rundown of what this is about:\n\n## Install\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/cors\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\ncors\n\n} from '@elysiajs/cors'\n\nnew\nElysia\n\n().use\n\n(\ncors\n\n()).listen\n\n(3000)\n```\n\nThis will set Elysia to accept requests from any origin.\n\n## Config\n\nBelow is a config which is accepted by the plugin.\n\n## origin\n\n@default `true`\n\nIndicates whether the response can be shared with the requesting code from the given origins.\n\nValue can be one of the following:\n\n- **string** \\- Name of origin which will directly assign to [Access-Control-Allow-Origin](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) header.\n- **boolean** \\- If set to true, [Access-Control-Allow-Origin](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) will be set to `*` (any origins)\n- **RegExp** \\- Pattern to match request's URL, allowed if matched.\n- **Function** \\- Custom logic to allow resource sharing, allow if `true` is returned.\n\n  - Expected to have the type of:\n\ntypescript\n\n```\ncors(context: Context) => boolean | void\n```\n\n- **Array<string \\| RegExp \\| Function>** \\- iterate through all cases above in order, allowed if any of the values are `true`.\n\n## methods\n\n@default `*`\n\nAllowed methods for cross-origin requests.\n\nAssign [Access-Control-Allow-Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) header.\n\nValue can be one of the following:\n\n- **undefined \\| null \\| ''** \\- Ignore all methods.\n- **\\*** \\- Allows all methods.\n- **string** \\- Expects either a single method or a comma-delimited string\n  - (eg: `'GET, PUT, POST'`)\n- **string[]** \\- Allow multiple HTTP methods.\n  - eg: `['GET', 'PUT', 'POST']`.\n\n## allowedHeaders\n\n@default `*`\n\nAllowed headers for an incoming request.\n\nAssign [Access-Control-Allow-Headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) header.\n\nValue can be one of the following:\n\n- **string** \\- Expects either a single header or a comma-delimited string\n  - eg: `'Content-Type, Authorization'`.\n- **string[]** \\- Allow multiple HTTP headers.\n  - eg: `['Content-Type', 'Authorization']`.\n\n## exposeHeaders\n\n@default `*`\n\nResponse CORS with specified headers.\n\nAssign [Access-Control-Expose-Headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers) header.\n\nValue can be one of the following:\n\n- **string** \\- Expects either a single header or a comma-delimited string.\n  - eg: `'Content-Type, X-Powered-By'`.\n- **string[]** \\- Allow multiple HTTP headers.\n  - eg: `['Content-Type', 'X-Powered-By']`.\n\n## credentials\n\n@default `true`\n\nThe Access-Control-Allow-Credentials response header tells browsers whether to expose the response to the frontend JavaScript code when the request's credentials mode [Request.credentials](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials) is `include`.\n\nWhen a request's credentials mode [Request.credentials](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials) is `include`, browsers will only expose the response to the frontend JavaScript code if the Access-Control-Allow-Credentials value is true.\n\nCredentials are cookies, authorization headers, or TLS client certificates.\n\nAssign [Access-Control-Allow-Credentials](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials) header.\n\n## maxAge\n\n@default `5`\n\nIndicates how long the results of a [preflight request](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) (that is the information contained in the [Access-Control-Allow-Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) and [Access-Control-Allow-Headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) headers) can be cached.\n\nAssign [Access-Control-Max-Age](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age) header.\n\n## preflight\n\nThe preflight request is a request sent to check if the CORS protocol is understood and if a server is aware of using specific methods and headers.\n\nResponse with **OPTIONS** request with 3 HTTP request headers:\n\n- **Access-Control-Request-Method**\n- **Access-Control-Request-Headers**\n- **Origin**\n\nThis config indicates if the server should respond to preflight requests.\n\n## Pattern\n\nBelow you can find the common patterns to use the plugin.\n\n## Allow CORS by top-level domain\n\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\ncors\n\n} from '@elysiajs/cors'\n\nconst\napp\n\n= new\nElysia\n()\n\t.\nuse\n\n(\ncors\n\n({\norigin\n: /.*\\.saltyaom\\.com$/\n\t\t})\n\t)\n\t.\nget\n\n('/', () => 'Hi')\n\t.\nlisten\n\n(3000)\n```\n\nThis will allow requests from top-level domains with `saltyaom.com`.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "overview", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I install in elysiajs?\n\nAssistant: To install in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/cors\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\ncors\n\n} from '@elysiajs/cors'\n\nnew\nElysia\n\n().use\n\n(\ncors\n\n()).listen\n\n(3000)\n```\n\nThis will set Elysia to accept requests from any origin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nBelow is a config which is accepted by the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I origin in elysiajs?\n\nAssistant: To origin in elysiajs, here's what you do:\n@default `true`\n\nIndicates whether the response can be shared with the requesting code from the given origins.\n\nValue can be one of the following:\n\n- **string** \\- Name of origin which will directly assign to [Access-Control-Allow-Origin](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) header.\n- **boolean** \\- If set to true, [Access-Control-Allow-Origin](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) will be set to `*` (any origins)\n- **RegExp** \\- Pattern to match request's URL, allowed if matched.\n- **Function** \\- Custom logic to allow resource sharing, allow if `true` is returned.\n\n  - Expected to have the type of:\n\ntypescript\n\n```\ncors(context: Context) => boolean | void\n```\n\n- **Array<string \\| RegExp \\| Function>** \\- iterate through all cases above in order, allowed if any of the values are `true`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I methods in elysiajs?\n\nAssistant: To methods in elysiajs, here's what you do:\n@default `*`\n\nAllowed methods for cross-origin requests.\n\nAssign [Access-Control-Allow-Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) header.\n\nValue can be one of the following:\n\n- **undefined \\| null \\| ''** \\- Ignore all methods.\n- **\\*** \\- Allows all methods.\n- **string** \\- Expects either a single method or a comma-delimited string\n  - (eg: `'GET, PUT, POST'`)\n- **string[]** \\- Allow multiple HTTP methods.\n  - eg: `['GET', 'PUT', 'POST']`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I allowedheaders in elysiajs?\n\nAssistant: To allowedheaders in elysiajs, here's what you do:\n@default `*`\n\nAllowed headers for an incoming request.\n\nAssign [Access-Control-Allow-Headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) header.\n\nValue can be one of the following:\n\n- **string** \\- Expects either a single header or a comma-delimited string\n  - eg: `'Content-Type, Authorization'`.\n- **string[]** \\- Allow multiple HTTP headers.\n  - eg: `['Content-Type', 'Authorization']`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I exposeheaders in elysiajs?\n\nAssistant: To exposeheaders in elysiajs, here's what you do:\n@default `*`\n\nResponse CORS with specified headers.\n\nAssign [Access-Control-Expose-Headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers) header.\n\nValue can be one of the following:\n\n- **string** \\- Expects either a single header or a comma-delimited string.\n  - eg: `'Content-Type, X-Powered-By'`.\n- **string[]** \\- Allow multiple HTTP headers.\n  - eg: `['Content-Type', 'X-Powered-By']`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I credentials in elysiajs?\n\nAssistant: To credentials in elysiajs, here's what you do:\n@default `true`\n\nThe Access-Control-Allow-Credentials response header tells browsers whether to expose the response to the frontend JavaScript code when the request's credentials mode [Request.credentials](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials) is `include`.\n\nWhen a request's credentials mode [Request.credentials](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials) is `include`, browsers will only expose the response to the frontend JavaScript code if the Access-Control-Allow-Credentials value is true.\n\nCredentials are cookies, authorization headers, or TLS client certificates.\n\nAssign [Access-Control-Allow-Credentials](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials) header..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I maxage in elysiajs?\n\nAssistant: To maxage in elysiajs, here's what you do:\n@default `5`\n\nIndicates how long the results of a [preflight request](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) (that is the information contained in the [Access-Control-Allow-Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) and [Access-Control-Allow-Headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) headers) can be cached.\n\nAssign [Access-Control-Max-Age](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age) header..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I preflight in elysiajs?\n\nAssistant: To preflight in elysiajs, here's what you do:\nThe preflight request is a request sent to check if the CORS protocol is understood and if a server is aware of using specific methods and headers.\n\nResponse with **OPTIONS** request with 3 HTTP request headers:\n\n- **Access-Control-Request-Method**\n- **Access-Control-Request-Headers**\n- **Origin**\n\nThis config indicates if the server should respond to preflight requests..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I pattern in elysiajs?\n\nAssistant: To pattern in elysiajs, here's what you do:\nBelow you can find the common patterns to use the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I allow cors by top-level domain in elysiajs?\n\nAssistant: To allow cors by top-level domain in elysiajs, here's what you do:\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\ncors\n\n} from '@elysiajs/cors'\n\nconst\napp\n\n= new\nElysia\n()\n\t.\nuse\n\n(\ncors\n\n({\norigin\n: /.*\\.saltyaom\\.com$/\n\t\t})\n\t)\n\t.\nget\n\n('/', () => 'Hi')\n\t.\nlisten\n\n(3000)\n```\n\nThis will allow requests from top-level domains with `saltyaom.com`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for CORS Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/cors\n```\n\nThis snippet shows you how to installation command, which is an important aspect of cors plugin.\n\n**Basic Usage Example**:\n\n```yaml\nimport {\nElysia\n} from 'elysia'\nimport {\ncors\n} from '@elysiajs/cors'\n\nnew\nElysia\n().use(\ncors()).listen(3000)\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of cors plugin.\n\n**CORS Origin Configuration Example**:\n\n```yaml\ncors(context: Context) => boolean | void\n```\n\nThis snippet shows you how to cors origin configuration example, which is an important aspect of cors plugin.\n\n**Allow CORS by Top-Level Domain Example**:\n\n```yaml\nimport {\nElysia\n} from 'elysia'\nimport {\ncors\n} from '@elysiajs/cors'\n\nconst\napp\n= new\nElysia\n()\n\t.\nuse(\ncors({\norigin: /.*\\.saltyaom\\.com$/\n\t\t})\n\t)\n\t.\nget('/', () => 'Hi')\n\t.\nlisten(3000)\n```\n\nThis snippet shows you how to allow cors by top-level domain example, which is an important aspect of cors plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "code_examples", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using CORS Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse specific origins instead of allowing all origins for better security.\n\nConsider using regular expressions for more complex origin matching.\n\nAlways test CORS configurations in different browsers to ensure compatibility.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/cors", "title": "CORS Plugin", "description": "This plugin adds support for customizing Cross-Origin Resource Sharing behavior.", "has_code_examples": true, "has_best_practices": true, "section_count": 12, "timestamp": "2025-03-01 03:04:12", "type": "best_practices", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with ", "title": "CORS Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogTitle": "CORS Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "og:title": "CORS Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "scrapeId": "3d672380-2467-4712-aa62-35b5e75d79db", "sourceURL": "https://elysiajs.com/plugins/cors", "url": "https://elysiajs.com/plugins/cors", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Stream Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Stream Plugin in elysiajs.\n\n# Stream Plugin\n\nThis plugin adds support for streaming response or sending Server-Sent Event back to the client.Here's a quick rundown of what this is about:\n\n## WARNING\n\nThis plugin is in maintenance mode and will not receive new features. We recommend using the Generator Stream instead.\n\n## Installation\n\nInstall with:\n\n```bash\nbun add @elysiajs/stream\n```\n\n## Usage\n\nThen use it:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { Stream } from '@elysiajs/stream'\n\nnew Elysia()\n    .get('/', () => new Stream(async (stream) => {\n        stream.send('hello')\n\n        await stream.wait(1000)\n        stream.send('world')\n\n        stream.close()\n    }))\n    .listen(3000)\n```\n\n## Constructor\n\nBelow is the constructor parameter accepted by `Stream`:\n\n1. Stream:\n   - Automatic: Automatically stream response from a provided value\n     - Iterable\n     - AsyncIterable\n     - ReadableStream\n     - Response\n   - Manual: Callback of `(stream: this) => unknown` or `undefined`\n2. Options: `StreamOptions`\n   - [event](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#event): A string identifying the type of event described\n   - [retry](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#retry): The reconnection time in milliseconds\n\n## Method\n\nBelow is the method provided by `Stream`:\n\n### send\nEnqueue data to stream to send back to the client\n\n### close\nClose the stream\n\n### wait\nReturn a promise that resolves in the provided value in ms\n\n### value\nInner value of the `ReadableStream`\n\n## Pattern\n\nBelow you can find the common patterns to use the plugin.\n\n- [OpenAI](https://elysiajs.com/plugins/stream#openai)\n- [Fetch Stream](https://elysiajs.com/plugins/stream#fetch-stream)\n- [Server Sent Event](https://elysiajs.com/plugins/stream#server-sent-event)\n\n## OpenAI\n\nAutomatic mode is triggered when the parameter is either `Iterable` or `AsyncIterable` streaming the response back to the client automatically.\n\nBelow is an example of integrating ChatGPT into Elysia.\n\n```typescript\nnew Elysia()\n    .get(\n        '/ai',\n        ({ query: { prompt } }) =>\n            new Stream(\n                openai.chat.completions.create({\n                    model: 'gpt-3.5-turbo',\n                    stream: true,\n                    messages: [{\n                        role: 'user',\n                        content: prompt\n                    }]\n                })\n            )\n    )\n```\n\n## Fetch Stream\n\nYou can pass a fetch from an endpoint that returns the stream to proxy a stream.\n\nThis is useful for those endpoints that use AI text generation since you can proxy it directly, eg. [Cloudflare AI](https://developers.cloudflare.com/workers-ai/models/llm/#examples---chat-style-with-system-prompt-preferred).\n\n```typescript\nconst model = '@cf/meta/llama-2-7b-chat-int8'\nconst endpoint = `https://api.cloudflare.com/client/v4/accounts/${process.env.ACCOUNT_ID}/ai/run/${model}`\n\nnew Elysia()\n    .get('/ai', ({ query: { prompt } }) =>\n        fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                authorization: `Bearer ${API_TOKEN}`,\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                messages: [\n                    { role: 'system', content: 'You are a friendly assistant' },\n                    { role: 'user', content: prompt }\n                ]\n            })\n        })\n    )\n```\n\n## Server Sent Event\n\nManual mode is triggered when the parameter is either `callback` or `undefined`, allowing you to control the stream.\n\n### callback-based\nBelow is an example of creating a Server-Sent Event endpoint using a constructor callback\n\n```typescript\nnew Elysia()\n    .get('/source', () =>\n        new Stream((stream) => {\n            const interval = setInterval(() => {\n                stream.send('hello world')\n            }, 500)\n\n            setTimeout(() => {\n                clearInterval(interval)\n                stream.close()\n            }, 3000)\n        })\n    )\n```\n\n### value-based\nBelow is an example of creating a Server-Sent Event endpoint using a value-based\n\n```typescript\nnew Elysia()\n    .get('/source', () => {\n        const stream = new Stream()\n\n        const interval = setInterval(() => {\n            stream.send('hello world')\n        }, 500)\n\n        setTimeout(() => {\n            clearInterval(interval)\n            stream.close()\n        }, 3000)\n\n        return stream\n    })\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I warning in elysiajs?\n\nAssistant: To warning in elysiajs, here's what you do:\nThis plugin is in maintenance mode and will not receive new features. We recommend using the Generator Stream instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\n```bash\nbun add @elysiajs/stream\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { Stream } from '@elysiajs/stream'\n\nnew Elysia()\n    .get('/', () => new Stream(async (stream) => {\n        stream.send('hello')\n\n        await stream.wait(1000)\n        stream.send('world')\n\n        stream.close()\n    }))\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I constructor in elysiajs?\n\nAssistant: To constructor in elysiajs, here's what you do:\nBelow is the constructor parameter accepted by `Stream`:\n\n1. Stream:\n   - Automatic: Automatically stream response from a provided value\n     - Iterable\n     - AsyncIterable\n     - ReadableStream\n     - Response\n   - Manual: Callback of `(stream: this) => unknown` or `undefined`\n2. Options: `StreamOptions`\n   - [event](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#event): A string identifying the type of event described\n   - [retry](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#retry): The reconnection time in milliseconds.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I method in elysiajs?\n\nAssistant: To method in elysiajs, here's what you do:\nBelow is the method provided by `Stream`:\n\n### send\nEnqueue data to stream to send back to the client\n\n### close\nClose the stream\n\n### wait\nReturn a promise that resolves in the provided value in ms\n\n### value\nInner value of the `ReadableStream`.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I pattern in elysiajs?\n\nAssistant: To pattern in elysiajs, here's what you do:\nBelow you can find the common patterns to use the plugin.\n\n- [OpenAI](https://elysiajs.com/plugins/stream#openai)\n- [Fetch Stream](https://elysiajs.com/plugins/stream#fetch-stream)\n- [Server Sent Event](https://elysiajs.com/plugins/stream#server-sent-event).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I openai in elysiajs?\n\nAssistant: To openai in elysiajs, here's what you do:\nAutomatic mode is triggered when the parameter is either `Iterable` or `AsyncIterable` streaming the response back to the client automatically.\n\nBelow is an example of integrating ChatGPT into Elysia.\n\n```typescript\nnew Elysia()\n    .get(\n        '/ai',\n        ({ query: { prompt } }) =>\n            new Stream(\n                openai.chat.completions.create({\n                    model: 'gpt-3.5-turbo',\n                    stream: true,\n                    messages: [{\n                        role: 'user',\n                        content: prompt\n                    }]\n                })\n            )\n    )\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I fetch stream in elysiajs?\n\nAssistant: To fetch stream in elysiajs, here's what you do:\nYou can pass a fetch from an endpoint that returns the stream to proxy a stream.\n\nThis is useful for those endpoints that use AI text generation since you can proxy it directly, eg. [Cloudflare AI](https://developers.cloudflare.com/workers-ai/models/llm/#examples---chat-style-with-system-prompt-preferred).\n\n```typescript\nconst model = '@cf/meta/llama-2-7b-chat-int8'\nconst endpoint = `https://api.cloudflare.com/client/v4/accounts/${process.env.ACCOUNT_ID}/ai/run/${model}`\n\nnew Elysia()\n    .get('/ai', ({ query: { prompt } }) =>\n        fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                authorization: `Bearer ${API_TOKEN}`,\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                messages: [\n                    { role: 'system', content: 'You are a friendly assistant' },\n                    { role: 'user', content: prompt }\n                ]\n            })\n        })\n    )\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I server sent event in elysiajs?\n\nAssistant: To server sent event in elysiajs, here's what you do:\nManual mode is triggered when the parameter is either `callback` or `undefined`, allowing you to control the stream.\n\n### callback-based\nBelow is an example of creating a Server-Sent Event endpoint using a constructor callback\n\n```typescript\nnew Elysia()\n    .get('/source', () =>\n        new Stream((stream) => {\n            const interval = setInterval(() => {\n                stream.send('hello world')\n            }, 500)\n\n            setTimeout(() => {\n                clearInterval(interval)\n                stream.close()\n            }, 3000)\n        })\n    )\n```\n\n### value-based\nBelow is an example of creating a Server-Sent Event endpoint using a value-based\n\n```typescript\nnew Elysia()\n    .get('/source', () => {\n        const stream = new Stream()\n\n        const interval = setInterval(() => {\n            stream.send('hello world')\n        }, 500)\n\n        setTimeout(() => {\n            clearInterval(interval)\n            stream.close()\n        }, 3000)\n\n        return stream\n    })\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Stream Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Usage Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\nimport { Stream } from '@elysiajs/stream'\n\nnew Elysia()\n    .get('/', () => new Stream(async (stream) => {\n        stream.send('hello')\n\n        await stream.wait(1000)\n        stream.send('world')\n\n        stream.close()\n    }))\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of stream plugin.\n\n**OpenAI Integration Example**:\n\n```yaml\n```typescript\nnew Elysia()\n    .get(\n        '/ai',\n        ({ query: { prompt } }) =>\n            new Stream(\n                openai.chat.completions.create({\n                    model: 'gpt-3.5-turbo',\n                    stream: true,\n                    messages: [{\n                        role: 'user',\n                        content: prompt\n                    }]\n                })\n            )\n    )\n```\n```\n\nThis snippet shows you how to openai integration example, which is an important aspect of stream plugin.\n\n**Fetch Stream Example**:\n\n```yaml\n```typescript\nconst model = '@cf/meta/llama-2-7b-chat-int8'\nconst endpoint = `https://api.cloudflare.com/client/v4/accounts/${process.env.ACCOUNT_ID}/ai/run/${model}`\n\nnew Elysia()\n    .get('/ai', ({ query: { prompt } }) =>\n        fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                authorization: `Bearer ${API_TOKEN}`,\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                messages: [\n                    { role: 'system', content: 'You are a friendly assistant' },\n                    { role: 'user', content: prompt }\n                ]\n            })\n        })\n    )\n```\n```\n\nThis snippet shows you how to fetch stream example, which is an important aspect of stream plugin.\n\n**Server-Sent Event Callback Example**:\n\n```yaml\n```typescript\nnew Elysia()\n    .get('/source', () =>\n        new Stream((stream) => {\n            const interval = setInterval(() => {\n                stream.send('hello world')\n            }, 500)\n\n            setTimeout(() => {\n                clearInterval(interval)\n                stream.close()\n            }, 3000)\n        })\n    )\n```\n```\n\nThis snippet shows you how to server-sent event callback example, which is an important aspect of stream plugin.\n\n**Server-Sent Event Value Example**:\n\n```yaml\n```typescript\nnew Elysia()\n    .get('/source', () => {\n        const stream = new Stream()\n\n        const interval = setInterval(() => {\n            stream.send('hello world')\n        }, 500)\n\n        setTimeout(() => {\n            clearInterval(interval)\n            stream.close()\n        }, 3000)\n\n        return stream\n    })\n```\n```\n\nThis snippet shows you how to server-sent event value example, which is an important aspect of stream plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Stream Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThis plugin is in maintenance mode and will not receive new features. Consider using the Generator Stream instead.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/stream", "title": "Stream Plugin", "description": "This plugin adds support for streaming response or sending Server-Sent Event back to the client.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:04:32", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "description": "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\".", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for streaming response and Server-Sent Events, eg. OpenAI integration. Start by installing the plugin with \"bun add @elysiajs/stream\"."], "title": "Stream Plugin - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogTitle": "Stream Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Stream Plugin - ElysiaJS", "scrapeId": "71c49d8e-3d62-40cc-ac4a-e3a80094f2ae", "sourceURL": "https://elysiajs.com/plugins/stream", "url": "https://elysiajs.com/plugins/stream", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Installation is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Installation in elysiajs.\n\n# Eden Installation\n\nInstructions for installing and configuring Eden with Elysia on the frontend.Here's a quick rundown of what this is about:\n\n## Eden Installation\n\nStart by installing Eden on your frontend:\n\nbash\n\n```\nbun add @elysiajs/eden\nbun add -d elysia\n\n# `@types/bun` must be installed even if you aren't using bun in the client\nbun add -d @types/bun\n```\n\nTIP\n\nEden needs Elysia to infer utilities type.\n\nMake sure to install Elysia with the version matching on the server.\n\n## Exporting Elysia Server Type\n\nFirst, export your existing Elysia server type:\n\ntypescript\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\n## Consuming Elysia API on Client Side\n\nThen consume the Elysia API on client side:\n\ntypescript\n\n```typescript\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst client = treaty<App>('localhost:3000')\n\n// response: Hi Elysia\nconst { data: index } = await client.index.get()\n\n// response: 1895\nconst { data: id } = await client.id({ id: 1895 }).get()\n\n// response: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid } = await client.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nclient.\n```\n\n## Gotcha\n\nSometimes Eden may not infer type from Elysia correctly, the following are the most common workaround to fix Eden type inference.\n\n## Type Strict\n\nMake sure to enable strict mode in **tsconfig.json**\n\njson\n\n```\n{\n  \"compilerOptions\": {\n    \"strict\": true\n  }\n}\n```\n\n## Unmatch Elysia Version\n\nEden depends Elysia class to import Elysia instance and infers type correctly.\n\nMake sure that both client and server have a matching Elysia version.\n\nYou can check it with [`npm why`](https://docs.npmjs.com/cli/v10/commands/npm-explain) command:\n\nbash\n\n```\nnpm why elysia\n```\n\nAnd output should contain only one elysia version on top-level:\n\n```\nelysia@1.1.12\nnode_modules/elysia\n  elysia@\"1.1.25\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/html@1.1.0\n  node_modules/@elysiajs/html\n    dev @elysiajs/html@\"1.1.1\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/opentelemetry@1.1.2\n  node_modules/@elysiajs/opentelemetry\n    dev @elysiajs/opentelemetry@\"1.1.7\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/swagger@1.1.0\n  node_modules/@elysiajs/swagger\n    dev @elysiajs/swagger@\"1.1.6\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/eden@1.1.2\n  node_modules/@elysiajs/eden\n    dev @elysiajs/eden@\"1.1.3\" from the root project\n```\n\n## TypeScript Version\n\nElysia uses newer features and syntax of TypeScript to infer types in a the most performant way. Features like Const Generic and Template Literal are heavily used.\n\nMake sure your client has a **minimum TypeScript version if >= 5.0**.\n\n## Method Chaining\n\nTo make Eden works, Elysia must be using **method chaining**.\n\nElysia's type system is complex, methods usually introduce a new type to the instance.\n\nUsing method chaining will help save that new type reference.\n\nFor example:\n\ntypescript\n\n```\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('build', 1)\n    // Store is strictly typed\n    .get('/', ({ store: { build } }) => build)\n    .listen(3000)\n```\n\nUsing this, **state** now returns a new **ElysiaInstance** type, introducing **build** into store and replace the current one.\n\nWithout using method chaining, Elysia doesn't save the new type when introduced, leading to no type inference.\n\ntypescript\n\n```\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n\napp.state('build', 1)\n\napp.get('/', ({ store: { build } }) => build)\nProperty 'build' does not exist on type '{}'.\n\napp.listen(3000)\n```\n\n## Type Definitions\n\nSometimes, if you are using a Bun specific feature like `Bun.file` or similar API, you may need to install Bun type definitions to the client as well.\n\nbash\n\n```\nbun add -d @types/bun\n```\n\n## Path Alias (Monorepo)\n\nIf you are using path alias in your monorepo, make sure that frontend are able to resolve the path as same as backend.\n\nFor example, if you have the following path alias for your backend in **tsconfig.json**:\n\njson\n\n```\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@/*\": [\"./src/*\"]\n\t}\n  }\n}\n```\n\nAnd your backend code is like this:\n\ntypescript\n\n```\nimport { Elysia } from 'elysia'\nimport { a, b } from '@/controllers'\n\nconst app = new Elysia()\n\t.use(a)\n\t.use(b)\n\t.listen(3000)\n\nexport type app = typeof app\n```\n\nYou **must** make sure that your frontend code is able to resolve the same path alias otherwise type inference will be resolved as any.\n\ntypescript\n\n```\nimport { treaty } from '@elysiajs/eden'\nimport type { app } from '@/index'\n\nconst client = treaty<app>('localhost:3000')\n\n// This should be able to resolve the same module both frontend and backend, and not `any`\nimport { a, b } from '@/controllers'\n```\n\nTo fix this, you must make sure that path alias is resolved to the same file in both frontend and backend.\n\nSo you must change the path alias in **tsconfig.json** to:\n\njson\n\n```\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@/*\": [\"../apps/backend/src/*\"]\n\t}\n  }\n}\n```\n\nIf configured correctly, you should be able to resolve the same module in both frontend and backend.\n\ntypescript\n\n```typescript\n// This should be able to resolve the same module both frontend and backend, and not `any`\nimport { a, b } from '@/controllers'\n```\n\n## Scope\n\nWe recommended to add a **scope** prefix for each modules in your monorepo to avoid any confusion and conflict that may happen.\n\njson\n\n```\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@frontend/*\": [\"./apps/frontend/src/*\"],\n\t  \"@backend/*\": [\"./apps/backend/src/*\"]\n\t}\n  }\n}\n```\n\nThen you can import the module like this:\n\ntypescript\n\n```typescript\n// Should work in both frontend and backend and not return `any`\nimport { a, b } from '@backend/controllers'\n```\n\nWe recommended creating a **single tsconfig.json** that define a `baseUrl` as the root of your repo, provide a path according to the module location, and create a **tsconfig.json** for each module that inherits the root **tsconfig.json** which has the path alias.\n\nYou may find a working example of in this [path alias example repo](https://github.com/SaltyAom/elysia-monorepo-path-alias).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "overview", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden installation in elysiajs?\n\nAssistant: To eden installation in elysiajs, here's what you do:\nStart by installing Eden on your frontend:\n\nbash\n\n```\nbun add @elysiajs/eden\nbun add -d elysia\n\n# `@types/bun` must be installed even if you aren't using bun in the client\nbun add -d @types/bun\n```\n\nTIP\n\nEden needs Elysia to infer utilities type.\n\nMake sure to install Elysia with the version matching on the server..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I exporting elysia server type in elysiajs?\n\nAssistant: To exporting elysia server type in elysiajs, here's what you do:\nFirst, export your existing Elysia server type:\n\ntypescript\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I consuming elysia api on client side in elysiajs?\n\nAssistant: To consuming elysia api on client side in elysiajs, here's what you do:\nThen consume the Elysia API on client side:\n\ntypescript\n\n```typescript\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst client = treaty<App>('localhost:3000')\n\n// response: Hi Elysia\nconst { data: index } = await client.index.get()\n\n// response: 1895\nconst { data: id } = await client.id({ id: 1895 }).get()\n\n// response: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid } = await client.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nclient.\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I gotcha in elysiajs?\n\nAssistant: To gotcha in elysiajs, here's what you do:\nSometimes Eden may not infer type from Elysia correctly, the following are the most common workaround to fix Eden type inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type strict in elysiajs?\n\nAssistant: To type strict in elysiajs, here's what you do:\nMake sure to enable strict mode in **tsconfig.json**\n\njson\n\n```\n{\n  \"compilerOptions\": {\n    \"strict\": true\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I unmatch elysia version in elysiajs?\n\nAssistant: To unmatch elysia version in elysiajs, here's what you do:\nEden depends Elysia class to import Elysia instance and infers type correctly.\n\nMake sure that both client and server have a matching Elysia version.\n\nYou can check it with [`npm why`](https://docs.npmjs.com/cli/v10/commands/npm-explain) command:\n\nbash\n\n```\nnpm why elysia\n```\n\nAnd output should contain only one elysia version on top-level:\n\n```\nelysia@1.1.12\nnode_modules/elysia\n  elysia@\"1.1.25\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/html@1.1.0\n  node_modules/@elysiajs/html\n    dev @elysiajs/html@\"1.1.1\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/opentelemetry@1.1.2\n  node_modules/@elysiajs/opentelemetry\n    dev @elysiajs/opentelemetry@\"1.1.7\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/swagger@1.1.0\n  node_modules/@elysiajs/swagger\n    dev @elysiajs/swagger@\"1.1.6\" from the root project\n  peer elysia@\">= 1.1.0\" from @elysiajs/eden@1.1.2\n  node_modules/@elysiajs/eden\n    dev @elysiajs/eden@\"1.1.3\" from the root project\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typescript version in elysiajs?\n\nAssistant: To typescript version in elysiajs, here's what you do:\nElysia uses newer features and syntax of TypeScript to infer types in a the most performant way. Features like Const Generic and Template Literal are heavily used.\n\nMake sure your client has a **minimum TypeScript version if >= 5.0**..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I method chaining in elysiajs?\n\nAssistant: To method chaining in elysiajs, here's what you do:\nTo make Eden works, Elysia must be using **method chaining**.\n\nElysia's type system is complex, methods usually introduce a new type to the instance.\n\nUsing method chaining will help save that new type reference.\n\nFor example:\n\ntypescript\n\n```\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('build', 1)\n    // Store is strictly typed\n    .get('/', ({ store: { build } }) => build)\n    .listen(3000)\n```\n\nUsing this, **state** now returns a new **ElysiaInstance** type, introducing **build** into store and replace the current one.\n\nWithout using method chaining, Elysia doesn't save the new type when introduced, leading to no type inference.\n\ntypescript\n\n```\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n\napp.state('build', 1)\n\napp.get('/', ({ store: { build } }) => build)\nProperty 'build' does not exist on type '{}'.\n\napp.listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type definitions in elysiajs?\n\nAssistant: To type definitions in elysiajs, here's what you do:\nSometimes, if you are using a Bun specific feature like `Bun.file` or similar API, you may need to install Bun type definitions to the client as well.\n\nbash\n\n```\nbun add -d @types/bun\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I path alias (monorepo) in elysiajs?\n\nAssistant: To path alias (monorepo) in elysiajs, here's what you do:\nIf you are using path alias in your monorepo, make sure that frontend are able to resolve the path as same as backend.\n\nFor example, if you have the following path alias for your backend in **tsconfig.json**:\n\njson\n\n```\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@/*\": [\"./src/*\"]\n\t}\n  }\n}\n```\n\nAnd your backend code is like this:\n\ntypescript\n\n```\nimport { Elysia } from 'elysia'\nimport { a, b } from '@/controllers'\n\nconst app = new Elysia()\n\t.use(a)\n\t.use(b)\n\t.listen(3000)\n\nexport type app = typeof app\n```\n\nYou **must** make sure that your frontend code is able to resolve the same path alias otherwise type inference will be resolved as any.\n\ntypescript\n\n```\nimport { treaty } from '@elysiajs/eden'\nimport type { app } from '@/index'\n\nconst client = treaty<app>('localhost:3000')\n\n// This should be able to resolve the same module both frontend and backend, and not `any`\nimport { a, b } from '@/controllers'\n```\n\nTo fix this, you must make sure that path alias is resolved to the same file in both frontend and backend.\n\nSo you must change the path alias in **tsconfig.json** to:\n\njson\n\n```\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@/*\": [\"../apps/backend/src/*\"]\n\t}\n  }\n}\n```\n\nIf configured correctly, you should be able to resolve the same module in both frontend and backend.\n\ntypescript\n\n```typescript\n// This should be able to resolve the same module both frontend and backend, and not `any`\nimport { a, b } from '@/controllers'\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I scope in elysiajs?\n\nAssistant: To scope in elysiajs, here's what you do:\nWe recommended to add a **scope** prefix for each modules in your monorepo to avoid any confusion and conflict that may happen.\n\njson\n\n```\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@frontend/*\": [\"./apps/frontend/src/*\"],\n\t  \"@backend/*\": [\"./apps/backend/src/*\"]\n\t}\n  }\n}\n```\n\nThen you can import the module like this:\n\ntypescript\n\n```typescript\n// Should work in both frontend and backend and not return `any`\nimport { a, b } from '@backend/controllers'\n```\n\nWe recommended creating a **single tsconfig.json** that define a `baseUrl` as the root of your repo, provide a path according to the module location, and create a **tsconfig.json** for each module that inherits the root **tsconfig.json** which has the path alias.\n\nYou may find a working example of in this [path alias example repo](https://github.com/SaltyAom/elysia-monorepo-path-alias)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Installation in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Eden Installation Command**:\n\n```yaml\nbun add @elysiajs/eden\nbun add -d elysia\n\n# `@types/bun` must be installed even if you aren't using bun in the client\nbun add -d @types/bun\n```\n\nThis snippet shows you how to eden installation command, which is an important aspect of eden installation.\n\n**Exporting Elysia Server Type**:\n\n```yaml\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThis snippet shows you how to exporting elysia server type, which is an important aspect of eden installation.\n\n**Consuming Elysia API on Client Side**:\n\n```yaml\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst client = treaty<App>('localhost:3000')\n\n// response: Hi Elysia\nconst { data: index } = await client.index.get()\n\n// response: 1895\nconst { data: id } = await client.id({ id: 1895 }).get()\n\n// response: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid } = await client.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nclient.\n```\n\nThis snippet shows you how to consuming elysia api on client side, which is an important aspect of eden installation.\n\n**Type Strict Configuration**:\n\n```yaml\n{\n  \"compilerOptions\": {\n    \"strict\": true\n  }\n}\n```\n\nThis snippet shows you how to type strict configuration, which is an important aspect of eden installation.\n\n**Unmatch Elysia Version Check**:\n\n```yaml\nnpm why elysia\n```\n\nThis snippet shows you how to unmatch elysia version check, which is an important aspect of eden installation.\n\n**Type Definitions Installation**:\n\n```yaml\nbun add -d @types/bun\n```\n\nThis snippet shows you how to type definitions installation, which is an important aspect of eden installation.\n\n**Path Alias Configuration**:\n\n```yaml\n{\n  \"compilerOptions\": {\n   \"baseUrl\": \".\",\n\t\"paths\": {\n\t  \"@/*\": [\"../apps/backend/src/*\"]\n\t}\n  }\n}\n```\n\nThis snippet shows you how to path alias configuration, which is an important aspect of eden installation.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "code_examples", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Installation in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEden needs Elysia to infer utilities type. Make sure to install Elysia with the version matching on the server.\n\nEnable strict mode in tsconfig.json to ensure type safety.\n\nEnsure both client and server have a matching Elysia version to avoid type inference issues.\n\nUse a minimum TypeScript version of 5.0 to leverage newer features for type inference.\n\nUtilize method chaining in Elysia to maintain type references and improve type inference.\n\nInstall Bun type definitions if using Bun specific features in the client.\n\nEnsure path aliases are resolved correctly in both frontend and backend to avoid type inference issues.\n\nAdd a scope prefix for each module in your monorepo to avoid conflicts.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/installation", "title": "Eden Installation", "description": "Instructions for installing and configuring Eden with Elysia on the frontend.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:05:08", "type": "best_practices", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch."], "title": "Eden Installation - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Eden Installation - ElysiaJS", "og:image:height": "1080", "ogTitle": "Eden Installation - ElysiaJS", "description": "Start by installing Eden on your frontend with \"bun add elysia @elysiajs/eden\", then expose your Elysia server type and then start using Eden Treaty or Eden Fetch.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "scrapeId": "f9848942-30c3-4649-9327-f7065859b574", "sourceURL": "https://elysiajs.com/eden/installation", "url": "https://elysiajs.com/eden/installation", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia Plugin Documentation is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia Plugin Documentation in elysiajs.\n\n# Elysia Plugin Documentation\n\nThis documentation covers the usage and implementation of plugins in Elysia, a web server framework.Here's a quick rundown of what this is about:\n\n## Plugin\n\nPlugin is a pattern that decouples functionality into smaller parts. Creating reusable components for our web server.\n\nDefining a plugin is to define a separate instance.\n\nWe can use the plugin by passing an instance to **Elysia.use**.\n\nlocalhost//plugin\n\nGET\n\nhi\n\nThe plugin will inherit all properties of the plugin instance, including **state**, **decorate**, **derive**, **route**, **lifecycle**, etc.\n\nElysia will also handle the type inference automatically as well, so you can imagine as if you call all of the other instances on the main one.\n\nTIP\n\nNotice that the plugin doesn't contain **.listen**, because **.listen** will allocate a port for the usage, and we only want the main instance to allocate the port.\n\n## Plugin\n\nEvery Elysia instance can be a plugin.\n\nWe can decouple our logic into a new separate Elysia instance and use it as a plugin.\n\nFirst, we define an instance in a difference file:\n\n```typescript\n// plugin.ts\nimport { Elysia } from 'elysia'\n\nexport const plugin = new Elysia()\n    .get('/plugin', () => 'hi')\n```\n\nAnd then we import the instance into the main file:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { plugin } from './plugin'\n\nconst app = new Elysia()\n    .use(plugin)\n    .listen(3000)\n```\n\n## Config\n\nTo make the plugin more useful, allowing customization via config is recommended.\n\nYou can create a function that accepts parameters that may change the behavior of the plugin to make it more reusable.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst version = (version = 1) => new Elysia()\n        .get('/version', version)\n\nconst app = new Elysia()\n    .use(version(1))\n    .listen(3000)\n```\n\n## Functional callback\n\nIt's recommended to define a new plugin instance instead of using a function callback.\n\nFunctional callback allows us to access the existing property of the main instance. For example, checking if specific routes or stores existed.\n\nTo define a functional callback, create a function that accepts Elysia as a parameter.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst plugin = (app: Elysia) =>\napp\n    .state('counter', 0)\n    .get('/plugin', () => 'Hi')\n\nconst app = new Elysia()\n    .use(plugin)\n    .get('/counter', ({ store: { counter } }) =>\ncounter)\n    .listen(3000)\n```\n\nlocalhost/plugin/counter\n\nGET\n\nHi\n\nOnce passed to `Elysia.use`, functional callback behaves as a normal plugin except the property is assigned directly to.\n\n## Plugin Deduplication\n\nBy default, Elysia will register any plugin and handle type definitions.\n\nSome plugins may be used multiple times to provide type inference, resulting in duplication of setting initial values or routes.\n\nElysia avoids this by differentiating the instance by using **name** and **optional seeds** to help Elysia identify instance duplication:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst plugin = <T extends string>(config: { prefix: T }) =>\n    new Elysia({\n        name: 'my-plugin',\n        seed: config,\n    })\n    .get(`${config.prefix}/hi`, () => 'Hi')\n\nconst app = new Elysia()\n    .use(\n        plugin({\n            prefix: '/v2'\n        })\n    )\n    .listen(3000)\n```\n\nlocalhost/v2/hi\n\nGET\n\nHi\n\nElysia will use **name** and **seed** to create a checksum to identify if the instance has been registered previously or not, if so, Elysia will skip the registration of the plugin.\n\n## Service Locator\n\nWhen you apply multiple state and decorators plugin to an instance, the instance will gain type safety.\n\nHowever, you may notice that when you are trying to use the decorated value in another instance without decorator, the type is missing.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst child = new Elysia()\n    // ❌ 'a' is missing\n    .get('/', ({ a }) =>\na)\n\nconst main = new Elysia()\n    .decorate('a', 'a')\n    .use(child)\n```\n\nThis is a TypeScript limitation; Elysia can only refer to the current instance.\n\nElysia introduces the **Service Locator** pattern to counteract this.\n\n## Guard\n\nGuard allows us to apply hook and schema into multiple routes all at once.\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .guard(\n        {\nbody:\n    t.Object({\nusername:\n    t.String(),\n\npassword:\n    t.String()\n            })\n        },\n        (app) =>\n\napp\n                .post('/sign-up', ({ body }) =>\nsignUp(\nbody))\n                .post('/sign-in', ({ body }) =>\nsignIn(\nbody), {\nbeforeHandle:\n    isUserExists\n                })\n    )\n    .get('/', 'hi')\n    .listen(3000)\n```\n\nThis code applies validation for `body` to both '/sign-in' and '/sign-up' instead of inlining the schema one by one but applies not to '/'.\n\n## Grouped Guard\n\nWe can use a group with prefixes by providing 3 parameters to the group.\n\n1. Prefix - Route prefix\n2. Guard - Schema\n3. Scope - Elysia app callback\n\nWith the same API as guard apply to the 2nd parameter, instead of nesting group and guard together.\n\n## Scope\n\nBy default, hook and schema will apply to **current instance only**.\n\nElysia has an encapsulation scope for to prevent unintentional side effects.\n\n## Scope level\n\nElysia has 3 levels of scope as the following: Scope type are as the following:\n\n- **local** (default) - apply to only current instance and descendant only\n- **scoped** - apply to parent, current instance and descendants\n- **global** - apply to all instance that apply the plugin (all parents, current, and descendants)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "overview", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I plugin in elysiajs?\n\nAssistant: To plugin in elysiajs, here's what you do:\nPlugin is a pattern that decouples functionality into smaller parts. Creating reusable components for our web server.\n\nDefining a plugin is to define a separate instance.\n\nWe can use the plugin by passing an instance to **Elysia.use**.\n\nlocalhost//plugin\n\nGET\n\nhi\n\nThe plugin will inherit all properties of the plugin instance, including **state**, **decorate**, **derive**, **route**, **lifecycle**, etc.\n\nElysia will also handle the type inference automatically as well, so you can imagine as if you call all of the other instances on the main one.\n\nTIP\n\nNotice that the plugin doesn't contain **.listen**, because **.listen** will allocate a port for the usage, and we only want the main instance to allocate the port..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I plugin in elysiajs?\n\nAssistant: To plugin in elysiajs, here's what you do:\nEvery Elysia instance can be a plugin.\n\nWe can decouple our logic into a new separate Elysia instance and use it as a plugin.\n\nFirst, we define an instance in a difference file:\n\n```typescript\n// plugin.ts\nimport { Elysia } from 'elysia'\n\nexport const plugin = new Elysia()\n    .get('/plugin', () => 'hi')\n```\n\nAnd then we import the instance into the main file:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { plugin } from './plugin'\n\nconst app = new Elysia()\n    .use(plugin)\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nTo make the plugin more useful, allowing customization via config is recommended.\n\nYou can create a function that accepts parameters that may change the behavior of the plugin to make it more reusable.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst version = (version = 1) => new Elysia()\n        .get('/version', version)\n\nconst app = new Elysia()\n    .use(version(1))\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I functional callback in elysiajs?\n\nAssistant: To functional callback in elysiajs, here's what you do:\nIt's recommended to define a new plugin instance instead of using a function callback.\n\nFunctional callback allows us to access the existing property of the main instance. For example, checking if specific routes or stores existed.\n\nTo define a functional callback, create a function that accepts Elysia as a parameter.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst plugin = (app: Elysia) =>\napp\n    .state('counter', 0)\n    .get('/plugin', () => 'Hi')\n\nconst app = new Elysia()\n    .use(plugin)\n    .get('/counter', ({ store: { counter } }) =>\ncounter)\n    .listen(3000)\n```\n\nlocalhost/plugin/counter\n\nGET\n\nHi\n\nOnce passed to `Elysia.use`, functional callback behaves as a normal plugin except the property is assigned directly to..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I plugin deduplication in elysiajs?\n\nAssistant: To plugin deduplication in elysiajs, here's what you do:\nBy default, Elysia will register any plugin and handle type definitions.\n\nSome plugins may be used multiple times to provide type inference, resulting in duplication of setting initial values or routes.\n\nElysia avoids this by differentiating the instance by using **name** and **optional seeds** to help Elysia identify instance duplication:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst plugin = <T extends string>(config: { prefix: T }) =>\n    new Elysia({\n        name: 'my-plugin',\n        seed: config,\n    })\n    .get(`${config.prefix}/hi`, () => 'Hi')\n\nconst app = new Elysia()\n    .use(\n        plugin({\n            prefix: '/v2'\n        })\n    )\n    .listen(3000)\n```\n\nlocalhost/v2/hi\n\nGET\n\nHi\n\nElysia will use **name** and **seed** to create a checksum to identify if the instance has been registered previously or not, if so, Elysia will skip the registration of the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I service locator in elysiajs?\n\nAssistant: To service locator in elysiajs, here's what you do:\nWhen you apply multiple state and decorators plugin to an instance, the instance will gain type safety.\n\nHowever, you may notice that when you are trying to use the decorated value in another instance without decorator, the type is missing.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst child = new Elysia()\n    // ❌ 'a' is missing\n    .get('/', ({ a }) =>\na)\n\nconst main = new Elysia()\n    .decorate('a', 'a')\n    .use(child)\n```\n\nThis is a TypeScript limitation; Elysia can only refer to the current instance.\n\nElysia introduces the **Service Locator** pattern to counteract this..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I guard in elysiajs?\n\nAssistant: To guard in elysiajs, here's what you do:\nGuard allows us to apply hook and schema into multiple routes all at once.\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .guard(\n        {\nbody:\n    t.Object({\nusername:\n    t.String(),\n\npassword:\n    t.String()\n            })\n        },\n        (app) =>\n\napp\n                .post('/sign-up', ({ body }) =>\nsignUp(\nbody))\n                .post('/sign-in', ({ body }) =>\nsignIn(\nbody), {\nbeforeHandle:\n    isUserExists\n                })\n    )\n    .get('/', 'hi')\n    .listen(3000)\n```\n\nThis code applies validation for `body` to both '/sign-in' and '/sign-up' instead of inlining the schema one by one but applies not to '/'..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I grouped guard in elysiajs?\n\nAssistant: To grouped guard in elysiajs, here's what you do:\nWe can use a group with prefixes by providing 3 parameters to the group.\n\n1. Prefix - Route prefix\n2. Guard - Schema\n3. Scope - Elysia app callback\n\nWith the same API as guard apply to the 2nd parameter, instead of nesting group and guard together..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I scope in elysiajs?\n\nAssistant: To scope in elysiajs, here's what you do:\nBy default, hook and schema will apply to **current instance only**.\n\nElysia has an encapsulation scope for to prevent unintentional side effects..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I scope level in elysiajs?\n\nAssistant: To scope level in elysiajs, here's what you do:\nElysia has 3 levels of scope as the following: Scope type are as the following:\n\n- **local** (default) - apply to only current instance and descendant only\n- **scoped** - apply to parent, current instance and descendants\n- **global** - apply to all instance that apply the plugin (all parents, current, and descendants).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "section_detail", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia Plugin Documentation in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Plugin Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst plugin = new Elysia()\n    .decorate('plugin', 'hi')\n    .get('/plugin', ({ plugin }) => plugin)\n\nconst app = new Elysia()\n    .use(plugin)\n    .get('/', ({ plugin }) => plugin)\n    .listen(3000)\n```\n\nThis snippet shows you how to basic plugin example, which is an important aspect of elysia plugin documentation.\n\n**Functional Callback Example**:\n\n```yaml\nconst plugin = (app: Elysia) =>\napp\n    .state('counter', 0)\n    .get('/plugin', () => 'Hi')\n\nconst app = new Elysia()\n    .use(plugin)\n    .get('/counter', ({ store: { counter } }) =>\ncounter)\n    .listen(3000)\n```\n\nThis snippet shows you how to functional callback example, which is an important aspect of elysia plugin documentation.\n\n**Plugin Deduplication Example**:\n\n```yaml\nconst plugin = <T extends string>(config: { prefix: T }) =>\n    new Elysia({\n        name: 'my-plugin',\n        seed: config,\n    })\n    .get(`${config.prefix}/hi`, () => 'Hi')\n\nconst app = new Elysia()\n    .use(\n        plugin({\n            prefix: '/v2'\n        })\n    )\n    .listen(3000)\n```\n\nThis snippet shows you how to plugin deduplication example, which is an important aspect of elysia plugin documentation.\n\n", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "code_examples", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia Plugin Documentation in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nNotice that the plugin doesn't contain **.listen**, because **.listen** will allocate a port for the usage, and we only want the main instance to allocate the port.\n\nYou shall not worry about the performance difference between a functional callback and creating an instance.\n\nSeed could be anything, varying from a string to a complex object or class.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/essential/plugin", "title": "Elysia Plugin Documentation", "description": "This documentation covers the usage and implementation of plugins in Elysia, a web server framework.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:05:39", "type": "best_practices", "page_metadata": {"title": "Plugin - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "language": "en-US", "og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Plugin - ElysiaJS", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Plugin - ElysiaJS", "ogDescription": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "og:description": "A plugin is a way to decouple logic into smaller parts, defining reusable components across the server. Plugin can register by using `use`, registering a plugin will combine types between plugin and current instance, and the scope of hooks, and schema get merged too.", "generator": "VitePress v1.6.3", "scrapeId": "8b1ecee0-13af-4070-939f-aa3e89ed5ccc", "sourceURL": "https://elysiajs.com/essential/plugin", "url": "https://elysiajs.com/essential/plugin", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Fetch is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Fetch in elysiajs.\n\n# Eden Fetch\n\nA fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.Here's a quick rundown of what this is about:\n\n## Introduction\n\nWith Eden Fetch can interact with Elysia server in a type-safe manner using Fetch API.\n\n## Code Example\n\nFirst export your existing Elysia server type:\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/hi', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThen import the server type, and consume the Elysia API on client:\n\n```typescript\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\n// response type: 'Hi Elysia'\nconst pong = await fetch('/hi', {})\n\n// response type: 1895\nconst id = await fetch('/id/:id', {\n    params: {\n        id: '1895'\n    }\n})\n\n// response type: { id: 1895, name: 'Skadi' }\nconst nendoroid = await fetch('/mirror', {\n    method: 'POST',\n    body: {\n        id: 1895,\n        name: 'Skadi'\n    }\n})\n```\n\n\n## Error Handling\n\nYou can handle errors the same way as Eden Treaty:\n\n```typescript\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = await fetch('/mirror', {\n    method: 'POST',\n    body: {\n        id: 1895,\n        name: 'Skadi'\n    }\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            throw error.value\n            break\n\n        case 500:\n        case 502:\n            throw error.value\n            break\n\n        default:\n            throw error.value\n            break\n    }\n}\n\nconst { id, name } = nendoroid\n```\n\n\n## When should I use Eden Fetch over Eden Treaty\n\nUnlike Elysia < 1.0, Eden Fetch is not faster than Eden Treaty anymore.\n\nThe preference is base on you and your team agreement, however we recommend to use Eden Treaty instead.\n\nFor Elysia < 1.0:\n\nUsing Eden Treaty requires a lot of down-level iteration to map all possible types in a single go, while in contrast, Eden Fetch can be lazily executed until you pick a route.\n\nWith complex types and a lot of server routes, using Eden Treaty on a low-end development device can lead to slow type inference and auto-completion.\n\nBut as Elysia has tweaked and optimized a lot of types and inference, Eden Treaty can perform very well in the considerable amount of routes.\n\nIf your single process contains more than 500 routes, and you need to consume all of the routes in a single frontend codebase, then you might want to use Eden Fetch as it has a significantly better TypeScript performance than Eden Treaty.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "overview", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introduction in elysiajs?\n\nAssistant: To introduction in elysiajs, here's what you do:\nWith Eden Fetch can interact with Elysia server in a type-safe manner using Fetch API..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "section_detail", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I code example in elysiajs?\n\nAssistant: To code example in elysiajs, here's what you do:\nFirst export your existing Elysia server type:\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/hi', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThen import the server type, and consume the Elysia API on client:\n\n```typescript\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\n// response type: 'Hi Elysia'\nconst pong = await fetch('/hi', {})\n\n// response type: 1895\nconst id = await fetch('/id/:id', {\n    params: {\n        id: '1895'\n    }\n})\n\n// response type: { id: 1895, name: 'Skadi' }\nconst nendoroid = await fetch('/mirror', {\n    method: 'POST',\n    body: {\n        id: 1895,\n        name: 'Skadi'\n    }\n})\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "section_detail", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I error handling in elysiajs?\n\nAssistant: To error handling in elysiajs, here's what you do:\nYou can handle errors the same way as Eden Treaty:\n\n```typescript\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = await fetch('/mirror', {\n    method: 'POST',\n    body: {\n        id: 1895,\n        name: 'Skadi'\n    }\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            throw error.value\n            break\n\n        case 500:\n        case 502:\n            throw error.value\n            break\n\n        default:\n            throw error.value\n            break\n    }\n}\n\nconst { id, name } = nendoroid\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "section_detail", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I when should i use eden fetch over eden treaty in elysiajs?\n\nAssistant: To when should i use eden fetch over eden treaty in elysiajs, here's what you do:\nUnlike Elysia < 1.0, Eden Fetch is not faster than Eden Treaty anymore.\n\nThe preference is base on you and your team agreement, however we recommend to use Eden Treaty instead.\n\nFor Elysia < 1.0:\n\nUsing Eden Treaty requires a lot of down-level iteration to map all possible types in a single go, while in contrast, Eden Fetch can be lazily executed until you pick a route.\n\nWith complex types and a lot of server routes, using Eden Treaty on a low-end development device can lead to slow type inference and auto-completion.\n\nBut as Elysia has tweaked and optimized a lot of types and inference, Eden Treaty can perform very well in the considerable amount of routes.\n\nIf your single process contains more than 500 routes, and you need to consume all of the routes in a single frontend codebase, then you might want to use Eden Fetch as it has a significantly better TypeScript performance than Eden Treaty..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "section_detail", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Fetch in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Exporting Elysia Server Type**:\n\n```yaml\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/hi', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThis snippet shows you how to exporting elysia server type, which is an important aspect of eden fetch.\n\n**Consuming Elysia API on Client**:\n\n```yaml\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\n// response type: 'Hi Elysia'\nconst pong = await fetch('/hi', {})\n\n// response type: 1895\nconst id = await fetch('/id/:id', {\n    params: {\n        id: '1895'\n    }\n})\n\n// response type: { id: 1895, name: 'Skadi' }\nconst nendoroid = await fetch('/mirror', {\n    method: 'POST',\n    body: {\n        id: 1895,\n        name: 'Skadi'\n    }\n})\n```\n\nThis snippet shows you how to consuming elysia api on client, which is an important aspect of eden fetch.\n\n**Error Handling Example**:\n\n```yaml\nimport { edenFetch } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst fetch = edenFetch<App>('http://localhost:3000')\n\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = await fetch('/mirror', {\n    method: 'POST',\n    body: {\n        id: 1895,\n        name: 'Skadi'\n    }\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            throw error.value\n            break\n\n        case 500:\n        case 502:\n            throw error.value\n            break\n\n        default:\n            throw error.value\n            break\n    }\n}\n\nconst { id, name } = nendoroid\n```\n\nThis snippet shows you how to error handling example, which is an important aspect of eden fetch.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "code_examples", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Fetch in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThe preference between Eden Fetch and Eden Treaty should be based on team agreement, but Eden Treaty is generally recommended.\n\nFor projects with more than 500 routes, consider using Eden Fetch for better TypeScript performance.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/fetch", "title": "Eden Fetch", "description": "A fetch-like alternative to Eden Treaty that allows interaction with Elysia server in a type-safe manner using Fetch API.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:06:00", "type": "best_practices", "page_metadata": {"title": "Eden Fetch - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation."], "og:title": "Eden Fetch - ElysiaJS", "ogTitle": "Eden Fetch - ElysiaJS", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A fetch-like alternative to Eden Treaty with faster type inference. With Eden Fetch, you can make requests to an Elysia server with end-to-end type-safety without the need of code generation.", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "scrapeId": "838ada1b-1d68-41a7-a93c-c4411d4b5240", "sourceURL": "https://elysiajs.com/eden/fetch", "url": "https://elysiajs.com/eden/fetch", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Cron Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Cron Plugin in elysiajs.\n\n# Cron Plugin\n\nThis plugin adds support for running cronjob in the Elysia server.Here's a quick rundown of what this is about:\n\n## cron\n\nCreate a cronjob for the Elysia server.\n\ntype:\n```\ncron(config: CronConfig, callback: (Instance['store']) => void): this\n```\n\n`CronConfig` accepts the parameters specified below:\n\n### name\n\nJob name to register to `store`.\n\nThis will register the cron instance to `store` with a specified name, which can be used to reference in later processes eg. stop the job.\n\n### pattern\n\nTime to run the job as specified by [cron syntax](https://en.wikipedia.org/wiki/Cron) specified as below:\n\n```\n┌────────────── second (optional)\n│ ┌──────────── minute\n│ │ ┌────────── hour\n│ │ │ ┌──────── day of the month\n│ │ │ │ ┌────── month\n│ │ │ │ │ ┌──── day of week\n│ │ │ │ │ │\n* * * * * *\n```\n\nThis can be generated by tools like [Crontab Guru](https://crontab.guru/)\n\n* * *\n\nThis plugin extends the cron method to Elysia using [cronner](https://github.com/hexagon/croner).\n\nBelow are the configs accepted by cronner.\n\n### timezone\n\nTime zone in Europe/Stockholm format\n\n### startAt\n\nSchedule start time for the job\n\n### stopAt\n\nSchedule stop time for the job\n\n### maxRuns\n\nMaximum number of executions\n\n### catch\n\nContinue execution even if an unhandled error is thrown by a triggered function.\n\n### interval\n\nThe minimum interval between executions, in seconds.\n\n## Pattern\n\nBelow you can find the common patterns to use the plugin.\n\n## Stop cronjob\n\nYou can stop cronjob manually by accessing the cronjob name registered to `store`.\n\ntypescript\n```\nimport { Elysia } from 'elysia'\nimport { cron } from '@elysiajs/cron'\n\nconst app = new Elysia()\n\t.use(\n\t\tcron({\n\t\t\tname: 'heartbeat',\n\t\t\tpattern: '*/1 * * * * *',\n\t\t\trun() {\n\t\t\t\tconsole.log('Heartbeat')\n\t\t\t}\n\t\t})\n\t)\n\t.get(\n\t\t'/stop',\n\t\t({\n\t\t\tstore: {\n\t\t\t\tcron: { heartbeat }\n\t\t\t}\n\t\t}) => {\n\t\t\theartbeat.stop()\n\n\t\t\treturn 'Stop heartbeat'\n\t\t}\n\t)\n\t.listen(3000)\n```\n\n## Predefined patterns\n\nYou can use predefined patterns from `@elysiajs/cron/schedule`\n\ntypescript\n```\nimport { Elysia } from 'elysia'\nimport { cron, Patterns } from '@elysiajs/cron'\n\nconst app = new Elysia()\n\t.use(\n\t\tcron({\n\t\t\tname: 'heartbeat',\n\t\t\tpattern: Patterns.everySecond(),\n\t\t\trun() {\n\t\t\t\tconsole.log('Heartbeat')\n\t\t\t}\n\t\t})\n\t)\n\t.get(\n\t\t'/stop',\n\t\t({\n\t\t\tstore: {\n\t\t\t\tcron: { heartbeat }\n\t\t\t}\n\t\t}) => {\n\t\t\theartbeat.stop()\n\n\t\t\treturn 'Stop heartbeat'\n\t\t}\n\t)\n\t.listen(3000)\n```\n\n## Functions\n\n| Function | Description |\n| --- | --- |\n| `.everySeconds(2)` | Run the task every 2 seconds |\n| `.everyMinutes(5)` | Run the task every 5 minutes |\n| `.everyHours(3)` | Run the task every 3 hours |\n| `.everyHoursAt(3, 15)` | Run the task every 3 hours at 15 minutes |\n| `.everyDayAt('04:19')` | Run the task every day at 04:19 |\n| `.everyWeekOn(Patterns.MONDAY, '19:30')` | Run the task every Monday at 19:30 |\n| `.everyWeekdayAt('17:00')` | Run the task every day from Monday to Friday at 17:00 |\n| `.everyWeekendAt('11:00')` | Run the task on Saturday and Sunday at 11:00 |\n\n## Function aliases to constants\n\n| Function | Constant |\n| --- | --- |\n| `.everySecond()` | EVERY_SECOND |\n| `.everyMinute()` | EVERY_MINUTE |\n| `.hourly()` | EVERY_HOUR |\n| `.daily()` | EVERY_DAY_AT_MIDNIGHT |\n| `.everyWeekday()` | EVERY_WEEKDAY |\n| `.everyWeekend()` | EVERY_WEEKEND |\n| `.weekly()` | EVERY_WEEK |\n| `.monthly()` | EVERY_1ST_DAY_OF_MONTH_AT_MIDNIGHT |\n| `.everyQuarter()` | EVERY_QUARTER |\n| `.yearly()` | EVERY_YEAR |\n\n## Constants\n\n| Constant | Pattern |\n| --- | --- |\n| `.EVERY_SECOND` | `* * * * * *` |\n| `.EVERY_5_SECONDS` | `*/5 * * * * *` |\n| `.EVERY_10_SECONDS` | `*/10 * * * * *` |\n| `.EVERY_30_SECONDS` | `*/30 * * * * *` |\n| `.EVERY_MINUTE` | `*/1 * * * *` |\n| `.EVERY_5_MINUTES` | `0 */5 * * * *` |\n| `.EVERY_10_MINUTES` | `0 */10 * * * *` |\n| `.EVERY_30_MINUTES` | `0 */30 * * * *` |\n| `.EVERY_HOUR` | `0 0-23/1 * * *` |\n| `.EVERY_2_HOURS` | `0 0-23/2 * * *` |\n| `.EVERY_3_HOURS` | `0 0-23/3 * * *` |\n| `.EVERY_4_HOURS` | `0 0-23/4 * * *` |\n| `.EVERY_5_HOURS` | `0 0-23/5 * * *` |\n| `.EVERY_6_HOURS` | `0 0-23/6 * * *` |\n| `.EVERY_7_HOURS` | `0 0-23/7 * * *` |\n| `.EVERY_8_HOURS` | `0 0-23/8 * * *` |\n| `.EVERY_9_HOURS` | `0 0-23/9 * * *` |\n| `.EVERY_10_HOURS` | `0 0-23/10 * * *` |\n| `.EVERY_11_HOURS` | `0 0-23/11 * * *` |\n| `.EVERY_12_HOURS` | `0 0-23/12 * * *` |\n| `.EVERY_DAY_AT_1AM` | `0 01 * * *` |\n| `.EVERY_DAY_AT_2AM` | `0 02 * * *` |\n| `.EVERY_DAY_AT_3AM` | `0 03 * * *` |\n| `.EVERY_DAY_AT_4AM` | `0 04 * * *` |\n| `.EVERY_DAY_AT_5AM` | `0 05 * * *` |\n| `.EVERY_DAY_AT_6AM` | `0 06 * * *` |\n| `.EVERY_DAY_AT_7AM` | `0 07 * * *` |\n| `.EVERY_DAY_AT_8AM` | `0 08 * * *` |\n| `.EVERY_DAY_AT_9AM` | `0 09 * * *` |\n| `.EVERY_DAY_AT_10AM` | `0 10 * * *` |\n| `.EVERY_DAY_AT_11AM` | `0 11 * * *` |\n| `.EVERY_DAY_AT_NOON` | `0 12 * * *` |\n| `.EVERY_DAY_AT_1PM` | `0 13 * * *` |\n| `.EVERY_DAY_AT_2PM` | `0 14 * * *` |\n| `.EVERY_DAY_AT_3PM` | `0 15 * * *` |\n| `.EVERY_DAY_AT_4PM` | `0 16 * * *` |\n| `.EVERY_DAY_AT_5PM` | `0 17 * * *` |\n| `.EVERY_DAY_AT_6PM` | `0 18 * * *` |\n| `.EVERY_DAY_AT_7PM` | `0 19 * * *` |\n| `.EVERY_DAY_AT_8PM` | `0 20 * * *` |\n| `.EVERY_DAY_AT_9PM` | `0 21 * * *` |\n| `.EVERY_DAY_AT_10PM` | `0 22 * * *` |\n| `.EVERY_DAY_AT_11PM` | `0 23 * * *` |\n| `.EVERY_DAY_AT_MIDNIGHT` | `0 0 * * *` |\n| `.EVERY_WEEK` | `0 0 * * 0` |\n| `.EVERY_WEEKDAY` | `0 0 * * 1-5` |\n| `.EVERY_WEEKEND` | `0 0 * * 6,0` |\n| `.EVERY_1ST_DAY_OF_MONTH_AT_MIDNIGHT` | `0 0 1 * *` |\n| `.EVERY_1ST_DAY_OF_MONTH_AT_NOON` | `0 12 1 * *` |\n| `.EVERY_2ND_HOUR` | `0 */2 * * *` |\n| `.EVERY_2ND_HOUR_FROM_1AM_THROUGH_11PM` | `0 1-23/2 * * *` |\n| `.EVERY_2ND_MONTH` | `0 0 1 */2 *` |\n| `.EVERY_QUARTER` | `0 0 1 */3 *` |\n| `.EVERY_6_MONTHS` | `0 0 1 */6 *` |\n| `.EVERY_YEAR` | `0 0 1 1 *` |\n| `.EVERY_30_MINUTES_BETWEEN_9AM_AND_5PM` | `0 */30 9-17 * * *` |\n| `.EVERY_30_MINUTES_BETWEEN_9AM_AND_6PM` | `0 */30 9-18 * * *` |\n| `.EVERY_30_MINUTES_BETWEEN_10AM_AND_7PM` | `0 */30 10-19 * * *` |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "overview", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cron in elysiajs?\n\nAssistant: To cron in elysiajs, here's what you do:\nCreate a cronjob for the Elysia server.\n\ntype:\n```\ncron(config: CronConfig, callback: (Instance['store']) => void): this\n```\n\n`CronConfig` accepts the parameters specified below:\n\n### name\n\nJob name to register to `store`.\n\nThis will register the cron instance to `store` with a specified name, which can be used to reference in later processes eg. stop the job.\n\n### pattern\n\nTime to run the job as specified by [cron syntax](https://en.wikipedia.org/wiki/Cron) specified as below:\n\n```\n┌────────────── second (optional)\n│ ┌──────────── minute\n│ │ ┌────────── hour\n│ │ │ ┌──────── day of the month\n│ │ │ │ ┌────── month\n│ │ │ │ │ ┌──── day of week\n│ │ │ │ │ │\n* * * * * *\n```\n\nThis can be generated by tools like [Crontab Guru](https://crontab.guru/)\n\n* * *\n\nThis plugin extends the cron method to Elysia using [cronner](https://github.com/hexagon/croner).\n\nBelow are the configs accepted by cronner.\n\n### timezone\n\nTime zone in Europe/Stockholm format\n\n### startAt\n\nSchedule start time for the job\n\n### stopAt\n\nSchedule stop time for the job\n\n### maxRuns\n\nMaximum number of executions\n\n### catch\n\nContinue execution even if an unhandled error is thrown by a triggered function.\n\n### interval\n\nThe minimum interval between executions, in seconds..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I pattern in elysiajs?\n\nAssistant: To pattern in elysiajs, here's what you do:\nBelow you can find the common patterns to use the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I stop cronjob in elysiajs?\n\nAssistant: To stop cronjob in elysiajs, here's what you do:\nYou can stop cronjob manually by accessing the cronjob name registered to `store`.\n\ntypescript\n```\nimport { Elysia } from 'elysia'\nimport { cron } from '@elysiajs/cron'\n\nconst app = new Elysia()\n\t.use(\n\t\tcron({\n\t\t\tname: 'heartbeat',\n\t\t\tpattern: '*/1 * * * * *',\n\t\t\trun() {\n\t\t\t\tconsole.log('Heartbeat')\n\t\t\t}\n\t\t})\n\t)\n\t.get(\n\t\t'/stop',\n\t\t({\n\t\t\tstore: {\n\t\t\t\tcron: { heartbeat }\n\t\t\t}\n\t\t}) => {\n\t\t\theartbeat.stop()\n\n\t\t\treturn 'Stop heartbeat'\n\t\t}\n\t)\n\t.listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I predefined patterns in elysiajs?\n\nAssistant: To predefined patterns in elysiajs, here's what you do:\nYou can use predefined patterns from `@elysiajs/cron/schedule`\n\ntypescript\n```\nimport { Elysia } from 'elysia'\nimport { cron, Patterns } from '@elysiajs/cron'\n\nconst app = new Elysia()\n\t.use(\n\t\tcron({\n\t\t\tname: 'heartbeat',\n\t\t\tpattern: Patterns.everySecond(),\n\t\t\trun() {\n\t\t\t\tconsole.log('Heartbeat')\n\t\t\t}\n\t\t})\n\t)\n\t.get(\n\t\t'/stop',\n\t\t({\n\t\t\tstore: {\n\t\t\t\tcron: { heartbeat }\n\t\t\t}\n\t\t}) => {\n\t\t\theartbeat.stop()\n\n\t\t\treturn 'Stop heartbeat'\n\t\t}\n\t)\n\t.listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I functions in elysiajs?\n\nAssistant: To functions in elysiajs, here's what you do:\n| Function | Description |\n| --- | --- |\n| `.everySeconds(2)` | Run the task every 2 seconds |\n| `.everyMinutes(5)` | Run the task every 5 minutes |\n| `.everyHours(3)` | Run the task every 3 hours |\n| `.everyHoursAt(3, 15)` | Run the task every 3 hours at 15 minutes |\n| `.everyDayAt('04:19')` | Run the task every day at 04:19 |\n| `.everyWeekOn(Patterns.MONDAY, '19:30')` | Run the task every Monday at 19:30 |\n| `.everyWeekdayAt('17:00')` | Run the task every day from Monday to Friday at 17:00 |\n| `.everyWeekendAt('11:00')` | Run the task on Saturday and Sunday at 11:00 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I function aliases to constants in elysiajs?\n\nAssistant: To function aliases to constants in elysiajs, here's what you do:\n| Function | Constant |\n| --- | --- |\n| `.everySecond()` | EVERY_SECOND |\n| `.everyMinute()` | EVERY_MINUTE |\n| `.hourly()` | EVERY_HOUR |\n| `.daily()` | EVERY_DAY_AT_MIDNIGHT |\n| `.everyWeekday()` | EVERY_WEEKDAY |\n| `.everyWeekend()` | EVERY_WEEKEND |\n| `.weekly()` | EVERY_WEEK |\n| `.monthly()` | EVERY_1ST_DAY_OF_MONTH_AT_MIDNIGHT |\n| `.everyQuarter()` | EVERY_QUARTER |\n| `.yearly()` | EVERY_YEAR |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I constants in elysiajs?\n\nAssistant: To constants in elysiajs, here's what you do:\n| Constant | Pattern |\n| --- | --- |\n| `.EVERY_SECOND` | `* * * * * *` |\n| `.EVERY_5_SECONDS` | `*/5 * * * * *` |\n| `.EVERY_10_SECONDS` | `*/10 * * * * *` |\n| `.EVERY_30_SECONDS` | `*/30 * * * * *` |\n| `.EVERY_MINUTE` | `*/1 * * * *` |\n| `.EVERY_5_MINUTES` | `0 */5 * * * *` |\n| `.EVERY_10_MINUTES` | `0 */10 * * * *` |\n| `.EVERY_30_MINUTES` | `0 */30 * * * *` |\n| `.EVERY_HOUR` | `0 0-23/1 * * *` |\n| `.EVERY_2_HOURS` | `0 0-23/2 * * *` |\n| `.EVERY_3_HOURS` | `0 0-23/3 * * *` |\n| `.EVERY_4_HOURS` | `0 0-23/4 * * *` |\n| `.EVERY_5_HOURS` | `0 0-23/5 * * *` |\n| `.EVERY_6_HOURS` | `0 0-23/6 * * *` |\n| `.EVERY_7_HOURS` | `0 0-23/7 * * *` |\n| `.EVERY_8_HOURS` | `0 0-23/8 * * *` |\n| `.EVERY_9_HOURS` | `0 0-23/9 * * *` |\n| `.EVERY_10_HOURS` | `0 0-23/10 * * *` |\n| `.EVERY_11_HOURS` | `0 0-23/11 * * *` |\n| `.EVERY_12_HOURS` | `0 0-23/12 * * *` |\n| `.EVERY_DAY_AT_1AM` | `0 01 * * *` |\n| `.EVERY_DAY_AT_2AM` | `0 02 * * *` |\n| `.EVERY_DAY_AT_3AM` | `0 03 * * *` |\n| `.EVERY_DAY_AT_4AM` | `0 04 * * *` |\n| `.EVERY_DAY_AT_5AM` | `0 05 * * *` |\n| `.EVERY_DAY_AT_6AM` | `0 06 * * *` |\n| `.EVERY_DAY_AT_7AM` | `0 07 * * *` |\n| `.EVERY_DAY_AT_8AM` | `0 08 * * *` |\n| `.EVERY_DAY_AT_9AM` | `0 09 * * *` |\n| `.EVERY_DAY_AT_10AM` | `0 10 * * *` |\n| `.EVERY_DAY_AT_11AM` | `0 11 * * *` |\n| `.EVERY_DAY_AT_NOON` | `0 12 * * *` |\n| `.EVERY_DAY_AT_1PM` | `0 13 * * *` |\n| `.EVERY_DAY_AT_2PM` | `0 14 * * *` |\n| `.EVERY_DAY_AT_3PM` | `0 15 * * *` |\n| `.EVERY_DAY_AT_4PM` | `0 16 * * *` |\n| `.EVERY_DAY_AT_5PM` | `0 17 * * *` |\n| `.EVERY_DAY_AT_6PM` | `0 18 * * *` |\n| `.EVERY_DAY_AT_7PM` | `0 19 * * *` |\n| `.EVERY_DAY_AT_8PM` | `0 20 * * *` |\n| `.EVERY_DAY_AT_9PM` | `0 21 * * *` |\n| `.EVERY_DAY_AT_10PM` | `0 22 * * *` |\n| `.EVERY_DAY_AT_11PM` | `0 23 * * *` |\n| `.EVERY_DAY_AT_MIDNIGHT` | `0 0 * * *` |\n| `.EVERY_WEEK` | `0 0 * * 0` |\n| `.EVERY_WEEKDAY` | `0 0 * * 1-5` |\n| `.EVERY_WEEKEND` | `0 0 * * 6,0` |\n| `.EVERY_1ST_DAY_OF_MONTH_AT_MIDNIGHT` | `0 0 1 * *` |\n| `.EVERY_1ST_DAY_OF_MONTH_AT_NOON` | `0 12 1 * *` |\n| `.EVERY_2ND_HOUR` | `0 */2 * * *` |\n| `.EVERY_2ND_HOUR_FROM_1AM_THROUGH_11PM` | `0 1-23/2 * * *` |\n| `.EVERY_2ND_MONTH` | `0 0 1 */2 *` |\n| `.EVERY_QUARTER` | `0 0 1 */3 *` |\n| `.EVERY_6_MONTHS` | `0 0 1 */6 *` |\n| `.EVERY_YEAR` | `0 0 1 1 *` |\n| `.EVERY_30_MINUTES_BETWEEN_9AM_AND_5PM` | `0 */30 9-17 * * *` |\n| `.EVERY_30_MINUTES_BETWEEN_9AM_AND_6PM` | `0 */30 9-18 * * *` |\n| `.EVERY_30_MINUTES_BETWEEN_10AM_AND_7PM` | `0 */30 10-19 * * *` |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "section_detail", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Cron Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Cron Job Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { cron } from '@elysiajs/cron'\n\nnew Elysia()\n\t.use(\n\t\tcron({\n\t\t\tname: 'heartbeat',\n\t\t\tpattern: '*/10 * * * * *',\n\t\t\trun() {\n\t\t\t\tconsole.log('Heartbeat')\n\t\t\t}\n\t\t})\n\t)\n\t.listen(3000)\n```\n\nThis snippet shows you how to basic cron job example, which is an important aspect of cron plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "code_examples", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Cron Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse descriptive names for your cron jobs to easily identify them later.\n\nTest your cron jobs thoroughly to ensure they run as expected before deploying them in a production environment.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/cron", "title": "Cron Plugin", "description": "This plugin adds support for running cronjob in the Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:06:33", "type": "best_practices", "page_metadata": {"ogTitle": "Cron Plugin - ElysiaJS", "twitter:card": "summary_large_image", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for customizing Cross-Origin Resource Sharing behavior. Start by installing the plugin with \"bun add @elysiajs/cors\"."], "generator": "VitePress v1.6.3", "title": "Cron Plugin - ElysiaJS | ElysiaJS", "og:title": "Cron Plugin - ElysiaJS", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds support for running cronjob in Elysia server. Start by installing the plugin with ", "og:image:width": "1920", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d1d9b52d-43b5-43ff-b2ac-f4f682f69d13", "sourceURL": "https://elysiajs.com/plugins/cron", "url": "https://elysiajs.com/plugins/cron", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Structure is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Structure in elysiajs.\n\n# Structure\n\nElysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.Here's a quick rundown of what this is about:\n\n## Method Chaining\n\nElysia code should always use **method chaining**. As Elysia type system is complex, every methods in Elysia returns a new type reference. **This is important** to ensure type integrity and inference.\n\n## ❌ Don't: Use without method chaining\n\nWithout using method chaining, Elysia doesn't save these new types, leading to no type inference. We recommend to **always use method chaining** to provide an accurate type inference.\n\n## Controller\n\n1 Elysia instance = 1 controller. Elysia does a lot to ensure type integrity, if you pass an entire `Context` type to a controller, these might be the problems: 1. Elysia type is complex and heavily depends on plugin and multiple level of chaining. 2. Hard to type, Elysia type could change at anytime, especially with decorators, and store 3. Type casting may lead to a loss of type integrity or an inability to ensure consistency between types and runtime code. 4. This makes it more challenging for Sucrose (Elysia's \"kind of\" compiler) to statically analyze your code.\n\n## ❌ Don't: Create a separate controller\n\nDon't create a separate controller, use Elysia itself as a controller instead.\n\n## ✅ Do: Use Elysia as a controller\n\nInstead treat an Elysia instance as a controller itself.\n\n## Service\n\nService is a set of utility/helper functions decoupled as a business logic to use in a module/controller, in our case, an Elysia instance. There're 2 types of service in Elysia: 1. Non-request dependent service 2. Request dependent service\n\n## ✅ Do: Non-request dependent service\n\nThis kind of service doesn't need to access any property from the request or `Context`, and can be initiated as a static class same as usual MVC service pattern.\n\n## Request Dependent Service\n\nThis kind of service may require some property from the request, and should be **initiated as an Elysia instance**.\n\n## ❌ Don't: Pass entire `Context` to a service\n\n**Context is a highly dynamic type** that can be inferred from Elysia instance. Do not pass an entire `Context` to a service, instead use object destructuring to extract what you need and pass it to the service.\n\n## ✅ Do: Use Elysia instance as a service\n\nWe recommended to use Elysia instance as a service to ensure type integrity and inference.\n\n## ⚠️ Infers Context from Elysia instance\n\nIn case of **absolute necessity**, you may infer the `Context` type from the Elysia instance itself. However we recommend to avoid this if possible, and use Elysia as a service instead.\n\n## Model\n\nModel or DTO (Data Transfer Object) is handle by Elysia.t (Validation). Elysia has a validation system built-in which can infers type from your code and validate it at runtime.\n\n## ❌ Don't: Declare a class instance as a model\n\nDo not declare a class instance as a model.\n\n## ✅ Do: Use Elysia's validation system\n\nInstead of declaring a class or interface, use Elysia's validation system to define a model.\n\n## ❌ Don't: Declare type separate from the model\n\nDo not declare a type separate from the model, instead use `typeof` with `.static` property to get the type of the model.\n\n## Group\n\nYou can group multiple models into a single object to make it more organized.\n\n## Model Injection\n\nThough this is optional, if you are strictly following MVC pattern, you may want to inject like a service into a controller.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "overview", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I method chaining in elysiajs?\n\nAssistant: To method chaining in elysiajs, here's what you do:\nElysia code should always use **method chaining**. As Elysia type system is complex, every methods in Elysia returns a new type reference. **This is important** to ensure type integrity and inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: use without method chaining in elysiajs?\n\nAssistant: To ❌ don't: use without method chaining in elysiajs, here's what you do:\nWithout using method chaining, Elysia doesn't save these new types, leading to no type inference. We recommend to **always use method chaining** to provide an accurate type inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I controller in elysiajs?\n\nAssistant: To controller in elysiajs, here's what you do:\n1 Elysia instance = 1 controller. Elysia does a lot to ensure type integrity, if you pass an entire `Context` type to a controller, these might be the problems: 1. Elysia type is complex and heavily depends on plugin and multiple level of chaining. 2. Hard to type, Elysia type could change at anytime, especially with decorators, and store 3. Type casting may lead to a loss of type integrity or an inability to ensure consistency between types and runtime code. 4. This makes it more challenging for Sucrose (Elysia's \"kind of\" compiler) to statically analyze your code..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: create a separate controller in elysiajs?\n\nAssistant: To ❌ don't: create a separate controller in elysiajs, here's what you do:\nDon't create a separate controller, use Elysia itself as a controller instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: use elysia as a controller in elysiajs?\n\nAssistant: To ✅ do: use elysia as a controller in elysiajs, here's what you do:\nInstead treat an Elysia instance as a controller itself..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I service in elysiajs?\n\nAssistant: To service in elysiajs, here's what you do:\nService is a set of utility/helper functions decoupled as a business logic to use in a module/controller, in our case, an Elysia instance. There're 2 types of service in Elysia: 1. Non-request dependent service 2. Request dependent service.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: non-request dependent service in elysiajs?\n\nAssistant: To ✅ do: non-request dependent service in elysiajs, here's what you do:\nThis kind of service doesn't need to access any property from the request or `Context`, and can be initiated as a static class same as usual MVC service pattern..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I request dependent service in elysiajs?\n\nAssistant: To request dependent service in elysiajs, here's what you do:\nThis kind of service may require some property from the request, and should be **initiated as an Elysia instance**..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: pass entire `context` to a service in elysiajs?\n\nAssistant: To ❌ don't: pass entire `context` to a service in elysiajs, here's what you do:\n**Context is a highly dynamic type** that can be inferred from Elysia instance. Do not pass an entire `Context` to a service, instead use object destructuring to extract what you need and pass it to the service..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: use elysia instance as a service in elysiajs?\n\nAssistant: To ✅ do: use elysia instance as a service in elysiajs, here's what you do:\nWe recommended to use Elysia instance as a service to ensure type integrity and inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ⚠️ infers context from elysia instance in elysiajs?\n\nAssistant: To ⚠️ infers context from elysia instance in elysiajs, here's what you do:\nIn case of **absolute necessity**, you may infer the `Context` type from the Elysia instance itself. However we recommend to avoid this if possible, and use Elysia as a service instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I model in elysiajs?\n\nAssistant: To model in elysiajs, here's what you do:\nModel or DTO (Data Transfer Object) is handle by Elysia.t (Validation). Elysia has a validation system built-in which can infers type from your code and validate it at runtime..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: declare a class instance as a model in elysiajs?\n\nAssistant: To ❌ don't: declare a class instance as a model in elysiajs, here's what you do:\nDo not declare a class instance as a model..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: use elysia's validation system in elysiajs?\n\nAssistant: To ✅ do: use elysia's validation system in elysiajs, here's what you do:\nInstead of declaring a class or interface, use Elysia's validation system to define a model..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: declare type separate from the model in elysiajs?\n\nAssistant: To ❌ don't: declare type separate from the model in elysiajs, here's what you do:\nDo not declare a type separate from the model, instead use `typeof` with `.static` property to get the type of the model..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I group in elysiajs?\n\nAssistant: To group in elysiajs, here's what you do:\nYou can group multiple models into a single object to make it more organized..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I model injection in elysiajs?\n\nAssistant: To model injection in elysiajs, here's what you do:\nThough this is optional, if you are strictly following MVC pattern, you may want to inject like a service into a controller..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Structure in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Method Chaining Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('build', 1)\n    .get('/', ({ store: { build } }) => build)\n    .listen(3000)\n```\n\nThis snippet shows you how to method chaining example, which is an important aspect of structure.\n\n**Don't Use Without Method Chaining Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n\napp.state('build', 1)\n\napp.get('/', ({ store: { build } }) => build)\n\napp.listen(3000)\n```\n\nThis snippet shows you how to don't use without method chaining example, which is an important aspect of structure.\n\n**Don't Create a Separate Controller Example**:\n\n```yaml\nimport { Elysia, t, type Context } from 'elysia'\n\nabstract class Controller {\n    static root(context: Context) {\n        return Service.doStuff(context.stuff)\n    }\n}\n\nnew Elysia()\n    .get('/', Controller.hi)\n```\n\nThis snippet shows you how to don't create a separate controller example, which is an important aspect of structure.\n\n", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "code_examples", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Structure in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways use method chaining to provide an accurate type inference.\n\nUse Elysia itself as a controller instead of creating a separate controller.\n\nUse Elysia instance as a service to ensure type integrity and inference.\n\nAvoid passing an entire Context to a service; use object destructuring instead.\n\nUse Elysia's validation system to define a model instead of declaring a class or interface.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/essential/structure", "title": "Structure", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 17, "timestamp": "2025-03-01 03:06:48", "type": "best_practices", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "title": "Structure - ElysiaJS | ElysiaJS", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "twitter:card": "summary_large_image", "ogTitle": "Structure - ElysiaJS", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:title": "Structure - ElysiaJS", "ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "scrapeId": "a93b62c3-0779-4bcf-9d79-e10fef5ff96e", "sourceURL": "https://elysiajs.com/essential/structure", "url": "https://elysiajs.com/essential/structure", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what HTML Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain HTML Plugin in elysiajs.\n\n# HTML Plugin\n\nAllows you to use JSX and HTML with proper headers and support.Here's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/html\n```\n\n## Usage\n\nThen use it:\ntsx\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nhtml,\nHtml } from '@elysiajs/html'\n\nnew\nElysia()\n\t.\nuse(\nhtml())\n\t.\nget(\n\t\t'/html',\n\t\t() => `\n            <html lang='en'>\n                <head>\n                    <title>Hello World</title>\n                </head>\n                <body>\n                    <h1>Hello World</h1>\n                </body>\n            </html>`\n\t)\n\t.\nget('/jsx', () => (\n\t\t<\nhtml\nlang=\"en\">\n\t\t\t<\nhead>\n\t\t\t\t<\ntitle>Hello World</\ntitle>\n\t\t\t</\nhead>\n\t\t\t<\nbody>\n\t\t\t\t<\nh1>Hello World</\nh1>\n\t\t\t</\nbody>\n\t\t\t</\nhtml>\n\t))\n\t.\nlisten(3000)\n```\n\n## JSX\n\nElysia HTML is based on [@kitajs/html](https://github.com/kitajs/html) allowing us to define JSX to string in compile time to achieve high performance.\n\nName your file that needs to use JSX to end with affix **\"x\"**:\n\n- .js -> .jsx\n- .ts -> .tsx\n\nTo register the TypeScript type, please append the following to **tsconfig.json**:\n\njsonc\n\n```json\n// tsconfig.json\n{\n\t\"compilerOptions\": {\n\t\t\"jsx\": \"react\",\n\t\t\"jsxFactory\": \"Html.createElement\",\n\t\t\"jsxFragmentFactory\": \"Html.Fragment\"\n\t}\n}\n```\n\nThat's it, now you can use JSX as your template engine:\ntsx\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nhtml,\nHtml } from '@elysiajs/html'\n\nnew\nElysia()\n\t.\nuse(\nhtml())\n\t.\nget('/', () => (\n\t\t<\nhtml\nlang=\"en\">\n\t\t\t<\nhead>\n\t\t\t\t<\ntitle>Hello World</\ntitle>\n\t\t\t</\nhead>\n\t\t\t<\nbody>\n\t\t\t\t<\nh1>Hello World</\nh1>\n\t\t\t</\nbody>\n\t\t\t</\nhtml>\n\t))\n\t.\nlisten(3000)\n```\n\n## XSS\n\nElysia HTML is based use of the Kita HTML plugin to detect possible XSS attacks in compile time.\n\nYou can use a dedicated `safe` attribute to sanitize user value to prevent XSS vulnerability.\ntsx\n\n```\nimport { Elysia, t } from 'elysia'\nimport { html, Html } from '@elysiajs/html'\n\nnew Elysia()\n\t.use(html())\n\t.post(\n\t\t'/',\n\t\t({ body }) => (\n\t\t\t<html lang=\"en\">\n\t\t\t\t<head>\n\t\t\t\t\t<title>Hello World</title>\n\t\t\t\t</head>\n\t\t\t\t<body>\n\t\t\t\t\t<h1 safe>{body}</h1>\n\t\t\t\t</body>\n\t\t\t</html>\n\t\t\t),\n\t\t{\n\t\t\tbody: t.String()\n\t\t}\n\t)\n\t.listen(3000)\n```\n\nHowever, when are building a large-scale app, it's best to have a type reminder to detect possible XSS vulnerabilities in your codebase.\n\nTo add a type-safe reminder, please install:\n\nsh\n\n```\nbun add @kitajs/ts-html-plugin\n```\n\nThen appends the following **tsconfig.json**\n\njsonc\n\n```json\n// tsconfig.json\n{\n\t\"compilerOptions\": {\n\t\t\"jsx\": \"react\",\n\t\t\"jsxFactory\": \"Html.createElement\",\n\t\t\"jsxFragmentFactory\": \"Html.Fragment\",\n\t\t\"plugins\": [{ \"name\": \"@kitajs/ts-html-plugin\" }]\n\t}\n}\n```\n\n## Options\n\n### contentType\n\n- Type: `string`\n- Default: `'text/html; charset=utf8'`\n\nThe content-type of the response.\n\n### autoDetect\n\n- Type: `boolean`\n- Default: `true`\n\nWhether to automatically detect HTML content and set the content-type.\n\n### autoDoctype\n\n- Type: `boolean | 'full'`\n- Default: `true`\n\nWhether to automatically add `<!doctype html>` to a response starting with `<html>`, if not found.\n\nUse `full` to also automatically add doctypes on responses returned without this plugin\nts\n\n```ts\n// without the plugin\napp.get('/', () => '<html></html>')\n\n// With the plugin\napp.get('/', ({ html }) => html('<html></html>'))\n```\n\n### isHtml\n\n- Type: `(value: string) => boolean`\n- Default: `isHtml` (exported function)\n\nThe function is used to detect if a string is a html or not. Default implementation if length is greater than 7, starts with `<` and ends with `>`.\n\nKeep in mind there's no real way to validate HTML, so the default implementation is a best guess.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/html\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntsx\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nhtml,\nHtml } from '@elysiajs/html'\n\nnew\nElysia()\n\t.\nuse(\nhtml())\n\t.\nget(\n\t\t'/html',\n\t\t() => `\n            <html lang='en'>\n                <head>\n                    <title>Hello World</title>\n                </head>\n                <body>\n                    <h1>Hello World</h1>\n                </body>\n            </html>`\n\t)\n\t.\nget('/jsx', () => (\n\t\t<\nhtml\nlang=\"en\">\n\t\t\t<\nhead>\n\t\t\t\t<\ntitle>Hello World</\ntitle>\n\t\t\t</\nhead>\n\t\t\t<\nbody>\n\t\t\t\t<\nh1>Hello World</\nh1>\n\t\t\t</\nbody>\n\t\t\t</\nhtml>\n\t))\n\t.\nlisten(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I jsx in elysiajs?\n\nAssistant: To jsx in elysiajs, here's what you do:\nElysia HTML is based on [@kitajs/html](https://github.com/kitajs/html) allowing us to define JSX to string in compile time to achieve high performance.\n\nName your file that needs to use JSX to end with affix **\"x\"**:\n\n- .js -> .jsx\n- .ts -> .tsx\n\nTo register the TypeScript type, please append the following to **tsconfig.json**:\n\njsonc\n\n```json\n// tsconfig.json\n{\n\t\"compilerOptions\": {\n\t\t\"jsx\": \"react\",\n\t\t\"jsxFactory\": \"Html.createElement\",\n\t\t\"jsxFragmentFactory\": \"Html.Fragment\"\n\t}\n}\n```\n\nThat's it, now you can use JSX as your template engine:\ntsx\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nhtml,\nHtml } from '@elysiajs/html'\n\nnew\nElysia()\n\t.\nuse(\nhtml())\n\t.\nget('/', () => (\n\t\t<\nhtml\nlang=\"en\">\n\t\t\t<\nhead>\n\t\t\t\t<\ntitle>Hello World</\ntitle>\n\t\t\t</\nhead>\n\t\t\t<\nbody>\n\t\t\t\t<\nh1>Hello World</\nh1>\n\t\t\t</\nbody>\n\t\t\t</\nhtml>\n\t))\n\t.\nlisten(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I xss in elysiajs?\n\nAssistant: To xss in elysiajs, here's what you do:\nElysia HTML is based use of the Kita HTML plugin to detect possible XSS attacks in compile time.\n\nYou can use a dedicated `safe` attribute to sanitize user value to prevent XSS vulnerability.\ntsx\n\n```\nimport { Elysia, t } from 'elysia'\nimport { html, Html } from '@elysiajs/html'\n\nnew Elysia()\n\t.use(html())\n\t.post(\n\t\t'/',\n\t\t({ body }) => (\n\t\t\t<html lang=\"en\">\n\t\t\t\t<head>\n\t\t\t\t\t<title>Hello World</title>\n\t\t\t\t</head>\n\t\t\t\t<body>\n\t\t\t\t\t<h1 safe>{body}</h1>\n\t\t\t\t</body>\n\t\t\t</html>\n\t\t\t),\n\t\t{\n\t\t\tbody: t.String()\n\t\t}\n\t)\n\t.listen(3000)\n```\n\nHowever, when are building a large-scale app, it's best to have a type reminder to detect possible XSS vulnerabilities in your codebase.\n\nTo add a type-safe reminder, please install:\n\nsh\n\n```\nbun add @kitajs/ts-html-plugin\n```\n\nThen appends the following **tsconfig.json**\n\njsonc\n\n```json\n// tsconfig.json\n{\n\t\"compilerOptions\": {\n\t\t\"jsx\": \"react\",\n\t\t\"jsxFactory\": \"Html.createElement\",\n\t\t\"jsxFragmentFactory\": \"Html.Fragment\",\n\t\t\"plugins\": [{ \"name\": \"@kitajs/ts-html-plugin\" }]\n\t}\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I options in elysiajs?\n\nAssistant: To options in elysiajs, here's what you do:\n### contentType\n\n- Type: `string`\n- Default: `'text/html; charset=utf8'`\n\nThe content-type of the response.\n\n### autoDetect\n\n- Type: `boolean`\n- Default: `true`\n\nWhether to automatically detect HTML content and set the content-type.\n\n### autoDoctype\n\n- Type: `boolean | 'full'`\n- Default: `true`\n\nWhether to automatically add `<!doctype html>` to a response starting with `<html>`, if not found.\n\nUse `full` to also automatically add doctypes on responses returned without this plugin\nts\n\n```ts\n// without the plugin\napp.get('/', () => '<html></html>')\n\n// With the plugin\napp.get('/', ({ html }) => html('<html></html>'))\n```\n\n### isHtml\n\n- Type: `(value: string) => boolean`\n- Default: `isHtml` (exported function)\n\nThe function is used to detect if a string is a html or not. Default implementation if length is greater than 7, starts with `<` and ends with `>`.\n\nKeep in mind there's no real way to validate HTML, so the default implementation is a best guess..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for HTML Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/html\n```\n\nThis snippet shows you how to installation command, which is an important aspect of html plugin.\n\n**Basic Usage Example**:\n\n```yaml\nimport {\nElysia } from 'elysia'\nimport {\nhtml,\nHtml } from '@elysiajs/html'\n\nnew\nElysia()\n\t.\nuse(\nhtml())\n\t.\nget(\n\t\t'/html',\n\t\t() => `\n            <html lang='en'>\n                <head>\n                    <title>Hello World</title>\n                </head>\n                <body>\n                    <h1>Hello World</h1>\n                </body>\n            </html>`\n\t)\n\t.\nget('/jsx', () => (\n\t\t<\nhtml\nlang=\"en\">\n\t\t\t<\nhead>\n\t\t\t\t<\ntitle>Hello World</\ntitle>\n\t\t\t</\nhead>\n\t\t\t<\nbody>\n\t\t\t\t<\nh1>Hello World</\nh1>\n\t\t\t</\nbody>\n\t\t\t</\nhtml>\n\t))\n\t.\nlisten(3000)\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of html plugin.\n\n**JSX Configuration in tsconfig.json**:\n\n```yaml\n// tsconfig.json\n{\n\t\"compilerOptions\": {\n\t\t\"jsx\": \"react\",\n\t\t\"jsxFactory\": \"Html.createElement\",\n\t\t\"jsxFragmentFactory\": \"Html.Fragment\"\n\t}\n}\n```\n\nThis snippet shows you how to jsx configuration in tsconfig.json, which is an important aspect of html plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using HTML Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWhen building a large-scale app, it's best to have a type reminder to detect possible XSS vulnerabilities in your codebase.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/html", "title": "HTML Plugin", "description": "Allows you to use JSX and HTML with proper headers and support.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:14", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "HTML Plugin - ElysiaJS", "og:title": "HTML Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\".", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "language": "en-US", "title": "HTML Plugin - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds shortcut support for returning HTML in the Elysia server. Start by installing the plugin with \"bun add @elysiajs/html\"."], "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "eff8f7d5-6b3c-4c15-b0ab-ce8f66cfc29f", "sourceURL": "https://elysiajs.com/plugins/html", "url": "https://elysiajs.com/plugins/html", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Trace is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Trace in elysiajs.\n\n# Trace\n\nPerformance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.Here's a quick rundown of what this is about:\n\n## Trace\n\nTrace use a callback listener to ensure that callback function is finished before moving on to the next lifecycle event.\n\nTo use `trace`, you need to call `trace` method on the Elysia instance, and pass a callback function that will be executed for each life-cycle event.\n\nYou may listen to each lifecycle by adding `on` prefix follows by life-cycle name, for example `onHandle` to listen to `handle` event.\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(async ({ onHandle }) => {\n        onHandle(({ begin, onStop }) => {\n            onStop(({ end }) => {\n                console.log('handle took', end - begin, 'ms')\n            })\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n``` \n\nPlease refer to [Life Cycle Events](https://elysiajs.com/essential/life-cycle.html#events) for more information:\n\n![Elysia Life Cycle](https://elysiajs.com/assets/lifecycle.webp)\n\n## Children\n\nEvery events except `handle` have a children, which is an array of events that are executed inside for each life-cycle event.\n\nYou can use `onEvent` to listen to each child event in order\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst sleep = (time = 1000) =>\n    new Promise((resolve) =>\n        setTimeout(resolve, time)\n    )\n\nconst app = new Elysia()\n    .trace(async ({ onBeforeHandle }) => {\n        onBeforeHandle(({ total, onEvent }) => {\n            console.log('total children:', total)\n\n            onEvent(({ onStop }) => {\n                onStop(({ elapsed }) => {\n                    console.log('child took', elapsed, 'ms')\n                })\n            })\n        })\n    })\n    .get('/', () => 'Hi', {\n        beforeHandle: [\n            function setup() {},\n            async function delay() {\n                await sleep()\n            }\n        ]\n    })\n    .listen(3000)\n```\n\nIn this example, total children will be `2` because there are 2 children in the `beforeHandle` event.\n\nThen we listen to each child event by using `onEvent` and print the duration of each child event.\n\n## Trace Parameter\n\nWhen each lifecycle is called\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    // This is trace parameter\n    // hover to view the type\n    .trace((parameter) => {\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n\n`trace` accept the following parameters:\n\n### id - `number`\nRandomly generated unique id for each request\n\n### context - `Context`\nElysia's [Context](https://elysiajs.com/essential/handler.html#context), eg. `set`, `store`, `query`, `params`\n\n### set - `Context.set`\nShortcut for `context.set`, to set a headers or status of the context\n\n### store - `Singleton.store`\nShortcut for `context.store`, to access a data in the context\n\n### time - `number`\nTimestamp of when request is called\n\n### on[Event] - `TraceListener`\nAn event listener for each life-cycle event.\n\nYou may listen to the following life-cycle:\n- **onRequest** - get notified of every new request\n- **onParse** - array of functions to parse the body\n- **onTransform** - transform request and context before validation\n- **onBeforeHandle** - custom requirement to check before the main handler, can skip the main handler if response returned.\n- **onHandle** - function assigned to the path\n- **onAfterHandle** - interact with the response before sending it back to the client\n- **onMapResponse** - map returned value into a Web Standard Response\n- **onError** - handle error thrown during processing request\n- **onAfterResponse** - cleanup function after response is sent.\n\n## Trace Listener\n\nA listener for each life-cycle event\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(({ onBeforeHandle }) => {\n        // This is trace listener\n        // hover to view the type\n        onBeforeHandle((parameter) => {\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n\nEach lifecycle listener accept the following\n\n### name - `string`\nThe name of the function, if the function is anonymous, the name will be `anonymous`\n\n### begin - `number`\nThe time when the function is started\n\n### end - `Promise<number>`\nThe time when the function is ended, will be resolved when the function is ended\n\n### error - `Promise<Error | null>`\nError that was thrown in the lifecycle, will be resolved when the function is ended\n\n### onStop - `callback?: (detail: TraceEndDetail) => any`\nA callback that will be executed when the lifecycle is ended\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(({ onBeforeHandle, set }) => {\n        onBeforeHandle(({ onStop }) => {\n            onStop(({ elapsed }) => {\n                set.headers['X-Elapsed'] = elapsed.toString()\n            })\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n\nIt's recommended to mutate context in this function as there's a lock mechanism to ensure the context is mutate successfully before moving on to the next lifecycle event.\n\n## TraceEndDetail\n\nA parameter that passed to `onStop` callback\n\n### end - `number`\nThe time when the function is ended\n\n### error - `Error | null`\nError that was thrown in the lifecycle\n\n### elapsed - `number`\nElapsed time of the lifecycle or `end - begin`\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trace in elysiajs?\n\nAssistant: To trace in elysiajs, here's what you do:\nTrace use a callback listener to ensure that callback function is finished before moving on to the next lifecycle event.\n\nTo use `trace`, you need to call `trace` method on the Elysia instance, and pass a callback function that will be executed for each life-cycle event.\n\nYou may listen to each lifecycle by adding `on` prefix follows by life-cycle name, for example `onHandle` to listen to `handle` event.\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(async ({ onHandle }) => {\n        onHandle(({ begin, onStop }) => {\n            onStop(({ end }) => {\n                console.log('handle took', end - begin, 'ms')\n            })\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n``` \n\nPlease refer to [Life Cycle Events](https://elysiajs.com/essential/life-cycle.html#events) for more information:\n\n![Elysia Life Cycle](https://elysiajs.com/assets/lifecycle.webp).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I children in elysiajs?\n\nAssistant: To children in elysiajs, here's what you do:\nEvery events except `handle` have a children, which is an array of events that are executed inside for each life-cycle event.\n\nYou can use `onEvent` to listen to each child event in order\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst sleep = (time = 1000) =>\n    new Promise((resolve) =>\n        setTimeout(resolve, time)\n    )\n\nconst app = new Elysia()\n    .trace(async ({ onBeforeHandle }) => {\n        onBeforeHandle(({ total, onEvent }) => {\n            console.log('total children:', total)\n\n            onEvent(({ onStop }) => {\n                onStop(({ elapsed }) => {\n                    console.log('child took', elapsed, 'ms')\n                })\n            })\n        })\n    })\n    .get('/', () => 'Hi', {\n        beforeHandle: [\n            function setup() {},\n            async function delay() {\n                await sleep()\n            }\n        ]\n    })\n    .listen(3000)\n```\n\nIn this example, total children will be `2` because there are 2 children in the `beforeHandle` event.\n\nThen we listen to each child event by using `onEvent` and print the duration of each child event..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trace parameter in elysiajs?\n\nAssistant: To trace parameter in elysiajs, here's what you do:\nWhen each lifecycle is called\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    // This is trace parameter\n    // hover to view the type\n    .trace((parameter) => {\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n\n`trace` accept the following parameters:\n\n### id - `number`\nRandomly generated unique id for each request\n\n### context - `Context`\nElysia's [Context](https://elysiajs.com/essential/handler.html#context), eg. `set`, `store`, `query`, `params`\n\n### set - `Context.set`\nShortcut for `context.set`, to set a headers or status of the context\n\n### store - `Singleton.store`\nShortcut for `context.store`, to access a data in the context\n\n### time - `number`\nTimestamp of when request is called\n\n### on[Event] - `TraceListener`\nAn event listener for each life-cycle event.\n\nYou may listen to the following life-cycle:\n- **onRequest** - get notified of every new request\n- **onParse** - array of functions to parse the body\n- **onTransform** - transform request and context before validation\n- **onBeforeHandle** - custom requirement to check before the main handler, can skip the main handler if response returned.\n- **onHandle** - function assigned to the path\n- **onAfterHandle** - interact with the response before sending it back to the client\n- **onMapResponse** - map returned value into a Web Standard Response\n- **onError** - handle error thrown during processing request\n- **onAfterResponse** - cleanup function after response is sent..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trace listener in elysiajs?\n\nAssistant: To trace listener in elysiajs, here's what you do:\nA listener for each life-cycle event\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(({ onBeforeHandle }) => {\n        // This is trace listener\n        // hover to view the type\n        onBeforeHandle((parameter) => {\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n\nEach lifecycle listener accept the following\n\n### name - `string`\nThe name of the function, if the function is anonymous, the name will be `anonymous`\n\n### begin - `number`\nThe time when the function is started\n\n### end - `Promise<number>`\nThe time when the function is ended, will be resolved when the function is ended\n\n### error - `Promise<Error | null>`\nError that was thrown in the lifecycle, will be resolved when the function is ended\n\n### onStop - `callback?: (detail: TraceEndDetail) => any`\nA callback that will be executed when the lifecycle is ended\n\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(({ onBeforeHandle, set }) => {\n        onBeforeHandle(({ onStop }) => {\n            onStop(({ elapsed }) => {\n                set.headers['X-Elapsed'] = elapsed.toString()\n            })\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n\nIt's recommended to mutate context in this function as there's a lock mechanism to ensure the context is mutate successfully before moving on to the next lifecycle event..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I traceenddetail in elysiajs?\n\nAssistant: To traceenddetail in elysiajs, here's what you do:\nA parameter that passed to `onStop` callback\n\n### end - `number`\nThe time when the function is ended\n\n### error - `Error | null`\nError that was thrown in the lifecycle\n\n### elapsed - `number`\nElapsed time of the lifecycle or `end - begin`.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Trace in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Trace Example**:\n\n```yaml\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(async ({ onHandle }) => {\n        onHandle(({ begin, onStop }) => {\n            onStop(({ end }) => {\n                console.log('handle took', end - begin, 'ms')\n            })\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to trace example, which is an important aspect of trace.\n\n**Children Example**:\n\n```yaml\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst sleep = (time = 1000) =>\n    new Promise((resolve) =>\n        setTimeout(resolve, time)\n    )\n\nconst app = new Elysia()\n    .trace(async ({ onBeforeHandle }) => {\n        onBeforeHandle(({ total, onEvent }) => {\n            console.log('total children:', total)\n\n            onEvent(({ onStop }) => {\n                onStop(({ elapsed }) => {\n                    console.log('child took', elapsed, 'ms')\n                })\n            })\n        })\n    })\n    .get('/', () => 'Hi', {\n        beforeHandle: [\n            function setup() {},\n            async function delay() {\n                await sleep()\n            }\n        ]\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to children example, which is an important aspect of trace.\n\n**Trace Parameter Example**:\n\n```yaml\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    // This is trace parameter\n    // hover to view the type\n    .trace((parameter) => {\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to trace parameter example, which is an important aspect of trace.\n\n**Trace Listener Example**:\n\n```yaml\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(({ onBeforeHandle }) => {\n        // This is trace listener\n        // hover to view the type\n        onBeforeHandle((parameter) => {\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to trace listener example, which is an important aspect of trace.\n\n**Trace End Detail Example**:\n\n```yaml\n```ts\nimport {\nElysia\n} from 'elysia'\n\nconst app = new Elysia()\n    .trace(({ onBeforeHandle, set }) => {\n        onBeforeHandle(({ onStop }) => {\n            onStop(({ elapsed }) => {\n                set.headers['X-Elapsed'] = elapsed.toString()\n            })\n        })\n    })\n    .get('/', () => 'Hi')\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to trace end detail example, which is an important aspect of trace.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Trace in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIt's recommended to mutate context in the onStop function as there's a lock mechanism to ensure the context is mutated successfully before moving on to the next lifecycle event.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/trace", "title": "Trace", "description": "Performance is an important aspect for Elysia. We don't want to be fast for benchmarking purposes, we want you to have a real fast server in real-world scenario. There are many factors that can slow down our app - and it's hard to identify them, but trace can helps solve that problem by injecting start and stop code to each life-cycle.", "has_code_examples": true, "has_best_practices": true, "section_count": 5, "timestamp": "2025-03-01 03:07:46", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "description": "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Trace - ElysiaJS", "title": "Trace - ElysiaJS | ElysiaJS", "og:image:width": "1920", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Trace - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Trace is an API to measure the performance of your server. Allowing us to interact with the duration span of each life-cycle events and measure the performance of each function to identify performance bottlenecks of the server."], "scrapeId": "5314270a-2de6-42ef-aa60-eaa0be222f2e", "sourceURL": "https://elysiajs.com/patterns/trace", "url": "https://elysiajs.com/patterns/trace", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Integration with Nextjs is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Integration with Nextjs in elysiajs.\n\n# Integration with Nextjs\n\nWith Nextjs App Router, we can run Elysia on Nextjs route.Here's a quick rundown of what this is about:\n\n## Integration with Nextjs\n\nWith Nextjs App Router, we can run Elysia on Nextjs route.\n\n1. Create **api/[\\[...slugs\\]\\]/route.ts** inside app router\n2. In **route.ts**, create or import an existing Elysia server\n3. Export the handler with the name of method you want to expose\n\nElysia will work normally as expected because of WinterCG compliance, however, some plugins like **Elysia Static** may not work if you are running Nextjs on Node.\n\nYou can treat the Elysia server as a normal Nextjs API route.\n\nWith this approach, you can have co-location of both frontend and backend in a single repository and have [End-to-end type safety with Eden](https://elysiajs.com/eden/overview.html) with both client-side and server action.\n\nPlease refer to [Nextjs Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers#static-route-handlers) for more information.\n\n## Prefix\n\nBecause our Elysia server is not in the root directory of the app router, you need to annotate the prefix to the Elysia server.\n\nFor example, if you place Elysia server in **app/user/[\\[...slugs\\]\\]/route.ts**, you need to annotate prefix as **/user** to Elysia server.\n\nThis will ensure that Elysia routing will work properly in any location you place it.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/integrations/nextjs", "title": "Integration with Nextjs", "description": "With Nextjs App Router, we can run Elysia on Nextjs route.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:07:59", "type": "overview", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "ogTitle": "Integration with Nextjs - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Integration with Nextjs - ElysiaJS", "description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Nextjs - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "a709cd21-ad56-445e-98d4-d9f0ee948384", "sourceURL": "https://elysiajs.com/integrations/nextjs", "url": "https://elysiajs.com/integrations/nextjs", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I integration with nextjs in elysiajs?\n\nAssistant: To integration with nextjs in elysiajs, here's what you do:\nWith Nextjs App Router, we can run Elysia on Nextjs route.\n\n1. Create **api/[\\[...slugs\\]\\]/route.ts** inside app router\n2. In **route.ts**, create or import an existing Elysia server\n3. Export the handler with the name of method you want to expose\n\nElysia will work normally as expected because of WinterCG compliance, however, some plugins like **Elysia Static** may not work if you are running Nextjs on Node.\n\nYou can treat the Elysia server as a normal Nextjs API route.\n\nWith this approach, you can have co-location of both frontend and backend in a single repository and have [End-to-end type safety with Eden](https://elysiajs.com/eden/overview.html) with both client-side and server action.\n\nPlease refer to [Nextjs Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers#static-route-handlers) for more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/nextjs", "title": "Integration with Nextjs", "description": "With Nextjs App Router, we can run Elysia on Nextjs route.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:07:59", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "ogTitle": "Integration with Nextjs - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Integration with Nextjs - ElysiaJS", "description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Nextjs - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "a709cd21-ad56-445e-98d4-d9f0ee948384", "sourceURL": "https://elysiajs.com/integrations/nextjs", "url": "https://elysiajs.com/integrations/nextjs", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I prefix in elysiajs?\n\nAssistant: To prefix in elysiajs, here's what you do:\nBecause our Elysia server is not in the root directory of the app router, you need to annotate the prefix to the Elysia server.\n\nFor example, if you place Elysia server in **app/user/[\\[...slugs\\]\\]/route.ts**, you need to annotate prefix as **/user** to Elysia server.\n\nThis will ensure that Elysia routing will work properly in any location you place it..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/nextjs", "title": "Integration with Nextjs", "description": "With Nextjs App Router, we can run Elysia on Nextjs route.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:07:59", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "ogTitle": "Integration with Nextjs - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Integration with Nextjs - ElysiaJS", "description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Nextjs - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "a709cd21-ad56-445e-98d4-d9f0ee948384", "sourceURL": "https://elysiajs.com/integrations/nextjs", "url": "https://elysiajs.com/integrations/nextjs", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Integration with Nextjs in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Elysia Server Setup**:\n\n```yaml\n// app/api/[[...slugs]]/route.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia({ prefix: '/api' })\n    .get('/', () => 'hello Next')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nThis snippet shows you how to basic elysia server setup, which is an important aspect of integration with nextjs.\n\n**Elysia Server with Prefix**:\n\n```yaml\n// app/user/[[...slugs]]/route.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia({ prefix: '/user' })\n    .get('/', () => 'hi')\n    .post('/', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n\nexport const GET = app.handle\nexport const POST = app.handle\n```\n\nThis snippet shows you how to elysia server with prefix, which is an important aspect of integration with nextjs.\n\n", "metadata": {"source_url": "https://elysiajs.com/integrations/nextjs", "title": "Integration with Nextjs", "description": "With Nextjs App Router, we can run Elysia on Nextjs route.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:07:59", "type": "code_examples", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "ogTitle": "Integration with Nextjs - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Integration with Nextjs - ElysiaJS", "description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Nextjs - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "a709cd21-ad56-445e-98d4-d9f0ee948384", "sourceURL": "https://elysiajs.com/integrations/nextjs", "url": "https://elysiajs.com/integrations/nextjs", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Integration with Nextjs in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia will work normally as expected because of WinterCG compliance.\n\nSome plugins like Elysia Static may not work if you are running Nextjs on Node.\n\nAnnotate the prefix to the Elysia server based on its location in the app router.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/integrations/nextjs", "title": "Integration with Nextjs", "description": "With Nextjs App Router, we can run Elysia on Nextjs route.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:07:59", "type": "best_practices", "page_metadata": {"og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "ogTitle": "Integration with Nextjs - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Integration with Nextjs - ElysiaJS", "description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Nextjs - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": "With Nextjs App Router, you can run Elysia on Nextjs route. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "a709cd21-ad56-445e-98d4-d9f0ee948384", "sourceURL": "https://elysiajs.com/integrations/nextjs", "url": "https://elysiajs.com/integrations/nextjs", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Quick Start is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Quick Start in elysiajs.\n\n# Quick Start\n\nElysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.Here's a quick rundown of what this is about:\n\n## Bun\n\nElysia is optimized for Bun which is a JavaScript runtime that aims to be a drop-in replacement for Node.js.\n\nYou can install Bun with the command below:\n\nMacOS/Linux\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\nWindows\n\n```bash\npowershell -c \"irm bun.sh/install.ps1 | iex\"\n```\n\n## Auto Installation\n\nWe recommend starting a new Elysia server using `bun create elysia`, which sets up everything automatically.\n\n```bash\nbun create elysia app\n```\n\nOnce done, you should see the folder name `app` in your directory.\n\n```bash\ncd app\n```\n\nStart a development server by:\n\n```bash\nbun dev\n```\n\nNavigate to [localhost:3000](http://localhost:3000/) should greet you with \"Hello Elysia\".\n\nTIP\n\nElysia ships you with `dev` command to automatically reload your server on file change.\n\n## Next Steps\n\nWe recommend checking out the either one of the following:\n\nIf you have any questions, feel free to ask in our [Discord](https://discord.gg/eaFJ2KDJck) community.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/quick-start", "title": "Quick Start", "description": "Elysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:08:12", "type": "overview", "page_metadata": {"ogTitle": "Quick Start - ElysiaJS", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "language": "en-US", "og:title": "Quick Start - ElysiaJS", "og:image:width": "1920", "title": "Quick Start - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "30538c1f-f193-4087-8e52-99e359b867a2", "sourceURL": "https://elysiajs.com/quick-start", "url": "https://elysiajs.com/quick-start", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bun in elysiajs?\n\nAssistant: To bun in elysiajs, here's what you do:\nElysia is optimized for Bun which is a JavaScript runtime that aims to be a drop-in replacement for Node.js.\n\nYou can install Bun with the command below:\n\nMacOS/Linux\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\nWindows\n\n```bash\npowershell -c \"irm bun.sh/install.ps1 | iex\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/quick-start", "title": "Quick Start", "description": "Elysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:08:12", "type": "section_detail", "page_metadata": {"ogTitle": "Quick Start - ElysiaJS", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "language": "en-US", "og:title": "Quick Start - ElysiaJS", "og:image:width": "1920", "title": "Quick Start - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "30538c1f-f193-4087-8e52-99e359b867a2", "sourceURL": "https://elysiajs.com/quick-start", "url": "https://elysiajs.com/quick-start", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I auto installation in elysiajs?\n\nAssistant: To auto installation in elysiajs, here's what you do:\nWe recommend starting a new Elysia server using `bun create elysia`, which sets up everything automatically.\n\n```bash\nbun create elysia app\n```\n\nOnce done, you should see the folder name `app` in your directory.\n\n```bash\ncd app\n```\n\nStart a development server by:\n\n```bash\nbun dev\n```\n\nNavigate to [localhost:3000](http://localhost:3000/) should greet you with \"Hello Elysia\".\n\nTIP\n\nElysia ships you with `dev` command to automatically reload your server on file change..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/quick-start", "title": "Quick Start", "description": "Elysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:08:12", "type": "section_detail", "page_metadata": {"ogTitle": "Quick Start - ElysiaJS", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "language": "en-US", "og:title": "Quick Start - ElysiaJS", "og:image:width": "1920", "title": "Quick Start - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "30538c1f-f193-4087-8e52-99e359b867a2", "sourceURL": "https://elysiajs.com/quick-start", "url": "https://elysiajs.com/quick-start", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I next steps in elysiajs?\n\nAssistant: To next steps in elysiajs, here's what you do:\nWe recommend checking out the either one of the following:\n\nIf you have any questions, feel free to ask in our [Discord](https://discord.gg/eaFJ2KDJck) community..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/quick-start", "title": "Quick Start", "description": "Elysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:08:12", "type": "section_detail", "page_metadata": {"ogTitle": "Quick Start - ElysiaJS", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "language": "en-US", "og:title": "Quick Start - ElysiaJS", "og:image:width": "1920", "title": "Quick Start - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "30538c1f-f193-4087-8e52-99e359b867a2", "sourceURL": "https://elysiajs.com/quick-start", "url": "https://elysiajs.com/quick-start", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Quick Start in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Bun on MacOS/Linux**:\n\n```yaml\ncurl -fsSL https://bun.sh/install | bash\n```\n\nThis snippet shows you how to install bun on macos/linux, which is an important aspect of quick start.\n\n**Install Bun on Windows**:\n\n```yaml\npowershell -c \"irm bun.sh/install.ps1 | iex\"\n```\n\nThis snippet shows you how to install bun on windows, which is an important aspect of quick start.\n\n**Create Elysia App**:\n\n```yaml\nbun create elysia app\n```\n\nThis snippet shows you how to create elysia app, which is an important aspect of quick start.\n\n**Change Directory to App**:\n\n```yaml\ncd app\n```\n\nThis snippet shows you how to change directory to app, which is an important aspect of quick start.\n\n**Start Development Server**:\n\n```yaml\nbun dev\n```\n\nThis snippet shows you how to start development server, which is an important aspect of quick start.\n\n", "metadata": {"source_url": "https://elysiajs.com/quick-start", "title": "Quick Start", "description": "Elysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:08:12", "type": "code_examples", "page_metadata": {"ogTitle": "Quick Start - ElysiaJS", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "language": "en-US", "og:title": "Quick Start - ElysiaJS", "og:image:width": "1920", "title": "Quick Start - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "30538c1f-f193-4087-8e52-99e359b867a2", "sourceURL": "https://elysiajs.com/quick-start", "url": "https://elysiajs.com/quick-start", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Quick Start in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia ships you with `dev` command to automatically reload your server on file change.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/quick-start", "title": "Quick Start", "description": "Elysia is a TypeScript backend framework with multiple runtime support but optimized for Bun.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:08:12", "type": "best_practices", "page_metadata": {"ogTitle": "Quick Start - ElysiaJS", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "language": "en-US", "og:title": "Quick Start - ElysiaJS", "og:image:width": "1920", "title": "Quick Start - ElysiaJS | ElysiaJS", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "og:image:height": "1080", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "30538c1f-f193-4087-8e52-99e359b867a2", "sourceURL": "https://elysiajs.com/quick-start", "url": "https://elysiajs.com/quick-start", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Mount is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Mount in elysiajs.\n\n# Mount\n\nWinterCG is a standard for web-interoperable runtimes. Supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various others, it allows web servers to run interoperably across runtimes that use Web Standard definitions like Fetch, Request, and Response. Elysia is WinterCG compliant. We are optimized to run on Bun but also openly support other runtimes if possible.Here's a quick rundown of what this is about:\n\n## Mount\n\nTo use **.mount**, [simply pass a `fetch` function](https://twitter.com/saltyAom/status/1684786233594290176):\n\n```ts\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n```\n\nA **fetch** function is a function that accepts a Web Standard Request and returns a Web Standard Response with the definition of:\n\n```ts\n// Web Standard Request-like object\n// Web Standard Response\ntype fetch = (request: RequestLike) => Response\n```\n\nBy default, this declaration is used by:\n\n- Bun\n- Deno\n- Vercel Edge Runtime\n- Cloudflare Worker\n- Netlify Edge Function\n- Remix Function Handler\n- etc.\n\nThis allows you to execute all the aforementioned code in a single server environment, making it possible to interact seamlessly with Elysia. You can also reuse existing functions within a single deployment, eliminating the need for a reverse proxy to manage multiple servers.\n\nIf the framework also supports a **.mount** function, you can deeply nest a framework that supports it.\n\n```ts\nimport { Elysia } from 'elysia'\nimport { Hono } from 'hono'\n\nconst elysia = new Elysia()\n    .get('/', () => 'Hello from Elysia inside Hono inside Elysia')\n\nconst hono = new Hono()\n    .get('/', (c) => c.text('Hello from Hono!'))\n    .mount('/elysia', elysia.fetch)\n\nconst main = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n    .listen(3000)\n```\n\n## Reusing Elysia\n\nMoreover, you can re-use multiple existing Elysia projects on your server.\n\n```ts\nimport { Elysia } from 'elysia'\n\nimport A from 'project-a/elysia'\nimport B from 'project-b/elysia'\nimport C from 'project-c/elysia'\n\nnew Elysia()\n    .mount(A)\n    .mount(B)\n    .mount(C)\n```\n\nIf an instance passed to `mount` is an Elysia instance, it will be resolved with `use` automatically, providing type-safety and support for Eden by default.\n\nThis makes the possibility of an interoperable framework and runtime a reality.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/mount", "title": "Mount", "description": "WinterCG is a standard for web-interoperable runtimes. Supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various others, it allows web servers to run interoperably across runtimes that use Web Standard definitions like Fetch, Request, and Response. Elysia is WinterCG compliant. We are optimized to run on Bun but also openly support other runtimes if possible.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:08:32", "type": "overview", "page_metadata": {"ogTitle": "Mount - ElysiaJS", "ogDescription": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "og:title": "Mount - ElysiaJS", "language": "en-US", "og:description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Mount - ElysiaJS | ElysiaJS", "description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "e53f3a29-2d8c-4c51-b48a-cd0f7b871970", "sourceURL": "https://elysiajs.com/patterns/mount", "url": "https://elysiajs.com/patterns/mount", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I mount in elysiajs?\n\nAssistant: To mount in elysiajs, here's what you do:\nTo use **.mount**, [simply pass a `fetch` function](https://twitter.com/saltyAom/status/1684786233594290176):\n\n```ts\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n```\n\nA **fetch** function is a function that accepts a Web Standard Request and returns a Web Standard Response with the definition of:\n\n```ts\n// Web Standard Request-like object\n// Web Standard Response\ntype fetch = (request: RequestLike) => Response\n```\n\nBy default, this declaration is used by:\n\n- Bun\n- Deno\n- Vercel Edge Runtime\n- Cloudflare Worker\n- Netlify Edge Function\n- Remix Function Handler\n- etc.\n\nThis allows you to execute all the aforementioned code in a single server environment, making it possible to interact seamlessly with Elysia. You can also reuse existing functions within a single deployment, eliminating the need for a reverse proxy to manage multiple servers.\n\nIf the framework also supports a **.mount** function, you can deeply nest a framework that supports it.\n\n```ts\nimport { Elysia } from 'elysia'\nimport { Hono } from 'hono'\n\nconst elysia = new Elysia()\n    .get('/', () => 'Hello from Elysia inside Hono inside Elysia')\n\nconst hono = new Hono()\n    .get('/', (c) => c.text('Hello from Hono!'))\n    .mount('/elysia', elysia.fetch)\n\nconst main = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/mount", "title": "Mount", "description": "WinterCG is a standard for web-interoperable runtimes. Supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various others, it allows web servers to run interoperably across runtimes that use Web Standard definitions like Fetch, Request, and Response. Elysia is WinterCG compliant. We are optimized to run on Bun but also openly support other runtimes if possible.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:08:32", "type": "section_detail", "page_metadata": {"ogTitle": "Mount - ElysiaJS", "ogDescription": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "og:title": "Mount - ElysiaJS", "language": "en-US", "og:description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Mount - ElysiaJS | ElysiaJS", "description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "e53f3a29-2d8c-4c51-b48a-cd0f7b871970", "sourceURL": "https://elysiajs.com/patterns/mount", "url": "https://elysiajs.com/patterns/mount", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reusing elysia in elysiajs?\n\nAssistant: To reusing elysia in elysiajs, here's what you do:\nMoreover, you can re-use multiple existing Elysia projects on your server.\n\n```ts\nimport { Elysia } from 'elysia'\n\nimport A from 'project-a/elysia'\nimport B from 'project-b/elysia'\nimport C from 'project-c/elysia'\n\nnew Elysia()\n    .mount(A)\n    .mount(B)\n    .mount(C)\n```\n\nIf an instance passed to `mount` is an Elysia instance, it will be resolved with `use` automatically, providing type-safety and support for Eden by default.\n\nThis makes the possibility of an interoperable framework and runtime a reality..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/mount", "title": "Mount", "description": "WinterCG is a standard for web-interoperable runtimes. Supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various others, it allows web servers to run interoperably across runtimes that use Web Standard definitions like Fetch, Request, and Response. Elysia is WinterCG compliant. We are optimized to run on Bun but also openly support other runtimes if possible.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:08:32", "type": "section_detail", "page_metadata": {"ogTitle": "Mount - ElysiaJS", "ogDescription": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "og:title": "Mount - ElysiaJS", "language": "en-US", "og:description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Mount - ElysiaJS | ElysiaJS", "description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "e53f3a29-2d8c-4c51-b48a-cd0f7b871970", "sourceURL": "https://elysiajs.com/patterns/mount", "url": "https://elysiajs.com/patterns/mount", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Mount in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Using .mount with Elysia**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n```\n\nThis snippet shows you how to using .mount with elysia, which is an important aspect of mount.\n\n**Fetch function definition**:\n\n```yaml\n// Web Standard Request-like object\n// Web Standard Response\ntype fetch = (request: RequestLike) => Response\n```\n\nThis snippet shows you how to fetch function definition, which is an important aspect of mount.\n\n**Nesting frameworks with .mount**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { Hono } from 'hono'\n\nconst elysia = new Elysia()\n    .get('/', () => 'Hello from Elysia inside Hono inside Elysia')\n\nconst hono = new Hono()\n    .get('/', (c) => c.text('Hello from Hono!'))\n    .mount('/elysia', elysia.fetch)\n\nconst main = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n    .listen(3000)\n```\n\nThis snippet shows you how to nesting frameworks with .mount, which is an important aspect of mount.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/mount", "title": "Mount", "description": "WinterCG is a standard for web-interoperable runtimes. Supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various others, it allows web servers to run interoperably across runtimes that use Web Standard definitions like Fetch, Request, and Response. Elysia is WinterCG compliant. We are optimized to run on Bun but also openly support other runtimes if possible.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:08:32", "type": "code_examples", "page_metadata": {"ogTitle": "Mount - ElysiaJS", "ogDescription": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "og:title": "Mount - ElysiaJS", "language": "en-US", "og:description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Mount - ElysiaJS | ElysiaJS", "description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "e53f3a29-2d8c-4c51-b48a-cd0f7b871970", "sourceURL": "https://elysiajs.com/patterns/mount", "url": "https://elysiajs.com/patterns/mount", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Mount in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nYou can reuse existing functions within a single deployment, eliminating the need for a reverse proxy to manage multiple servers.\n\nIf the framework also supports a .mount function, you can deeply nest a framework that supports it.\n\nIf an instance passed to mount is an Elysia instance, it will be resolved with use automatically, providing type-safety and support for Eden by default.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/mount", "title": "Mount", "description": "WinterCG is a standard for web-interoperable runtimes. Supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various others, it allows web servers to run interoperably across runtimes that use Web Standard definitions like Fetch, Request, and Response. Elysia is WinterCG compliant. We are optimized to run on Bun but also openly support other runtimes if possible.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:08:32", "type": "best_practices", "page_metadata": {"ogTitle": "Mount - ElysiaJS", "ogDescription": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "og:title": "Mount - ElysiaJS", "language": "en-US", "og:description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "Mount - ElysiaJS | ElysiaJS", "description": "Applying WinterCG interplopable code to run with Elysia or vice-versa.", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "e53f3a29-2d8c-4c51-b48a-cd0f7b871970", "sourceURL": "https://elysiajs.com/patterns/mount", "url": "https://elysiajs.com/patterns/mount", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Static Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Static Plugin in elysiajs.\n\n# Static Plugin\n\nThis plugin can serve static files/folders for Elysia ServerHere's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/static\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nstaticPlugin } from '@elysiajs/static'\n\nnew\nElysia()\n    .\nuse(\nstaticPlugin())\n    .\nlisten(3000)\n```\n\n## Default Behavior\n\nBy default, the static plugin default folder is `public`, and registered with `/public` prefix.\n\nSuppose your project structure is:\n\n```\n| - src\n  | - index.ts\n| - public\n  | - takodachi.png\n  | - nested\n    | - takodachi.png\n```\n\nThe available path will become:\n\n- /public/takodachi.png\n- /public/nested/takodachi.png\n\n## Config\n\nBelow is a config which is accepted by the plugin\n\n## Configuration Options\n\n### assets\n@default `\"public\"`\n\nPath to the folder to expose as static\n\n### prefix\n@default `\"/public\"`\n\nPath prefix to register public files\n\n### ignorePatterns\n@default `[]`\n\nList of files to ignore from serving as static files\n\n### staticLimit\n@default `1024`\n\nBy default, the static plugin will register paths to the Router with a static name, if the limits are exceeded, paths will be lazily added to the Router to reduce memory usage. Tradeoff memory with performance.\n\n### alwaysStatic\n@default `false`\n\nIf set to true, static files path will be registered to Router skipping the `staticLimits`.\n\n### headers\n@default `{}`\n\nSet response headers of files\n\n### indexHTML\n@default `false`\n\nIf set to true, the `index.html` file from the static directory will be served for any request that is matching neither a route nor any existing static file.\n\n## Pattern\n\nBelow you can find the common patterns to use the plugin.\n\n## Single File\n\nSuppose you want to return just a single file, you can use `file` instead of using the static plugin\ntypescript\n\n```\nimport {\nElysia,\nfile } from 'elysia'\n\nnew\nElysia()\n    .\nget('/file',\nfile('public/takodachi.png'))\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/static\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nstaticPlugin } from '@elysiajs/static'\n\nnew\nElysia()\n    .\nuse(\nstaticPlugin())\n    .\nlisten(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I default behavior in elysiajs?\n\nAssistant: To default behavior in elysiajs, here's what you do:\nBy default, the static plugin default folder is `public`, and registered with `/public` prefix.\n\nSuppose your project structure is:\n\n```\n| - src\n  | - index.ts\n| - public\n  | - takodachi.png\n  | - nested\n    | - takodachi.png\n```\n\nThe available path will become:\n\n- /public/takodachi.png\n- /public/nested/takodachi.png.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nBelow is a config which is accepted by the plugin.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I configuration options in elysiajs?\n\nAssistant: To configuration options in elysiajs, here's what you do:\n### assets\n@default `\"public\"`\n\nPath to the folder to expose as static\n\n### prefix\n@default `\"/public\"`\n\nPath prefix to register public files\n\n### ignorePatterns\n@default `[]`\n\nList of files to ignore from serving as static files\n\n### staticLimit\n@default `1024`\n\nBy default, the static plugin will register paths to the Router with a static name, if the limits are exceeded, paths will be lazily added to the Router to reduce memory usage. Tradeoff memory with performance.\n\n### alwaysStatic\n@default `false`\n\nIf set to true, static files path will be registered to Router skipping the `staticLimits`.\n\n### headers\n@default `{}`\n\nSet response headers of files\n\n### indexHTML\n@default `false`\n\nIf set to true, the `index.html` file from the static directory will be served for any request that is matching neither a route nor any existing static file..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I pattern in elysiajs?\n\nAssistant: To pattern in elysiajs, here's what you do:\nBelow you can find the common patterns to use the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I single file in elysiajs?\n\nAssistant: To single file in elysiajs, here's what you do:\nSuppose you want to return just a single file, you can use `file` instead of using the static plugin\ntypescript\n\n```\nimport {\nElysia,\nfile } from 'elysia'\n\nnew\nElysia()\n    .\nget('/file',\nfile('public/takodachi.png'))\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Static Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/static\n```\n\nThis snippet shows you how to installation command, which is an important aspect of static plugin.\n\n**Basic Usage Example**:\n\n```yaml\nimport {\nElysia } from 'elysia'\nimport {\nstaticPlugin } from '@elysiajs/static'\n\nnew\nElysia()\n    .\nuse(\nstaticPlugin())\n    .\nlisten(3000)\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of static plugin.\n\n**Single File Example**:\n\n```yaml\nimport {\nElysia,\nfile } from 'elysia'\n\nnew\nElysia()\n    .\nget('/file',\nfile('public/takodachi.png'))\n```\n\nThis snippet shows you how to single file example, which is an important aspect of static plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Static Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nBy default, the static plugin serves files from the 'public' directory.\n\nUse the 'file' method for serving a single file instead of the static plugin.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/static", "title": "Static Plugin", "description": "This plugin can serve static files/folders for Elysia Server", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:08:43", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\"."], "title": "Static Plugin - ElysiaJS | ElysiaJS", "description": "Plugin for Elysia that adds support for serving static files/folders for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/static\".", "og:image:height": "1080", "generator": "VitePress v1.6.3", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Static Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Static Plugin - ElysiaJS", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "3be79980-1c69-464c-9f0a-e8211801be50", "sourceURL": "https://elysiajs.com/plugins/static", "url": "https://elysiajs.com/plugins/static", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what OpenTelemetry is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain OpenTelemetry in elysiajs.\n\n# OpenTelemetry\n\nTo start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.Here's a quick rundown of what this is about:\n\n## OpenTelemetry\n\nElysia OpenTelemetry is will **collect span of any library compatible OpenTelemetry standard**, and will apply parent and child span automatically.\n\nIn the code above, we apply `Prisma` to trace how long each query took.\n\nBy applying OpenTelemetry, Elysia will then:\n\n- collect telemetry data\n- Grouping relevant lifecycle together\n- Measure how long each function took\n- Instrument HTTP request and response\n- Collect error and exception\n\nYou may export telemetry data to Jaeger, Zipkin, New Relic, Axiom or any other OpenTelemetry compatible backend.\n\n## OpenTelemetry SDK\n\nElysia OpenTelemetry is for applying OpenTelemetry to Elysia server only.\n\nYou may use OpenTelemetry SDK normally, and the span is run under Elysia's request span, it will be automatically appear in Elysia trace.\n\nHowever, we also provide a `getTracer`, and `record` utility to collect span from any part of your application.\n\n## Record utility\n\n`record` is an equivalent to OpenTelemetry's `startActiveSpan` but it will handle auto-closing and capture exception automatically.\n\nYou may think of `record` as a label for your code that will be shown in trace.\n\n## Prepare your codebase for observability\n\nElysia OpenTelemetry will group lifecycle and read the **function name** of each hook as the name of the span.\n\nIt's a good time to **name your function**.\n\nIf your hook handler is an arrow function, you may refactor it to named function to understand the trace better, otherwise your trace span will be named as `anonymous`.\n\n## getCurrentSpan\n\n`getCurrentSpan` is a utility to get the current span of the current request when you are outside of the handler.\n\n## setAttribute\n\n`setAttribute` is a utility to set attribute to the current span.\n\n## Configuration\n\nSee [opentelemetry plugin](https://elysiajs.com/plugins/opentelemetry.html) for configuration option and definition.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "overview", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I opentelemetry in elysiajs?\n\nAssistant: To opentelemetry in elysiajs, here's what you do:\nElysia OpenTelemetry is will **collect span of any library compatible OpenTelemetry standard**, and will apply parent and child span automatically.\n\nIn the code above, we apply `Prisma` to trace how long each query took.\n\nBy applying OpenTelemetry, Elysia will then:\n\n- collect telemetry data\n- Grouping relevant lifecycle together\n- Measure how long each function took\n- Instrument HTTP request and response\n- Collect error and exception\n\nYou may export telemetry data to Jaeger, Zipkin, New Relic, Axiom or any other OpenTelemetry compatible backend..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I opentelemetry sdk in elysiajs?\n\nAssistant: To opentelemetry sdk in elysiajs, here's what you do:\nElysia OpenTelemetry is for applying OpenTelemetry to Elysia server only.\n\nYou may use OpenTelemetry SDK normally, and the span is run under Elysia's request span, it will be automatically appear in Elysia trace.\n\nHowever, we also provide a `getTracer`, and `record` utility to collect span from any part of your application..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I record utility in elysiajs?\n\nAssistant: To record utility in elysiajs, here's what you do:\n`record` is an equivalent to OpenTelemetry's `startActiveSpan` but it will handle auto-closing and capture exception automatically.\n\nYou may think of `record` as a label for your code that will be shown in trace..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I prepare your codebase for observability in elysiajs?\n\nAssistant: To prepare your codebase for observability in elysiajs, here's what you do:\nElysia OpenTelemetry will group lifecycle and read the **function name** of each hook as the name of the span.\n\nIt's a good time to **name your function**.\n\nIf your hook handler is an arrow function, you may refactor it to named function to understand the trace better, otherwise your trace span will be named as `anonymous`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I getcurrentspan in elysiajs?\n\nAssistant: To getcurrentspan in elysiajs, here's what you do:\n`getCurrentSpan` is a utility to get the current span of the current request when you are outside of the handler..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I setattribute in elysiajs?\n\nAssistant: To setattribute in elysiajs, here's what you do:\n`setAttribute` is a utility to set attribute to the current span..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I configuration in elysiajs?\n\nAssistant: To configuration in elysiajs, here's what you do:\nSee [opentelemetry plugin](https://elysiajs.com/plugins/opentelemetry.html) for configuration option and definition..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for OpenTelemetry in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic OpenTelemetry Setup**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { opentelemetry } from '@elysiajs/opentelemetry'\n\nimport { BatchSpanProcessor } from '@opentelemetry/sdk-trace-node'\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-proto'\n\nnew Elysia()\n\t.use(\n\t\topentelemetry({\n\t\t\tspanProcessors: [\n\t\t\t\tnew BatchSpanProcessor(\n\t\t\t\t\tnew OTLPTraceExporter()\n\t\t\t\t)\n\t\t\t]\n\t\t})\n\t)\n\n```\n\nThis snippet shows you how to basic opentelemetry setup, which is an important aspect of opentelemetry.\n\n**Exporting Telemetry to Axiom**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { opentelemetry } from '@elysiajs/opentelemetry'\n\nimport { BatchSpanProcessor } from '@opentelemetry/sdk-trace-node'\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-proto'\n\nnew Elysia()\n\t.use(\n\t\topentelemetry({\n\t\t\tspanProcessors: [\n\t\t\t\tnew BatchSpanProcessor(\n\t\t\t\t\tnew OTLPTraceExporter({\n\t\t\t\t\t\turl: 'https://api.axiom.co/v1/traces',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t    Authorization: `Bearer ${Bun.env.AXIOM_TOKEN}`,\n\t\t\t\t\t\t    'X-Axiom-Dataset': Bun.env.AXIOM_DATASET\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t]\n\t\t})\n\t)\n\n```\n\nThis snippet shows you how to exporting telemetry to axiom, which is an important aspect of opentelemetry.\n\n**Using Record Utility**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { record } from '@elysiajs/opentelemetry'\n\nexport const plugin = new Elysia()\n\t.get('', () => {\n\t\treturn record('database.query', () => {\n\t\t\treturn db.query('SELECT * FROM users')\n\t\t})\n\t})\n\n```\n\nThis snippet shows you how to using record utility, which is an important aspect of opentelemetry.\n\n**Get Current Span Example**:\n\n```yaml\nimport { getCurrentSpan } from '@elysiajs/opentelemetry'\n\nfunction utility() {\n\tconst span = getCurrentSpan()\n\tspan.setAttributes({\n\t\t'custom.attribute': 'value'\n\t})\n} \n\n```\n\nThis snippet shows you how to get current span example, which is an important aspect of opentelemetry.\n\n**Set Attribute Example**:\n\n```yaml\nimport { setAttribute } from '@elysiajs/opentelemetry'\n\nfunction utility() {\n\tsetAttribute('custom.attribute', 'value')\n} \n\n```\n\nThis snippet shows you how to set attribute example, which is an important aspect of opentelemetry.\n\n**Naming Functions for Tracing**:\n\n```yaml\nconst bad = new Elysia()\n\t// ⚠️ span name will be anonymous\n\t.derive(async ({ cookie: { session } }) => {\n\t\treturn {\n\t\t\tuser: await getProfile(session)\n\t\t}\n\t})\n\nconst good = new Elysia()\n\t// ✅ span name will be getProfile\n\t.derive(async function getProfile({ cookie: { session } }) {\n\t\treturn {\n\t\t\tuser: await getProfile(session)\n\t\t}\n\t})\n\n```\n\nThis snippet shows you how to naming functions for tracing, which is an important aspect of opentelemetry.\n\n", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "code_examples", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using OpenTelemetry in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nName your functions to improve trace readability.\n\nUse the `record` utility for automatic span management.\n\nEnsure to export telemetry data to compatible backends.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/recipe/opentelemetry", "title": "OpenTelemetry", "description": "To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:09:01", "type": "best_practices", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with \"bun add @elysiajs/opentelemetry\"."], "title": "OpenTelemetry Plugin - ElysiaJS | ElysiaJS", "language": "en-US", "description": "Plugin for Elysia that adds support for OpenTelemetry. Start by installing the plugin with ", "og:title": "OpenTelemetry Plugin - ElysiaJS", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "OpenTelemetry Plugin - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "scrapeId": "11a6113c-8bff-4244-9a4e-adae2187538c", "sourceURL": "https://elysiajs.com/recipe/opentelemetry", "url": "https://elysiajs.com/recipe/opentelemetry", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Swagger Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Swagger Plugin in elysiajs.\n\n# Swagger Plugin\n\nThis plugin generates a Swagger endpoint for an Elysia serverHere's a quick rundown of what this is about:\n\n## Install\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/swagger\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\nswagger())\n    .\nget('/', () => 'hi')\n    .\npost('/hello', () => 'world')\n    .\nlisten(3000)\n```\n\nAccessing `/swagger` would show you a Scalar UI with the generated endpoint documentation from the Elysia server. You can also access the raw OpenAPI spec at `/swagger/json`.\n\n## Config\n\nBelow is a config which is accepted by the plugin\n\n### provider\n@default `scalar`\n\nUI Provider for documentation. Default to Scalar.\n\n### scalar\nConfiguration for customizing Scalar.\n\nPlease refer to the [Scalar config](https://github.com/scalar/scalar/blob/main/documentation/configuration.md)\n\n### swagger\nConfiguration for customizing Swagger.\n\nPlease refer to the [Swagger specification](https://swagger.io/specification/v2/).\n\n### excludeStaticFile\n@default `true`\n\nDetermine if Swagger should exclude static files.\n\n### path\n@default `/swagger`\n\nEndpoint to expose Swagger.\n\n### exclude\nPaths to exclude from Swagger documentation.\n\nValue can be one of the following:\n\n- **string**\n- **RegExp**\n- **Array<string | RegExp>**\n\n## Pattern\n\nBelow you can find the common patterns to use the plugin.\n\n## Change Swagger Endpoint\n\nYou can change the swagger endpoint by setting [path](https://elysiajs.com/plugins/swagger#path) in the plugin config.\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\n\nswagger({\npath: '/v2/swagger'\n        })\n    )\n    .\nlisten(3000)\n```\n\n\n## Customize Swagger info\n\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\n\nswagger({\n\ndocumentation: {\n\ninfo: {\n\ntitle: 'Elysia Documentation',\n\nversion: '1.0.0'\n                }\n            }\n        })\n    )\n    .\nlisten(3000)\n```\n\n\n## Using Tags\n\nElysia can separate the endpoints into groups by using the Swaggers tag system\n\nFirstly define the available tags in the swagger config object\ntypescript\n\n```\napp.use(\n    swagger({\n        documentation: {\n            tags: [\\\n                { name: 'App', description: 'General endpoints' },\\\n                { name: 'Auth', description: 'Authentication endpoints' }\\\n            ]\n        }\n    })\n)\n```\n\nThen use the details property of the endpoint configuration section to assign that endpoint to the group\ntypescript\n\n```\napp.get('/', () => 'Hello Elysia', {\n    detail: {\n        tags: ['App']\n    }\n})\n\napp.group('/auth', (app) =>\n    app.post(\n        '/sign-up',\n        async ({ body }) =>\n            db.user.create({\n                data: body,\n                select: {\n                    id: true,\n                    username: true\n                }\n            }),\n        {\n            detail: {\n                tags: ['Auth']\n            }\n        }\n    )\n)\n```\n\nWhich will produce a swagger page like the following ![image](https://elysiajs.com/assets/swagger-demo.webp)\n\n## Security Configuration\n\nTo secure your API endpoints, you can define security schemes in the Swagger configuration. The example below demonstrates how to use Bearer Authentication (JWT) to protect your endpoints:\ntypescript\n\n```\napp.use(\n    swagger({\n        documentation: {\n            components: {\n                securitySchemes: {\n                    bearerAuth: {\n                        type: 'http',\n                        scheme: 'bearer',\n                        bearerFormat: 'JWT'\n                    }\n                }\n            }\n        }\n    })\n)\n\nexport const addressController = new Elysia({\n    prefix: '/address',\n    detail: {\n        tags: ['Address'],\n        security: [\\\n            {\\\n                bearerAuth: []\\\n            }\\\n        ]\n    }\n})\n```\n\nThis configuration ensures that all endpoints under the `/address` prefix require a valid JWT token for access.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "overview", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I install in elysiajs?\n\nAssistant: To install in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/swagger\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\nswagger())\n    .\nget('/', () => 'hi')\n    .\npost('/hello', () => 'world')\n    .\nlisten(3000)\n```\n\nAccessing `/swagger` would show you a Scalar UI with the generated endpoint documentation from the Elysia server. You can also access the raw OpenAPI spec at `/swagger/json`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nBelow is a config which is accepted by the plugin\n\n### provider\n@default `scalar`\n\nUI Provider for documentation. Default to Scalar.\n\n### scalar\nConfiguration for customizing Scalar.\n\nPlease refer to the [Scalar config](https://github.com/scalar/scalar/blob/main/documentation/configuration.md)\n\n### swagger\nConfiguration for customizing Swagger.\n\nPlease refer to the [Swagger specification](https://swagger.io/specification/v2/).\n\n### excludeStaticFile\n@default `true`\n\nDetermine if Swagger should exclude static files.\n\n### path\n@default `/swagger`\n\nEndpoint to expose Swagger.\n\n### exclude\nPaths to exclude from Swagger documentation.\n\nValue can be one of the following:\n\n- **string**\n- **RegExp**\n- **Array<string | RegExp>**.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I pattern in elysiajs?\n\nAssistant: To pattern in elysiajs, here's what you do:\nBelow you can find the common patterns to use the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I change swagger endpoint in elysiajs?\n\nAssistant: To change swagger endpoint in elysiajs, here's what you do:\nYou can change the swagger endpoint by setting [path](https://elysiajs.com/plugins/swagger#path) in the plugin config.\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\n\nswagger({\npath: '/v2/swagger'\n        })\n    )\n    .\nlisten(3000)\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I customize swagger info in elysiajs?\n\nAssistant: To customize swagger info in elysiajs, here's what you do:\ntypescript\n\n```\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\n\nswagger({\n\ndocumentation: {\n\ninfo: {\n\ntitle: 'Elysia Documentation',\n\nversion: '1.0.0'\n                }\n            }\n        })\n    )\n    .\nlisten(3000)\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I using tags in elysiajs?\n\nAssistant: To using tags in elysiajs, here's what you do:\nElysia can separate the endpoints into groups by using the Swaggers tag system\n\nFirstly define the available tags in the swagger config object\ntypescript\n\n```\napp.use(\n    swagger({\n        documentation: {\n            tags: [\\\n                { name: 'App', description: 'General endpoints' },\\\n                { name: 'Auth', description: 'Authentication endpoints' }\\\n            ]\n        }\n    })\n)\n```\n\nThen use the details property of the endpoint configuration section to assign that endpoint to the group\ntypescript\n\n```\napp.get('/', () => 'Hello Elysia', {\n    detail: {\n        tags: ['App']\n    }\n})\n\napp.group('/auth', (app) =>\n    app.post(\n        '/sign-up',\n        async ({ body }) =>\n            db.user.create({\n                data: body,\n                select: {\n                    id: true,\n                    username: true\n                }\n            }),\n        {\n            detail: {\n                tags: ['Auth']\n            }\n        }\n    )\n)\n```\n\nWhich will produce a swagger page like the following ![image](https://elysiajs.com/assets/swagger-demo.webp).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I security configuration in elysiajs?\n\nAssistant: To security configuration in elysiajs, here's what you do:\nTo secure your API endpoints, you can define security schemes in the Swagger configuration. The example below demonstrates how to use Bearer Authentication (JWT) to protect your endpoints:\ntypescript\n\n```\napp.use(\n    swagger({\n        documentation: {\n            components: {\n                securitySchemes: {\n                    bearerAuth: {\n                        type: 'http',\n                        scheme: 'bearer',\n                        bearerFormat: 'JWT'\n                    }\n                }\n            }\n        }\n    })\n)\n\nexport const addressController = new Elysia({\n    prefix: '/address',\n    detail: {\n        tags: ['Address'],\n        security: [\\\n            {\\\n                bearerAuth: []\\\n            }\\\n        ]\n    }\n})\n```\n\nThis configuration ensures that all endpoints under the `/address` prefix require a valid JWT token for access..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "section_detail", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Swagger Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Install Swagger Plugin**:\n\n```yaml\nbun add @elysiajs/swagger\n```\n\nThis snippet shows you how to install swagger plugin, which is an important aspect of swagger plugin.\n\n**Basic Usage of Swagger Plugin**:\n\n```yaml\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\nswagger())\n    .\nget('/', () => 'hi')\n    .\npost('/hello', () => 'world')\n    .\nlisten(3000)\n```\n\nThis snippet shows you how to basic usage of swagger plugin, which is an important aspect of swagger plugin.\n\n**Change Swagger Endpoint**:\n\n```yaml\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\n\nswagger({\npath: '/v2/swagger'\n        })\n    )\n    .\nlisten(3000)\n```\n\nThis snippet shows you how to change swagger endpoint, which is an important aspect of swagger plugin.\n\n**Customize Swagger Info**:\n\n```yaml\nimport {\nElysia } from 'elysia'\nimport {\nswagger } from '@elysiajs/swagger'\n\nnew\nElysia()\n    .\nuse(\n\nswagger({\n\ndocumentation: {\n\ninfo: {\n\ntitle: 'Elysia Documentation',\n\nversion: '1.0.0'\n                }\n            }\n        })\n    )\n    .\nlisten(3000)\n```\n\nThis snippet shows you how to customize swagger info, which is an important aspect of swagger plugin.\n\n**Using Tags in Swagger**:\n\n```yaml\napp.use(\n    swagger({\n        documentation: {\n            tags: [\\\n                { name: 'App', description: 'General endpoints' },\\\n                { name: 'Auth', description: 'Authentication endpoints' }\\\n            ]\n        }\n    })\n)\n\napp.get('/', () => 'Hello Elysia', {\n    detail: {\n        tags: ['App']\n    }\n})\n\napp.group('/auth', (app) =>\n    app.post(\n        '/sign-up',\n        async ({ body }) =>\n            db.user.create({\n                data: body,\n                select: {\n                    id: true,\n                    username: true\n                }\n            }),\n        {\n            detail: {\n                tags: ['Auth']\n            }\n        }\n    )\n)\n\n```\n\nThis snippet shows you how to using tags in swagger, which is an important aspect of swagger plugin.\n\n**Security Configuration Example**:\n\n```yaml\napp.use(\n    swagger({\n        documentation: {\n            components: {\n                securitySchemes: {\n                    bearerAuth: {\n                        type: 'http',\n                        scheme: 'bearer',\n                        bearerFormat: 'JWT'\n                    }\n                }\n            }\n        }\n    })\n)\n\nexport const addressController = new Elysia({\n    prefix: '/address',\n    detail: {\n        tags: ['Address'],\n        security: [\\\n            {\\\n                bearerAuth: []\\\n            }\\\n        ]\n    }\n})\n```\n\nThis snippet shows you how to security configuration example, which is an important aspect of swagger plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "code_examples", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Swagger Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRefer to the Scalar config for customizing Scalar.\n\nRefer to the Swagger specification for customizing Swagger.\n\nEnsure to define security schemes in the Swagger configuration for securing API endpoints.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/swagger", "title": "Swagger Plugin", "description": "This plugin generates a Swagger endpoint for an Elysia server", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:09:29", "type": "best_practices", "page_metadata": {"ogTitle": "Swagger Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:title": "Swagger Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\".", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for generating Swagger API documentation for Elysia Server. Start by installing the plugin with \"bun add @elysiajs/swagger\"."], "language": "en-US", "og:image:height": "1080", "title": "Swagger Plugin - ElysiaJS | ElysiaJS", "scrapeId": "10a5c2c7-7669-4f7e-96ce-c6ffe946b031", "sourceURL": "https://elysiajs.com/plugins/swagger", "url": "https://elysiajs.com/plugins/swagger", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Drizzle is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Drizzle in elysiajs.\n\n# Drizzle\n\nDrizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.Here's a quick rundown of what this is about:\n\n## Drizzle Typebox\n\nElysia.t is a fork of TypeBox, allowing us to use any TypeBox type in Elysia directly.\n\nWe can convert Drizzle schema into TypeBox schema using \"drizzle-typebox\", and use it directly on Elysia's schema validation.\n\n## Here's how it works:\n\n1. Define your database schema in Drizzle.\n2. Convert Drizzle schema into Elysia validation models using drizzle-typebox.\n3. Use the converted Elysia validation models to ensure type validation.\n4. OpenAPI schema is generated from Elysia validation models.\n5. Add Eden Treaty to add type-safety to your frontend.\n\n## Installation\n\nTo install Drizzle, run the following command:\n\n```bash\nbun add drizzle-orm drizzle-typebox\n```\n\nThen you need to pin `@sinclair/typebox` as there might be a mismatch version between `drizzle-typebox` and `Elysia`, this may cause conflict of Symbols between two versions.\n\nWe recommend pinning the version of `@sinclair/typebox` to the **minimum version** used by `elysia` by using:\n\n```bash\ngrep \"@sinclair/typebox\" node_modules/elysia/package.json\n```\n\nWe may use `override` field in `package.json` to pin the version of `@sinclair/typebox`:\n\n```json\n{\n  \"override\": {\n   \"@sinclair/typebox\": \"0.32.4\"\n  }\n}\n```\n\n## Drizzle schema\n\nAssuming we have a `user` table in our codebase as follows:\n\n```ts\nimport { relations } from 'drizzle-orm'\nimport {\n    pgTable,\n    varchar,\n    timestamp\n} from 'drizzle-orm/pg-core'\n\nimport { createId } from '@paralleldrive/cuid2'\n\nexport const user = pgTable(\n    'user',\n    {\n        id: varchar('id')\n            .$defaultFn(() => createId())\n            .primaryKey(),\n        username: varchar('username').notNull().unique(),\n        password: varchar('password').notNull(),\n        email: varchar('email').notNull().unique(),\n        salt: varchar('salt', { length: 64 }).notNull(),\n        createdAt: timestamp('created_at').defaultNow().notNull(),\n    }\n)\n\nexport const table = {\n\tuser\n} as const\n\nexport type Table = typeof table\n```\n\n## drizzle-typebox\n\nWe may convert the `user` table into TypeBox models by using `drizzle-typebox`:\n\n```ts\nimport { createInsertSchema } from 'drizzle-typebox'\nimport { table } from './database/schema'\n\nconst _createUser = createInsertSchema(table.user, {\n\t// Replace email with Elysia's email type\n\temail: t.String({ format: 'email' })\n})\n\nnew Elysia()\n\t.post('/sign-up', ({ body }) => {\n\t\t// Create a new user\n\t}, {\n\t\tbody: t.Omit(\n\t\t\t_createUser,\n\t\t\t['id', 'salt', 'createdAt']\n\t\t)\n\t})\n```\n\n## Type instantiation is possibly infinite\n\nIf you got an error like **Type instantiation is possibly infinite** this is because of the circular reference between `drizzle-typebox` and `Elysia`.\n\nIf we nested a type from drizzle-typebox into Elysia schema, it will cause an infinite loop of type instantiation.\n\nTo prevent this, we need to **explicitly define a type between `drizzle-typebox` and `Elysia`** schema:\n\n```ts\nimport { t } from 'elysia'\nimport { createInsertSchema } from 'drizzle-typebox'\n\nimport { table } from './database/schema'\n\nconst _createUser = createInsertSchema(table.user, {\n\temail: t.String({ format: 'email' })\n})\n\n// ✅ This works, by referencing the type from `drizzle-typebox`\nconst createUser = t.Omit(\n\t_createUser,\n\t['id', 'salt', 'createdAt']\n)\n\n// ❌ This will cause an infinite loop of type instantiation\nconst createUser = t.Omit(\n\tcreateInsertSchema(table.user, {\n\t\temail: t.String({ format: 'email' })\n\t}),\n\t['id', 'salt', 'createdAt']\n)\n```\n\nAlways declare a variable for `drizzle-typebox` and reference it if you want to use Elysia type\n\n## Utility\n\nAs we are likely going to use `t.Pick` and `t.Omit` to exclude or include certain fields, it may be cumbersome to repeat the process:\n\nWe recommend using these utility functions **(copy as-is)** to simplify the process:\n\n```ts\n/**\n * @lastModified 2025-02-04\n * @see https://elysiajs.com/recipe/drizzle.html#utility\n */\n\nimport { Kind, type TObject } from '@sinclair/typebox'\nimport {\n    createInsertSchema,\n    createSelectSchema,\n    BuildSchema,\n} from 'drizzle-typebox'\n\nimport { table } from './schema'\nimport type { Table } from 'drizzle-orm'\n\ntype Spread<\n    T extends TObject | Table,\n    Mode extends 'select' | 'insert' | undefined,\n> =\n    T extends TObject<infer Fields>\n        ? {\n              [K in keyof Fields]: Fields[K]\n          }\n        : T extends Table\n          ? Mode extends 'select'\n              ? BuildSchema<\n                    'select',\n                    T['_']['columns'],\n                    undefined\n                >['properties']\n              : Mode extends 'insert'\n                ? BuildSchema<\n                      'insert',\n                      T['_']['columns'],\n                      undefined\n                  >['properties']\n                : {}\n          : {}\n\n/**\n * Spread a Drizzle schema into a plain object\n */\nexport const spread = <\n    T extends TObject | Table,\n    Mode extends 'select' | 'insert' | undefined,\n>(\n    schema: T,\n    mode?: Mode,\n): Spread<T, Mode> => {\n    const newSchema: Record<string, unknown> = {}\n    let table\n\n    switch (mode) {\n        case 'insert':\n        case 'select':\n            if (Kind in schema) {\n                table = schema\n                break\n            }\n\n            table =\n                mode === 'insert'\n                    ? createInsertSchema(schema)\n                    : createSelectSchema(schema)\n\n            break\n\n        default:\n            if (!(Kind in schema)) throw new Error('Expect a schema')\n            table = schema\n    }\n\n    for (const key of Object.keys(table.properties))\n        newSchema[key] = table.properties[key]\n\n    return newSchema as any\n}\n\nconst a = spread(table.user, 'insert')\n\n/**\n * Spread a Drizzle Table into a plain object\n *\n * If `mode` is 'insert', the schema will be refined for insert\n * If `mode` is 'select', the schema will be refined for select\n * If `mode` is undefined, the schema will be spread as is, models will need to be refined manually\n */\nexport const spreads = <\n    T extends Record<string, TObject | Table>,\n    Mode extends 'select' | 'insert' | undefined,\n>(\n    models: T,\n    mode?: Mode,\n): {\n    [K in keyof T]: Spread<T[K], Mode>\n} => {\n    const newSchema: Record<string, unknown> = {}\n    const keys = Object.keys(models)\n\n    for (const key of keys) newSchema[key] = spread(models[key], mode)\n\n    return newSchema as any\n}\n```\n\nThis utility function will convert Drizzle schema into a plain object, which can pick by property name as plain object:\n\n```ts\n// ✅ Using spread utility function\nconst user = spread(table.user, 'insert')\n\nconst createUser = t.Object({\n\tid: user.id, // { type: 'string' }\n\tusername: user.username, // { type: 'string' }\n\tpassword: user.password // { type: 'string' }\n})\n\n// ⚠️ Using t.Pick\nconst _createUser = createInsertSchema(table.user)\n\nconst createUser = t.Pick(\n\t_createUser,\n\t['id', 'username', 'password']\n)\n```\n\n## Table Singleton\n\nWe recommend using a singleton pattern to store the table schema, this will allow us to access the table schema from anywhere in the codebase:\n\n```ts\nimport { table } from './schema'\nimport { spreads } from './utils'\n\nexport const db = {\n\tinsert: spreads({\n\t\tuser: table.user,\n\t}, 'insert'),\n\tselect: spreads({\n\t\tuser: table.user,\n\t}, 'select')\n} as const\n```\n\nThis will allow us to access the table schema from anywhere in the codebase:\n\n```ts\nimport { Elysia } from 'elysia'\nimport { db } from './database/model'\n\nconst { user } = db.insert\n\nnew Elysia()\n\t.post('/sign-up', ({ body }) => {\n\t\t// Create a new user\n\t}, {\n\t\tbody: t.Object({\n\t\t\tid: user.username,\n\t\t\tusername: user.username,\n\t\t\tpassword: user.password\n\t\t})\n\t})\n```\n\n## Refinement\n\nIf type refinement is needed, you may use `createInsertSchema` and `createSelectSchema` to refine the schema directly.\n\n```ts\nimport { t } from 'elysia'\nimport { createInsertSchema, createSelectSchema } from 'drizzle-typebox'\n\nimport { table } from './schema'\nimport { spreads } from './utils'\n\nexport const db = {\n\tinsert: spreads({\n\t\tuser: createInsertSchema(table.user, {\n\t\t\temail: t.String({ format: 'email' })\n\t\t}),\n\t}, 'insert')),\n\tselect: spreads({\n\t\tuser: createSelectSchema(table.user, {\n\t\t\temail: t.String({ format: 'email' })\n\t\t})\n\t}, 'select')\n} as const\n```\n\nIn the code above, we refine a `user.email` schema to include a `format` property\n\nThe `spread` utility function will skip a refined schema, so you can use it as is.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "overview", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I drizzle typebox in elysiajs?\n\nAssistant: To drizzle typebox in elysiajs, here's what you do:\nElysia.t is a fork of TypeBox, allowing us to use any TypeBox type in Elysia directly.\n\nWe can convert Drizzle schema into TypeBox schema using \"drizzle-typebox\", and use it directly on Elysia's schema validation..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I here's how it works: in elysiajs?\n\nAssistant: To here's how it works: in elysiajs, here's what you do:\n1. Define your database schema in Drizzle.\n2. Convert Drizzle schema into Elysia validation models using drizzle-typebox.\n3. Use the converted Elysia validation models to ensure type validation.\n4. OpenAPI schema is generated from Elysia validation models.\n5. Add Eden Treaty to add type-safety to your frontend..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nTo install Drizzle, run the following command:\n\n```bash\nbun add drizzle-orm drizzle-typebox\n```\n\nThen you need to pin `@sinclair/typebox` as there might be a mismatch version between `drizzle-typebox` and `Elysia`, this may cause conflict of Symbols between two versions.\n\nWe recommend pinning the version of `@sinclair/typebox` to the **minimum version** used by `elysia` by using:\n\n```bash\ngrep \"@sinclair/typebox\" node_modules/elysia/package.json\n```\n\nWe may use `override` field in `package.json` to pin the version of `@sinclair/typebox`:\n\n```json\n{\n  \"override\": {\n   \"@sinclair/typebox\": \"0.32.4\"\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I drizzle schema in elysiajs?\n\nAssistant: To drizzle schema in elysiajs, here's what you do:\nAssuming we have a `user` table in our codebase as follows:\n\n```ts\nimport { relations } from 'drizzle-orm'\nimport {\n    pgTable,\n    varchar,\n    timestamp\n} from 'drizzle-orm/pg-core'\n\nimport { createId } from '@paralleldrive/cuid2'\n\nexport const user = pgTable(\n    'user',\n    {\n        id: varchar('id')\n            .$defaultFn(() => createId())\n            .primaryKey(),\n        username: varchar('username').notNull().unique(),\n        password: varchar('password').notNull(),\n        email: varchar('email').notNull().unique(),\n        salt: varchar('salt', { length: 64 }).notNull(),\n        createdAt: timestamp('created_at').defaultNow().notNull(),\n    }\n)\n\nexport const table = {\n\tuser\n} as const\n\nexport type Table = typeof table\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I drizzle-typebox in elysiajs?\n\nAssistant: To drizzle-typebox in elysiajs, here's what you do:\nWe may convert the `user` table into TypeBox models by using `drizzle-typebox`:\n\n```ts\nimport { createInsertSchema } from 'drizzle-typebox'\nimport { table } from './database/schema'\n\nconst _createUser = createInsertSchema(table.user, {\n\t// Replace email with Elysia's email type\n\temail: t.String({ format: 'email' })\n})\n\nnew Elysia()\n\t.post('/sign-up', ({ body }) => {\n\t\t// Create a new user\n\t}, {\n\t\tbody: t.Omit(\n\t\t\t_createUser,\n\t\t\t['id', 'salt', 'createdAt']\n\t\t)\n\t})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type instantiation is possibly infinite in elysiajs?\n\nAssistant: To type instantiation is possibly infinite in elysiajs, here's what you do:\nIf you got an error like **Type instantiation is possibly infinite** this is because of the circular reference between `drizzle-typebox` and `Elysia`.\n\nIf we nested a type from drizzle-typebox into Elysia schema, it will cause an infinite loop of type instantiation.\n\nTo prevent this, we need to **explicitly define a type between `drizzle-typebox` and `Elysia`** schema:\n\n```ts\nimport { t } from 'elysia'\nimport { createInsertSchema } from 'drizzle-typebox'\n\nimport { table } from './database/schema'\n\nconst _createUser = createInsertSchema(table.user, {\n\temail: t.String({ format: 'email' })\n})\n\n// ✅ This works, by referencing the type from `drizzle-typebox`\nconst createUser = t.Omit(\n\t_createUser,\n\t['id', 'salt', 'createdAt']\n)\n\n// ❌ This will cause an infinite loop of type instantiation\nconst createUser = t.Omit(\n\tcreateInsertSchema(table.user, {\n\t\temail: t.String({ format: 'email' })\n\t}),\n\t['id', 'salt', 'createdAt']\n)\n```\n\nAlways declare a variable for `drizzle-typebox` and reference it if you want to use Elysia type.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I utility in elysiajs?\n\nAssistant: To utility in elysiajs, here's what you do:\nAs we are likely going to use `t.Pick` and `t.Omit` to exclude or include certain fields, it may be cumbersome to repeat the process:\n\nWe recommend using these utility functions **(copy as-is)** to simplify the process:\n\n```ts\n/**\n * @lastModified 2025-02-04\n * @see https://elysiajs.com/recipe/drizzle.html#utility\n */\n\nimport { Kind, type TObject } from '@sinclair/typebox'\nimport {\n    createInsertSchema,\n    createSelectSchema,\n    BuildSchema,\n} from 'drizzle-typebox'\n\nimport { table } from './schema'\nimport type { Table } from 'drizzle-orm'\n\ntype Spread<\n    T extends TObject | Table,\n    Mode extends 'select' | 'insert' | undefined,\n> =\n    T extends TObject<infer Fields>\n        ? {\n              [K in keyof Fields]: Fields[K]\n          }\n        : T extends Table\n          ? Mode extends 'select'\n              ? BuildSchema<\n                    'select',\n                    T['_']['columns'],\n                    undefined\n                >['properties']\n              : Mode extends 'insert'\n                ? BuildSchema<\n                      'insert',\n                      T['_']['columns'],\n                      undefined\n                  >['properties']\n                : {}\n          : {}\n\n/**\n * Spread a Drizzle schema into a plain object\n */\nexport const spread = <\n    T extends TObject | Table,\n    Mode extends 'select' | 'insert' | undefined,\n>(\n    schema: T,\n    mode?: Mode,\n): Spread<T, Mode> => {\n    const newSchema: Record<string, unknown> = {}\n    let table\n\n    switch (mode) {\n        case 'insert':\n        case 'select':\n            if (Kind in schema) {\n                table = schema\n                break\n            }\n\n            table =\n                mode === 'insert'\n                    ? createInsertSchema(schema)\n                    : createSelectSchema(schema)\n\n            break\n\n        default:\n            if (!(Kind in schema)) throw new Error('Expect a schema')\n            table = schema\n    }\n\n    for (const key of Object.keys(table.properties))\n        newSchema[key] = table.properties[key]\n\n    return newSchema as any\n}\n\nconst a = spread(table.user, 'insert')\n\n/**\n * Spread a Drizzle Table into a plain object\n *\n * If `mode` is 'insert', the schema will be refined for insert\n * If `mode` is 'select', the schema will be refined for select\n * If `mode` is undefined, the schema will be spread as is, models will need to be refined manually\n */\nexport const spreads = <\n    T extends Record<string, TObject | Table>,\n    Mode extends 'select' | 'insert' | undefined,\n>(\n    models: T,\n    mode?: Mode,\n): {\n    [K in keyof T]: Spread<T[K], Mode>\n} => {\n    const newSchema: Record<string, unknown> = {}\n    const keys = Object.keys(models)\n\n    for (const key of keys) newSchema[key] = spread(models[key], mode)\n\n    return newSchema as any\n}\n```\n\nThis utility function will convert Drizzle schema into a plain object, which can pick by property name as plain object:\n\n```ts\n// ✅ Using spread utility function\nconst user = spread(table.user, 'insert')\n\nconst createUser = t.Object({\n\tid: user.id, // { type: 'string' }\n\tusername: user.username, // { type: 'string' }\n\tpassword: user.password // { type: 'string' }\n})\n\n// ⚠️ Using t.Pick\nconst _createUser = createInsertSchema(table.user)\n\nconst createUser = t.Pick(\n\t_createUser,\n\t['id', 'username', 'password']\n)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I table singleton in elysiajs?\n\nAssistant: To table singleton in elysiajs, here's what you do:\nWe recommend using a singleton pattern to store the table schema, this will allow us to access the table schema from anywhere in the codebase:\n\n```ts\nimport { table } from './schema'\nimport { spreads } from './utils'\n\nexport const db = {\n\tinsert: spreads({\n\t\tuser: table.user,\n\t}, 'insert'),\n\tselect: spreads({\n\t\tuser: table.user,\n\t}, 'select')\n} as const\n```\n\nThis will allow us to access the table schema from anywhere in the codebase:\n\n```ts\nimport { Elysia } from 'elysia'\nimport { db } from './database/model'\n\nconst { user } = db.insert\n\nnew Elysia()\n\t.post('/sign-up', ({ body }) => {\n\t\t// Create a new user\n\t}, {\n\t\tbody: t.Object({\n\t\t\tid: user.username,\n\t\t\tusername: user.username,\n\t\t\tpassword: user.password\n\t\t})\n\t})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I refinement in elysiajs?\n\nAssistant: To refinement in elysiajs, here's what you do:\nIf type refinement is needed, you may use `createInsertSchema` and `createSelectSchema` to refine the schema directly.\n\n```ts\nimport { t } from 'elysia'\nimport { createInsertSchema, createSelectSchema } from 'drizzle-typebox'\n\nimport { table } from './schema'\nimport { spreads } from './utils'\n\nexport const db = {\n\tinsert: spreads({\n\t\tuser: createInsertSchema(table.user, {\n\t\t\temail: t.String({ format: 'email' })\n\t\t}),\n\t}, 'insert')),\n\tselect: spreads({\n\t\tuser: createSelectSchema(table.user, {\n\t\t\temail: t.String({ format: 'email' })\n\t\t})\n\t}, 'select')\n} as const\n```\n\nIn the code above, we refine a `user.email` schema to include a `format` property\n\nThe `spread` utility function will skip a refined schema, so you can use it as is..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "section_detail", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Drizzle in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\n```bash\nbun add drizzle-orm drizzle-typebox\n```\n```\n\nThis snippet shows you how to installation command, which is an important aspect of drizzle.\n\n**Pinning TypeBox Version**:\n\n```yaml\n```bash\ngrep \"@sinclair/typebox\" node_modules/elysia/package.json\n```\n```\n\nThis snippet shows you how to pinning typebox version, which is an important aspect of drizzle.\n\n**Override Field in package.json**:\n\n```yaml\n```json\n{\n  \"override\": {\n   \"@sinclair/typebox\": \"0.32.4\"\n  }\n}\n```\n```\n\nThis snippet shows you how to override field in package.json, which is an important aspect of drizzle.\n\n**User Table Schema**:\n\n```yaml\n```ts\nimport { relations } from 'drizzle-orm'\nimport {\n    pgTable,\n    varchar,\n    timestamp\n} from 'drizzle-orm/pg-core'\n\nimport { createId } from '@paralleldrive/cuid2'\n\nexport const user = pgTable(\n    'user',\n    {\n        id: varchar('id')\n            .$defaultFn(() => createId())\n            .primaryKey(),\n        username: varchar('username').notNull().unique(),\n        password: varchar('password').notNull(),\n        email: varchar('email').notNull().unique(),\n        salt: varchar('salt', { length: 64 }).notNull(),\n        createdAt: timestamp('created_at').defaultNow().notNull(),\n    }\n)\n\nexport const table = {\n\tuser\n} as const\n\nexport type Table = typeof table\n```\n```\n\nThis snippet shows you how to user table schema, which is an important aspect of drizzle.\n\n**Convert User Table to TypeBox Models**:\n\n```yaml\n```ts\nimport { createInsertSchema } from 'drizzle-typebox'\nimport { table } from './database/schema'\n\nconst _createUser = createInsertSchema(table.user, {\n\t// Replace email with Elysia's email type\n\temail: t.String({ format: 'email' })\n})\n\nnew Elysia()\n\t.post('/sign-up', ({ body }) => {\n\t\t// Create a new user\n\t}, {\n\t\tbody: t.Omit(\n\t\t\t_createUser,\n\t\t\t['id', 'salt', 'createdAt']\n\t\t)\n\t})\n```\n```\n\nThis snippet shows you how to convert user table to typebox models, which is an important aspect of drizzle.\n\n**Prevent Infinite Type Instantiation**:\n\n```yaml\n```ts\nimport { t } from 'elysia'\nimport { createInsertSchema } from 'drizzle-typebox'\n\nimport { table } from './database/schema'\n\nconst _createUser = createInsertSchema(table.user, {\n\temail: t.String({ format: 'email' })\n})\n\n// ✅ This works, by referencing the type from `drizzle-typebox`\nconst createUser = t.Omit(\n\t_createUser,\n\t['id', 'salt', 'createdAt']\n)\n\n// ❌ This will cause an infinite loop of type instantiation\nconst createUser = t.Omit(\n\tcreateInsertSchema(table.user, {\n\t\temail: t.String({ format: 'email' })\n\t}),\n\t['id', 'salt', 'createdAt']\n)\n```\n```\n\nThis snippet shows you how to prevent infinite type instantiation, which is an important aspect of drizzle.\n\n**Utility Function for Schema Spreading**:\n\n```yaml\n```ts\n/**\n * @lastModified 2025-02-04\n * @see https://elysiajs.com/recipe/drizzle.html#utility\n */\n\nimport { Kind, type TObject } from '@sinclair/typebox'\nimport {\n    createInsertSchema,\n    createSelectSchema,\n    BuildSchema,\n} from 'drizzle-typebox'\n\nimport { table } from './schema'\nimport type { Table } from 'drizzle-orm'\n\ntype Spread<\n    T extends TObject | Table,\n    Mode extends 'select' | 'insert' | undefined,\n> =\n    T extends TObject<infer Fields>\n        ? {\n              [K in keyof Fields]: Fields[K]\n          }\n        : T extends Table\n          ? Mode extends 'select'\n              ? BuildSchema<\n                    'select',\n                    T['_']['columns'],\n                    undefined\n                >['properties']\n              : Mode extends 'insert'\n                ? BuildSchema<\n                      'insert',\n                      T['_']['columns'],\n                      undefined\n                  >['properties']\n                : {}\n          : {}\n\n/**\n * Spread a Drizzle schema into a plain object\n */\nexport const spread = <\n    T extends TObject | Table,\n    Mode extends 'select' | 'insert' | undefined,\n>(\n    schema: T,\n    mode?: Mode,\n): Spread<T, Mode> => {\n    const newSchema: Record<string, unknown> = {}\n    let table\n\n    switch (mode) {\n        case 'insert':\n        case 'select':\n            if (Kind in schema) {\n                table = schema\n                break\n            }\n\n            table =\n                mode === 'insert'\n                    ? createInsertSchema(schema)\n                    : createSelectSchema(schema)\n\n            break\n\n        default:\n            if (!(Kind in schema)) throw new Error('Expect a schema')\n            table = schema\n    }\n\n    for (const key of Object.keys(table.properties))\n        newSchema[key] = table.properties[key]\n\n    return newSchema as any\n}\n```\n```\n\nThis snippet shows you how to utility function for schema spreading, which is an important aspect of drizzle.\n\n**Singleton Pattern for Table Schema**:\n\n```yaml\n```ts\nimport { table } from './schema'\nimport { spreads } from './utils'\n\nexport const db = {\n\tinsert: spreads({\n\t\tuser: table.user,\n\t}, 'insert'),\n\tselect: spreads({\n\t\tuser: table.user,\n\t}, 'select')\n} as const\n```\n```\n\nThis snippet shows you how to singleton pattern for table schema, which is an important aspect of drizzle.\n\n**Refinement of Schema**:\n\n```yaml\n```ts\nimport { t } from 'elysia'\nimport { createInsertSchema, createSelectSchema } from 'drizzle-typebox'\n\nimport { table } from './schema'\nimport { spreads } from './utils'\n\nexport const db = {\n\tinsert: spreads({\n\t\tuser: createInsertSchema(table.user, {\n\t\t\temail: t.String({ format: 'email' })\n\t\t}),\n\t}, 'insert')),\n\tselect: spreads({\n\t\tuser: createSelectSchema(table.user, {\n\t\t\temail: t.String({ format: 'email' })\n\t\t})\n\t}, 'select')\n} as const\n```\n```\n\nThis snippet shows you how to refinement of schema, which is an important aspect of drizzle.\n\n", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "code_examples", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Drizzle in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways declare a variable for `drizzle-typebox` and reference it if you want to use Elysia type.\n\nWe recommend using a singleton pattern to store the table schema, this will allow us to access the table schema from anywhere in the codebase.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/recipe/drizzle", "title": "Drizzle", "description": "Drizzle ORM is a headless TypeScript ORM with a focus on type safety and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:10:16", "type": "best_practices", "page_metadata": {"og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox"], "description": "We may use Drizzle to create end-to-end type safety from database to validation to frontend with drizzle-typebox", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "title": "Drizzle - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "ogImage": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "generator": "VitePress v1.6.3", "og:title": "Drizzle - ElysiaJS", "og:image:width": "1920", "ogTitle": "Drizzle - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "355ad037-b409-4667-8c2f-9605ff84ecec", "sourceURL": "https://elysiajs.com/recipe/drizzle", "url": "https://elysiajs.com/recipe/drizzle", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Sample Documentation Page is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Sample Documentation Page in elysiajs.\n\n# Sample Documentation Page\n\nThis page provides an overview of the sample documentation structure.Here's a quick rundown of what this is about:\n\n## Introduction\n\nThis section introduces the purpose of the documentation.\n\n## Installation\n\nFollow these steps to install the software: 1. Download the installer. 2. Run the installer and follow the prompts.\n\n## Usage\n\nTo use the software, open the application and select the desired options.\n\n## Troubleshooting\n\nIf you encounter issues, refer to this section for common problems and solutions.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introduction in elysiajs?\n\nAssistant: To introduction in elysiajs, here's what you do:\nThis section introduces the purpose of the documentation..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nFollow these steps to install the software: 1. Download the installer. 2. Run the installer and follow the prompts..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nTo use the software, open the application and select the desired options..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I troubleshooting in elysiajs?\n\nAssistant: To troubleshooting in elysiajs, here's what you do:\nIf you encounter issues, refer to this section for common problems and solutions..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Sample Documentation Page in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Installation Command**:\n\n```yaml\nsudo apt-get install sample-software\n```\n\nThis snippet shows you how to basic installation command, which is an important aspect of sample documentation page.\n\n**Configuration Example**:\n\n```yaml\n{\n  \"setting1\": \"value1\",\n  \"setting2\": \"value2\"\n}\n```\n\nThis snippet shows you how to configuration example, which is an important aspect of sample documentation page.\n\n", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Sample Documentation Page in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways read the installation instructions carefully.\n\nKeep your software updated to the latest version.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/integrations/astro", "title": "Sample Documentation Page", "description": "This page provides an overview of the sample documentation structure.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:10:47", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image:width": "1920", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Integration with Astro - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "You can run Elysia on Astro. Elysia will work normally as expected because of WinterCG compliance.", "scrapeId": "96430ec9-da0f-48ae-bdf6-a58ac0213bde", "sourceURL": "https://elysiajs.com/integrations/astro", "url": "https://elysiajs.com/integrations/astro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Macro is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Macro in elysiajs.\n\n# Macro\n\nMacro allows us to define a custom field to the hook.Here's a quick rundown of what this is about:\n\n## Macro v2\n\nMacro v2 use an object syntax with return lifecycle like inline hook.\n\n**Elysia.macro** allows us to compose custom heavy logic into a simple configuration available in hook, and **guard** with full type safety.\n\n```typescript\nimport {\nElysia } from 'elysia'\n\nconst\nplugin = new\nElysia({\nname: 'plugin' })\n    .\nmacro({\n\nhi(\nword: string) {\n            return {\n\nbeforeHandle() {\n\nconsole.\nlog(\nword)\n            }\n            }\n        }\n    })\n\nconst\napp = new\nElysia()\n    .\nuse(\nplugin)\n    .\nget('/', () => 'hi', {\n\nhi: 'Elysia'\n    })\n```\n\nAccessing the path should log **\"Elysia\"** as the results.\n\n## API\n\n**macro** has the same API as hook.\n\nIn previous example, we create a **hi** macro accepting a **string**.\n\nWe then assigned **hi** to **\"Elysia\"**, the value was then sent back to the **hi** function, and then the function added a new event to **beforeHandle** stack.\n\nWhich is an equivalent of pushing function to **beforeHandle** as the following:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hi', {\n        beforeHandle() {\n            console.log('Elysia')\n        }\n    })\n```\n\n**macro** shine when a logic is more complex than accepting a new function, for example creating an authorization layer for each route.\n\n```typescript\nimport {\nElysia } from 'elysia'\nimport {\nauth } from './auth'\n\nconst\napp = new\nElysia()\n    .\nuse(\nauth)\n    .\nget('/', ({\nuser }) =>\nuser, {\n\nisAuth: true,\n\nrole: 'admin'\n    })\n```\n\nMacro v2 can also register a new property to the context, allowing us to access the value directly from the context.\n\nThe field can accept anything ranging from string to function, allowing us to create a custom life cycle event.\n\n**macro** will be executed in order from top-to-bottom according to definition in hook, ensure that the stack is handled in the correct order.\n\n## Resolve\n\nYou add a property to the context by returning an object with a [**resolve**](https://elysiajs.com/essential/life-cycle.html#resolve) function.\n\n```ts\nimport {\nElysia } from 'elysia'\n\nnew\nElysia()\n\t.\nmacro({\n\nuser: (\nenabled: true) => ({\n\nresolve: () => ({\n\nuser: 'Pardofelis'\n\t\t\t})\n\t\t})\n\t})\n\t.\nget('/', ({\nuser }) =>\nuser, {\n\nuser: true\n\t})\n```\n\nIn the example above, we add a new property **user** to the context by returning an object with a **resolve** function.\n\nHere's an example that macro resolve could be useful:\n- perform authentication and add user to the context\n- run an additional database query and add data to the context\n- add a new property to the context\n\n## Property shorthand\n\nStarting from Elysia 1.2.10, each property in the macro object can be a function or an object.\n\nIf the property is an object, it will be translated to a function that accept a boolean parameter, and will be executed if the parameter is true.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nexport const auth = new Elysia()\n    .macro({\n     // This property shorthand\n     isAuth: {\n      resolve() {\n      return {\n          user: 'saltyaom'\n           }\n      }\n    },\n    // is equivalent to\n    isAuth(enabled: boolean) {\n     if(!enabled) return\n\n     return {\n\t\tresolve() {\n\t\t\treturn {\n\t\t\t\tuser\n\t\t\t}\n\t\t}\n          }\n        }\n    })\n```\n\n`user: string`\n\n`user: string`\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "overview", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I macro v2 in elysiajs?\n\nAssistant: To macro v2 in elysiajs, here's what you do:\nMacro v2 use an object syntax with return lifecycle like inline hook.\n\n**Elysia.macro** allows us to compose custom heavy logic into a simple configuration available in hook, and **guard** with full type safety.\n\n```typescript\nimport {\nElysia } from 'elysia'\n\nconst\nplugin = new\nElysia({\nname: 'plugin' })\n    .\nmacro({\n\nhi(\nword: string) {\n            return {\n\nbeforeHandle() {\n\nconsole.\nlog(\nword)\n            }\n            }\n        }\n    })\n\nconst\napp = new\nElysia()\n    .\nuse(\nplugin)\n    .\nget('/', () => 'hi', {\n\nhi: 'Elysia'\n    })\n```\n\nAccessing the path should log **\"Elysia\"** as the results..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "section_detail", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I api in elysiajs?\n\nAssistant: To api in elysiajs, here's what you do:\n**macro** has the same API as hook.\n\nIn previous example, we create a **hi** macro accepting a **string**.\n\nWe then assigned **hi** to **\"Elysia\"**, the value was then sent back to the **hi** function, and then the function added a new event to **beforeHandle** stack.\n\nWhich is an equivalent of pushing function to **beforeHandle** as the following:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hi', {\n        beforeHandle() {\n            console.log('Elysia')\n        }\n    })\n```\n\n**macro** shine when a logic is more complex than accepting a new function, for example creating an authorization layer for each route.\n\n```typescript\nimport {\nElysia } from 'elysia'\nimport {\nauth } from './auth'\n\nconst\napp = new\nElysia()\n    .\nuse(\nauth)\n    .\nget('/', ({\nuser }) =>\nuser, {\n\nisAuth: true,\n\nrole: 'admin'\n    })\n```\n\nMacro v2 can also register a new property to the context, allowing us to access the value directly from the context.\n\nThe field can accept anything ranging from string to function, allowing us to create a custom life cycle event.\n\n**macro** will be executed in order from top-to-bottom according to definition in hook, ensure that the stack is handled in the correct order..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "section_detail", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I resolve in elysiajs?\n\nAssistant: To resolve in elysiajs, here's what you do:\nYou add a property to the context by returning an object with a [**resolve**](https://elysiajs.com/essential/life-cycle.html#resolve) function.\n\n```ts\nimport {\nElysia } from 'elysia'\n\nnew\nElysia()\n\t.\nmacro({\n\nuser: (\nenabled: true) => ({\n\nresolve: () => ({\n\nuser: 'Pardofelis'\n\t\t\t})\n\t\t})\n\t})\n\t.\nget('/', ({\nuser }) =>\nuser, {\n\nuser: true\n\t})\n```\n\nIn the example above, we add a new property **user** to the context by returning an object with a **resolve** function.\n\nHere's an example that macro resolve could be useful:\n- perform authentication and add user to the context\n- run an additional database query and add data to the context\n- add a new property to the context.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "section_detail", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I property shorthand in elysiajs?\n\nAssistant: To property shorthand in elysiajs, here's what you do:\nStarting from Elysia 1.2.10, each property in the macro object can be a function or an object.\n\nIf the property is an object, it will be translated to a function that accept a boolean parameter, and will be executed if the parameter is true.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nexport const auth = new Elysia()\n    .macro({\n     // This property shorthand\n     isAuth: {\n      resolve() {\n      return {\n          user: 'saltyaom'\n           }\n      }\n    },\n    // is equivalent to\n    isAuth(enabled: boolean) {\n     if(!enabled) return\n\n     return {\n\t\tresolve() {\n\t\t\treturn {\n\t\t\t\tuser\n\t\t\t}\n\t\t}\n          }\n        }\n    })\n```\n\n`user: string`\n\n`user: string`.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "section_detail", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Macro in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Macro v2 Example**:\n\n```yaml\n```typescript\nimport {\nElysia } from 'elysia'\n\nconst\nplugin = new\nElysia({\nname: 'plugin' })\n    .\nmacro({\n\nhi(\nword: string) {\n            return {\n\nbeforeHandle() {\n\nconsole.\nlog(\nword)\n            }\n            }\n        }\n    })\n\nconst\napp = new\nElysia()\n    .\nuse(\nplugin)\n    .\nget('/', () => 'hi', {\n\nhi: 'Elysia'\n    })\n```\n```\n\nThis snippet shows you how to macro v2 example, which is an important aspect of macro.\n\n**API Equivalent Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'hi', {\n        beforeHandle() {\n            console.log('Elysia')\n        }\n    })\n```\n```\n\nThis snippet shows you how to api equivalent example, which is an important aspect of macro.\n\n**Authorization Layer Example**:\n\n```yaml\n```typescript\nimport {\nElysia } from 'elysia'\nimport {\nauth } from './auth'\n\nconst\napp = new\nElysia()\n    .\nuse(\nauth)\n    .\nget('/', ({\nuser }) =>\nuser, {\n\nisAuth: true,\n\nrole: 'admin'\n    })\n```\n```\n\nThis snippet shows you how to authorization layer example, which is an important aspect of macro.\n\n**Resolve Example**:\n\n```yaml\n```ts\nimport {\nElysia } from 'elysia'\n\nnew\nElysia()\n\t.\nmacro({\n\nuser: (\nenabled: true) => ({\n\nresolve: () => ({\n\nuser: 'Pardofelis'\n\t\t\t})\n\t\t})\n\t})\n\t.\nget('/', ({\nuser }) =>\nuser, {\n\nuser: true\n\t})\n```\n```\n\nThis snippet shows you how to resolve example, which is an important aspect of macro.\n\n**Property Shorthand Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nexport const auth = new Elysia()\n    .macro({\n     // This property shorthand\n     isAuth: {\n      resolve() {\n      return {\n          user: 'saltyaom'\n           }\n      }\n    },\n    // is equivalent to\n    isAuth(enabled: boolean) {\n     if(!enabled) return\n\n     return {\n\t\tresolve() {\n\t\t\treturn {\n\t\t\t\tuser\n\t\t\t}\n\t\t}\n          }\n        }\n    })\n```\n```\n\nThis snippet shows you how to property shorthand example, which is an important aspect of macro.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "code_examples", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Macro in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure that the stack is handled in the correct order when using macro.\n\nUse macro for complex logic that requires more than just accepting a new function, such as creating an authorization layer for routes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/macro", "title": "Macro", "description": "Macro allows us to define a custom field to the hook.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:07", "type": "best_practices", "page_metadata": {"og:description": "Macro allows us to define a custom field to the hook.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "description": "Macro allows us to define a custom field to the hook.", "twitter:card": "summary_large_image", "language": "en-US", "ogTitle": "Macro - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:title": "Macro - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogDescription": "Macro allows us to define a custom field to the hook.", "title": "Macro - ElysiaJS | ElysiaJS", "scrapeId": "db96791c-a973-414c-9450-26266bd7fecf", "sourceURL": "https://elysiajs.com/patterns/macro", "url": "https://elysiajs.com/patterns/macro", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Bearer Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Bearer Plugin in elysiajs.\n\n# Bearer Plugin\n\nPlugin for elysia for retrieving the Bearer token.Here's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/bearer\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n } from 'elysia'\nimport {\nbearer\n\n } from '@elysiajs/bearer'\n\nconst\napp\n = new\nElysia\n()\n    .use\n(\nbearer\n())\n    .get\n('/sign', ({\nbearer\n }) =>\nbearer\n, {\nbeforeHandle\n({\nbearer\n,\nset\n,\nerror\n }) {\n            if (!\nbearer\n) {\n\nset\n.headers\n[\n                    'WWW-Authenticate'\n                ] = `Bearer realm='sign', error=\"invalid_request\"`\n\n                return\nerror\n(400, 'Unauthorized')\n            }\n        }\n    })\n    .listen\n(3000)\n```\n\n## RFC Reference\n\nThis plugin is for retrieving a Bearer token specified in [RFC6750](https://www.rfc-editor.org/rfc/rfc6750#section-2).\n\n## Important Note\n\nThis plugin DOES NOT handle authentication validation for your server. Instead, the plugin leaves the decision to developers to apply logic for handling validation check themselves.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "overview", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/bearer\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n } from 'elysia'\nimport {\nbearer\n\n } from '@elysiajs/bearer'\n\nconst\napp\n = new\nElysia\n()\n    .use\n(\nbearer\n())\n    .get\n('/sign', ({\nbearer\n }) =>\nbearer\n, {\nbeforeHandle\n({\nbearer\n,\nset\n,\nerror\n }) {\n            if (!\nbearer\n) {\n\nset\n.headers\n[\n                    'WWW-Authenticate'\n                ] = `Bearer realm='sign', error=\"invalid_request\"`\n\n                return\nerror\n(400, 'Unauthorized')\n            }\n        }\n    })\n    .listen\n(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I rfc reference in elysiajs?\n\nAssistant: To rfc reference in elysiajs, here's what you do:\nThis plugin is for retrieving a Bearer token specified in [RFC6750](https://www.rfc-editor.org/rfc/rfc6750#section-2)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I important note in elysiajs?\n\nAssistant: To important note in elysiajs, here's what you do:\nThis plugin DOES NOT handle authentication validation for your server. Instead, the plugin leaves the decision to developers to apply logic for handling validation check themselves..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Bearer Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/bearer\n```\n\nThis snippet shows you how to installation command, which is an important aspect of bearer plugin.\n\n**Usage Example**:\n\n```yaml\nimport {\nElysia\n } from 'elysia'\nimport {\nbearer\n } from '@elysiajs/bearer'\n\nconst\napp\n = new\nElysia\n()\n    .use\n(\nbearer\n())\n    .get\n('/sign', ({\nbearer\n }) =>\nbearer\n, {\nbeforeHandle\n({\nbearer\n,\nset\n,\nerror\n }) {\n            if (!\nbearer\n) {\n\nset\n.headers\n[\n                    'WWW-Authenticate'\n                ] = `Bearer realm='sign', error=\"invalid_request\"`\n\n                return\nerror\n(400, 'Unauthorized')\n            }\n        }\n    })\n    .listen\n(3000)\n```\n\nThis snippet shows you how to usage example, which is an important aspect of bearer plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "code_examples", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Bearer Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nThis plugin does not handle authentication validation; developers should implement their own validation logic.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/bearer", "title": "Bearer Plugin", "description": "Plugin for elysia for retrieving the Bearer token.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:11:17", "type": "best_practices", "page_metadata": {"og:image:width": "1920", "description": "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with ", "title": "Bearer Plugin - ElysiaJS | ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for retrieving Bearer token as specified in RFC6750. Start by installing the plugin with \"bun add @elysiajs/bearer\"."], "ogTitle": "Bearer Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Bearer Plugin - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "eab34cf0-125f-419f-8493-242833710e00", "sourceURL": "https://elysiajs.com/plugins/bearer", "url": "https://elysiajs.com/plugins/bearer", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia Cheat Sheet is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia Cheat Sheet in elysiajs.\n\n# Elysia Cheat Sheet\n\nA quick overview for common Elysia patternsHere's a quick rundown of what this is about:\n\n## Hello World\n\nA simple hello world\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'Hello World')\n    .listen(3000)\n```\n\n## Custom HTTP Method\n\nDefine route using custom HTTP methods/verbs\n\nSee [Route](https://elysiajs.com/essential/route.html#custom-method)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/hi', () => 'Hi')\n    .post('/hi', () => 'From Post')\n    .put('/hi', () => 'From Put')\n    .route('M-SEARCH', '/hi', () => 'Custom Method')\n    .listen(3000)\n```\n\n## Path Parameter\n\nUsing dynamic path parameter\n\nSee [Path](https://elysiajs.com/essential/route.html#path-type)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .get('/rest/*', () => 'Rest')\n    .listen(3000)\n```\n\n## Return JSON\n\nElysia converts response to JSON automatically\n\nSee [Handler](https://elysiajs.com/essential/handler.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/json', () => {\n        return {\n            hello: 'Elysia'\n        }\n    })\n    .listen(3000)\n```\n\n## Return a file\n\nA file can be return in as formdata response\n\nThe response must be a 1-level deep object\n\n```typescript\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n    .get('/json', () => {\n        return {\n            hello: 'Elysia',\n            image: file('public/cat.jpg')\n        }\n    })\n    .listen(3000)\n```\n\n## Header and status\n\nSet a custom header and a status code\n\nSee [Handler](https://elysiajs.com/essential/handler.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set, error }) => {\n        set.headers['x-powered-by'] = 'Elysia'\n\n        return error(418, \"I'm a teapot\")\n    })\n    .listen(3000)\n```\n\n## Group\n\nDefine a prefix once for sub routes\n\nSee [Group](https://elysiajs.com/essential/route.html#group)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get(\"/\", () => \"Hi\")\n    .group(\"/auth\", app => {\n        return app\n            .get(\"/\", () => \"Hi\")\n            .post(\"/sign-in\", ({ body }) => body)\n            .put(\"/sign-up\", ({ body }) => body)\n    })\n    .listen(3000)\n```\n\n## Schema\n\nEnforce a data type of a route\n\nSee [Validation](https://elysiajs.com/essential/validation.html)\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .post('/mirror', ({ body: { username } }) => username, {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .listen(3000)\n```\n\n## File upload\n\nSee [Validation#file](https://elysiajs.com/essential/validation.html#file)\n\n```typescript\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n\t.\npost('/body', ({\nbody }) =>\nbody, {\n\nbody:\nt.\nObject({\n\nfile:\nt.\nFile({\nformat: 'image/*' }),\n\nmultipleFiles:\nt.\nFiles()\n\t\t})\n\t})\n\t.\nlisten(3000)\n```\n\n## Lifecycle Hook\n\nIntercept an Elysia event in order\n\nSee [Lifecycle](https://elysiajs.com/essential/life-cycle.html)\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .onRequest(() => {\n        console.log('On request')\n    })\n    .on('beforeHandle', () => {\n        console.log('Before handle')\n    })\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        }),\n        afterHandle: () => {\n            console.log(\"After handle\")\n        }\n    })\n    .listen(3000)\n```\n\n## Guard\n\nEnforce a data type of sub routes\n\nSee [Scope](https://elysiajs.com/essential/plugin.html#scope)\n\n```typescript\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n    .\nguard({\n\nresponse:\nt.\nString()\n    }, (\napp) =>\napp\n        .\nget('/', () => 'Hi')\n        // Invalid: will throws error, and TypeScript will report error\n        .\nget('/invalid', () => 1)\nArgument of type '() => number' is not assignable to parameter of type 'InlineHandler<MergeSchema<UnwrapRoute<InputSchema<never>, TModule<{}, {}>, \"/invalid\">, MergeSchema<{}, MergeSchema<{}, { body: unknown; headers: unknown; query: unknown; params: {}; cookie: unknown; response: { 200: string; }; }, \"\">, \"\">, \"\">, { ...; } & { ...; }, \"/invalid\">'.\n  Type '() => number' is not assignable to type '(context: { body: unknown; query: Record<string, string>; params: {}; headers: Record<string, string | undefined>; cookie: Record<string, Cookie<string | undefined>>; ... 8 more ...; error: <const Code extends \"OK\" | 200, const T extends Code extends 200 ? { ...; }[Code] : Code extends \"Continue\" | ... 58 more ... |...'.\n    Type 'number' is not assignable to type 'Response | MaybePromise<string | { 200: string; } | ElysiaCustomStatusResponse<200, string, 200>>'.    )\n    .listen(3000)\n```\n\n## Custom context\n\nAdd custom variable to route context\n\nSee [Context](https://elysiajs.com/essential/handler.html#context)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('version', 1)\n    .decorate('getDate', () => Date.now())\n    .get('/version', ({\n        getDate,\n        store: { version }\n    }) => `${version} ${getDate()}`)\n    .listen(3000)\n```\n\n## Redirect\n\nRedirect a response\n\nSee [Handler](https://elysiajs.com/essential/handler.html#redirect)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'hi')\n    .get('/redirect', ({ redirect }) => {\n        return redirect('/')\n    })\n    .listen(3000)\n```\n\n## Plugin\n\nCreate a separate instance\n\nSee [Plugin](https://elysiajs.com/essential/plugin.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst plugin = new Elysia()\n    .state('plugin-version', 1)\n    .get('/hi', () => 'hi')\n\nnew Elysia()\n    .use(plugin)\n    .get('/version', ({ store }) => store['plugin-version'])\n    .listen(3000)\n```\n\n## Web Socket\n\nCreate a realtime connection using Web Socket\n\nSee [Web Socket](https://elysiajs.com/patterns/websocket.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .ws('/ping', {\n        message(ws, message) {\n            ws.send('hello ' + message)\n        }\n    })\n    .listen(3000)\n```\n\n## OpenAPI documentation\n\nCreate interactive documentation using Scalar (or optionally Swagger)\n\nSee [swagger](https://elysiajs.com/plugins/swagger.html)\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .listen(3000)\n\nconsole.log(`View documentation at \\\n\n## Unit Test\n\nWrite a unit test of your Elysia app\n\nSee [Unit Test](https://elysiajs.com/patterns/unit-test.html)\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const app = new Elysia().get('/', () => 'hi')\n\n        const response = await app\n            .handle(new Request('http://localhost/'))\n            .then((res) => res.text())\n\n        expect(response).toBe('hi')\n    })\n})\n```\n\n## Custom body parser\n\nCreate custom logic for parsing body\n\nSee [Parse](https://elysiajs.com/essential/life-cycle.html#parse)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .onParse(({ request, contentType }) => {\n        if (contentType === 'application/custom-type')\n            return request.text()\n    })\n```\n\n## GraphQL\n\nCreate a custom GraphQL server using GraphQL Yoga or Apollo\n\nSee [GraphQL Yoga](https://elysiajs.com/plugins/graphql-yoga.html)\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { yoga } from '@elysiajs/graphql-yoga'\n\nconst app = new Elysia()\n    .use(\n        yoga({\n            typeDefs: /* GraphQL */`  \n                type Query {\n                    hi: String\n                }\n            `,\n            resolvers: {\n                Query: {\n                    hi: () => 'Hello from Elysia'\n                }\n            }\n        })\n    )\n    .listen(3000)\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "overview", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I hello world in elysiajs?\n\nAssistant: To hello world in elysiajs, here's what you do:\nA simple hello world\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'Hello World')\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I custom http method in elysiajs?\n\nAssistant: To custom http method in elysiajs, here's what you do:\nDefine route using custom HTTP methods/verbs\n\nSee [Route](https://elysiajs.com/essential/route.html#custom-method)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/hi', () => 'Hi')\n    .post('/hi', () => 'From Post')\n    .put('/hi', () => 'From Put')\n    .route('M-SEARCH', '/hi', () => 'Custom Method')\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I path parameter in elysiajs?\n\nAssistant: To path parameter in elysiajs, here's what you do:\nUsing dynamic path parameter\n\nSee [Path](https://elysiajs.com/essential/route.html#path-type)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .get('/rest/*', () => 'Rest')\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I return json in elysiajs?\n\nAssistant: To return json in elysiajs, here's what you do:\nElysia converts response to JSON automatically\n\nSee [Handler](https://elysiajs.com/essential/handler.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/json', () => {\n        return {\n            hello: 'Elysia'\n        }\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I return a file in elysiajs?\n\nAssistant: To return a file in elysiajs, here's what you do:\nA file can be return in as formdata response\n\nThe response must be a 1-level deep object\n\n```typescript\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n    .get('/json', () => {\n        return {\n            hello: 'Elysia',\n            image: file('public/cat.jpg')\n        }\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I header and status in elysiajs?\n\nAssistant: To header and status in elysiajs, here's what you do:\nSet a custom header and a status code\n\nSee [Handler](https://elysiajs.com/essential/handler.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set, error }) => {\n        set.headers['x-powered-by'] = 'Elysia'\n\n        return error(418, \"I'm a teapot\")\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I group in elysiajs?\n\nAssistant: To group in elysiajs, here's what you do:\nDefine a prefix once for sub routes\n\nSee [Group](https://elysiajs.com/essential/route.html#group)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get(\"/\", () => \"Hi\")\n    .group(\"/auth\", app => {\n        return app\n            .get(\"/\", () => \"Hi\")\n            .post(\"/sign-in\", ({ body }) => body)\n            .put(\"/sign-up\", ({ body }) => body)\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I schema in elysiajs?\n\nAssistant: To schema in elysiajs, here's what you do:\nEnforce a data type of a route\n\nSee [Validation](https://elysiajs.com/essential/validation.html)\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .post('/mirror', ({ body: { username } }) => username, {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I file upload in elysiajs?\n\nAssistant: To file upload in elysiajs, here's what you do:\nSee [Validation#file](https://elysiajs.com/essential/validation.html#file)\n\n```typescript\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n\t.\npost('/body', ({\nbody }) =>\nbody, {\n\nbody:\nt.\nObject({\n\nfile:\nt.\nFile({\nformat: 'image/*' }),\n\nmultipleFiles:\nt.\nFiles()\n\t\t})\n\t})\n\t.\nlisten(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I lifecycle hook in elysiajs?\n\nAssistant: To lifecycle hook in elysiajs, here's what you do:\nIntercept an Elysia event in order\n\nSee [Lifecycle](https://elysiajs.com/essential/life-cycle.html)\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .onRequest(() => {\n        console.log('On request')\n    })\n    .on('beforeHandle', () => {\n        console.log('Before handle')\n    })\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        }),\n        afterHandle: () => {\n            console.log(\"After handle\")\n        }\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I guard in elysiajs?\n\nAssistant: To guard in elysiajs, here's what you do:\nEnforce a data type of sub routes\n\nSee [Scope](https://elysiajs.com/essential/plugin.html#scope)\n\n```typescript\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n    .\nguard({\n\nresponse:\nt.\nString()\n    }, (\napp) =>\napp\n        .\nget('/', () => 'Hi')\n        // Invalid: will throws error, and TypeScript will report error\n        .\nget('/invalid', () => 1)\nArgument of type '() => number' is not assignable to parameter of type 'InlineHandler<MergeSchema<UnwrapRoute<InputSchema<never>, TModule<{}, {}>, \"/invalid\">, MergeSchema<{}, MergeSchema<{}, { body: unknown; headers: unknown; query: unknown; params: {}; cookie: unknown; response: { 200: string; }; }, \"\">, \"\">, \"\">, { ...; } & { ...; }, \"/invalid\">'.\n  Type '() => number' is not assignable to type '(context: { body: unknown; query: Record<string, string>; params: {}; headers: Record<string, string | undefined>; cookie: Record<string, Cookie<string | undefined>>; ... 8 more ...; error: <const Code extends \"OK\" | 200, const T extends Code extends 200 ? { ...; }[Code] : Code extends \"Continue\" | ... 58 more ... |...'.\n    Type 'number' is not assignable to type 'Response | MaybePromise<string | { 200: string; } | ElysiaCustomStatusResponse<200, string, 200>>'.    )\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I custom context in elysiajs?\n\nAssistant: To custom context in elysiajs, here's what you do:\nAdd custom variable to route context\n\nSee [Context](https://elysiajs.com/essential/handler.html#context)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('version', 1)\n    .decorate('getDate', () => Date.now())\n    .get('/version', ({\n        getDate,\n        store: { version }\n    }) => `${version} ${getDate()}`)\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I redirect in elysiajs?\n\nAssistant: To redirect in elysiajs, here's what you do:\nRedirect a response\n\nSee [Handler](https://elysiajs.com/essential/handler.html#redirect)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'hi')\n    .get('/redirect', ({ redirect }) => {\n        return redirect('/')\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I plugin in elysiajs?\n\nAssistant: To plugin in elysiajs, here's what you do:\nCreate a separate instance\n\nSee [Plugin](https://elysiajs.com/essential/plugin.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst plugin = new Elysia()\n    .state('plugin-version', 1)\n    .get('/hi', () => 'hi')\n\nnew Elysia()\n    .use(plugin)\n    .get('/version', ({ store }) => store['plugin-version'])\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I web socket in elysiajs?\n\nAssistant: To web socket in elysiajs, here's what you do:\nCreate a realtime connection using Web Socket\n\nSee [Web Socket](https://elysiajs.com/patterns/websocket.html)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .ws('/ping', {\n        message(ws, message) {\n            ws.send('hello ' + message)\n        }\n    })\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I openapi documentation in elysiajs?\n\nAssistant: To openapi documentation in elysiajs, here's what you do:\nCreate interactive documentation using Scalar (or optionally Swagger)\n\nSee [swagger](https://elysiajs.com/plugins/swagger.html)\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .listen(3000)\n\nconsole.log(`View documentation at \\.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I unit test in elysiajs?\n\nAssistant: To unit test in elysiajs, here's what you do:\nWrite a unit test of your Elysia app\n\nSee [Unit Test](https://elysiajs.com/patterns/unit-test.html)\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const app = new Elysia().get('/', () => 'hi')\n\n        const response = await app\n            .handle(new Request('http://localhost/'))\n            .then((res) => res.text())\n\n        expect(response).toBe('hi')\n    })\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I custom body parser in elysiajs?\n\nAssistant: To custom body parser in elysiajs, here's what you do:\nCreate custom logic for parsing body\n\nSee [Parse](https://elysiajs.com/essential/life-cycle.html#parse)\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .onParse(({ request, contentType }) => {\n        if (contentType === 'application/custom-type')\n            return request.text()\n    })\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I graphql in elysiajs?\n\nAssistant: To graphql in elysiajs, here's what you do:\nCreate a custom GraphQL server using GraphQL Yoga or Apollo\n\nSee [GraphQL Yoga](https://elysiajs.com/plugins/graphql-yoga.html)\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { yoga } from '@elysiajs/graphql-yoga'\n\nconst app = new Elysia()\n    .use(\n        yoga({\n            typeDefs: /* GraphQL */`  \n                type Query {\n                    hi: String\n                }\n            `,\n            resolvers: {\n                Query: {\n                    hi: () => 'Hello from Elysia'\n                }\n            }\n        })\n    )\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia Cheat Sheet in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Hello World**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'Hello World')\n    .listen(3000)\n```\n\nThis snippet shows you how to hello world, which is an important aspect of elysia cheat sheet.\n\n**Custom HTTP Method**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/hi', () => 'Hi')\n    .post('/hi', () => 'From Post')\n    .put('/hi', () => 'From Put')\n    .route('M-SEARCH', '/hi', () => 'Custom Method')\n    .listen(3000)\n```\n\nThis snippet shows you how to custom http method, which is an important aspect of elysia cheat sheet.\n\n**Path Parameter**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .get('/rest/*', () => 'Rest')\n    .listen(3000)\n```\n\nThis snippet shows you how to path parameter, which is an important aspect of elysia cheat sheet.\n\n**Return JSON**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/json', () => {\n        return {\n            hello: 'Elysia'\n        }\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to return json, which is an important aspect of elysia cheat sheet.\n\n**Return a file**:\n\n```yaml\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n    .get('/json', () => {\n        return {\n            hello: 'Elysia',\n            image: file('public/cat.jpg')\n        }\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to return a file, which is an important aspect of elysia cheat sheet.\n\n**Header and status**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set, error }) => {\n        set.headers['x-powered-by'] = 'Elysia'\n\n        return error(418, \"I'm a teapot\")\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to header and status, which is an important aspect of elysia cheat sheet.\n\n**Group**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get(\"/\", () => \"Hi\")\n    .group(\"/auth\", app => {\n        return app\n            .get(\"/\", () => \"Hi\")\n            .post(\"/sign-in\", ({ body }) => body)\n            .put(\"/sign-up\", ({ body }) => body)\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to group, which is an important aspect of elysia cheat sheet.\n\n**Schema**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .post('/mirror', ({ body: { username } }) => username, {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to schema, which is an important aspect of elysia cheat sheet.\n\n**File upload**:\n\n```yaml\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n\t.\npost('/body', ({\nbody }) =>\nbody, {\n\nbody:\nt.\nObject({\n\nfile:\nt.\nFile({\nformat: 'image/*' }),\n\nmultipleFiles:\nt.\nFiles()\n\t\t})\n\t})\n\t.\nlisten(3000)\n```\n\nThis snippet shows you how to file upload, which is an important aspect of elysia cheat sheet.\n\n**Lifecycle Hook**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .onRequest(() => {\n        console.log('On request')\n    })\n    .on('beforeHandle', () => {\n        console.log('Before handle')\n    })\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        }),\n        afterHandle: () => {\n            console.log(\"After handle\")\n        }\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to lifecycle hook, which is an important aspect of elysia cheat sheet.\n\n**Guard**:\n\n```yaml\nimport {\nElysia,\nt } from 'elysia'\n\nnew\nElysia()\n    .\nguard({\n\nresponse:\nt.\nString()\n    }, (\napp) =>\napp\n        .\nget('/', () => 'Hi')\n        // Invalid: will throws error, and TypeScript will report error\n        .\nget('/invalid', () => 1)\nArgument of type '() => number' is not assignable to parameter of type 'InlineHandler<MergeSchema<UnwrapRoute<InputSchema<never>, TModule<{}, {}>, \"/invalid\">, MergeSchema<{}, MergeSchema<{}, { body: unknown; headers: unknown; query: unknown; params: {}; cookie: unknown; response: { 200: string; }; }, \"\">, \"\">, \"\">, { ...; } & { ...; }, \"/invalid\">'.\n  Type '() => number' is not assignable to type '(context: { body: unknown; query: Record<string, string>; params: {}; headers: Record<string, string | undefined>; cookie: Record<string, Cookie<string | undefined>>; ... 8 more ...; error: <const Code extends \"OK\" | 200, const T extends Code extends 200 ? { ...; }[Code] : Code extends \"Continue\" | ... 58 more ... |...'.\n    Type 'number' is not assignable to type 'Response | MaybePromise<string | { 200: string; } | ElysiaCustomStatusResponse<200, string, 200>>'.    )\n    .listen(3000)\n```\n\nThis snippet shows you how to guard, which is an important aspect of elysia cheat sheet.\n\n**Custom context**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('version', 1)\n    .decorate('getDate', () => Date.now())\n    .get('/version', ({\n        getDate,\n        store: { version }\n    }) => `${version} ${getDate()}`)\n    .listen(3000)\n```\n\nThis snippet shows you how to custom context, which is an important aspect of elysia cheat sheet.\n\n**Redirect**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', () => 'hi')\n    .get('/redirect', ({ redirect }) => {\n        return redirect('/')\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to redirect, which is an important aspect of elysia cheat sheet.\n\n**Plugin**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst plugin = new Elysia()\n    .state('plugin-version', 1)\n    .get('/hi', () => 'hi')\n\nnew Elysia()\n    .use(plugin)\n    .get('/version', ({ store }) => store['plugin-version'])\n    .listen(3000)\n```\n\nThis snippet shows you how to plugin, which is an important aspect of elysia cheat sheet.\n\n**Web Socket**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .ws('/ping', {\n        message(ws, message) {\n            ws.send('hello ' + message)\n        }\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to web socket, which is an important aspect of elysia cheat sheet.\n\n**OpenAPI documentation**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .listen(3000)\n\nconsole.log(`View documentation at \\\n```\n\nThis snippet shows you how to openapi documentation, which is an important aspect of elysia cheat sheet.\n\n**Unit Test**:\n\n```yaml\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const app = new Elysia().get('/', () => 'hi')\n\n        const response = await app\n            .handle(new Request('http://localhost/'))\n            .then((res) => res.text())\n\n        expect(response).toBe('hi')\n    })\n})\n```\n```\n\nThis snippet shows you how to unit test, which is an important aspect of elysia cheat sheet.\n\n**Custom body parser**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .onParse(({ request, contentType }) => {\n        if (contentType === 'application/custom-type')\n            return request.text()\n    })\n```\n```\n\nThis snippet shows you how to custom body parser, which is an important aspect of elysia cheat sheet.\n\n**GraphQL**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { yoga } from '@elysiajs/graphql-yoga'\n\nconst app = new Elysia()\n    .use(\n        yoga({\n            typeDefs: /* GraphQL */`  \n                type Query {\n                    hi: String\n                }\n            `,\n            resolvers: {\n                Query: {\n                    hi: () => 'Hello from Elysia'\n                }\n            }\n        })\n    )\n    .listen(3000)\n```\n\nThis snippet shows you how to graphql, which is an important aspect of elysia cheat sheet.\n\n", "metadata": {"source_url": "https://elysiajs.com/integrations/cheat-sheet", "title": "Elysia Cheat Sheet", "description": "A quick overview for common Elysia patterns", "has_code_examples": true, "has_best_practices": false, "section_count": 19, "timestamp": "2025-03-01 03:12:11", "type": "code_examples", "page_metadata": {"language": "en-US", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Cheat Sheet (Elysia by example) - ElysiaJS", "title": "Cheat Sheet (Elysia by example) - ElysiaJS | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Cheat Sheet (Elysia by example) - ElysiaJS", "ogDescription": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:description": "Elysia's cheat sheet in summary and how it work with \"Elysia by example\"", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "ded9d071-4a6e-448d-bf11-9d91990a4b57", "sourceURL": "https://elysiajs.com/integrations/cheat-sheet", "url": "https://elysiajs.com/integrations/cheat-sheet", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Best Practice is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Best Practice in elysiajs.\n\n# Best Practice\n\nElysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.Here's a quick rundown of what this is about:\n\n## Method Chaining\n\nElysia code should always use **method chaining**. As Elysia type system is complex, every methods in Elysia returns a new type reference. **This is important** to ensure type integrity and inference.\n\n## ❌ Don't: Use Elysia without method chaining\n\nWithout using method chaining, Elysia doesn't save these new types, leading to no type inference. We recommend to **always use method chaining** to provide an accurate type inference.\n\n## Controller\n\n1 Elysia instance = 1 controller Elysia does a lot to ensure type integrity, if you pass an entire `Context` type to a controller, these might be the problems: 1. Elysia type is complex and heavily depends on plugin and multiple level of chaining. 2. Hard to type, Elysia type could change at anytime, especially with decorators, and store 3. Type casting may lead to a loss of type integrity or an inability to ensure consistency between types and runtime code. 4. This makes it more challenging for Sucrose to statically analyze your code.\n\n## ❌ Don't: Create a separate controller\n\nDon't create a separate controller, use Elysia itself as a controller instead.\n\n## ✅ Do: Use Elysia as a controller\n\nInstead treat an Elysia instance as a controller itself instead.\n\n## Testing\n\nYou can test your controller using `handle` to directly call a function (and it's lifecycle).\n\n## Service\n\nService is a set of utility/helper functions decoupled as a business logic to use in a module/controller, in our case, an Elysia instance. Any technical logic that can be decoupled from controller may live inside a **Service**. There're 2 types of service in Elysia: 1. Non-request dependent service 2. Request dependent service\n\n## ✅ Do: Non-request dependent service\n\nThis kind of service doesn't need to access any property from the request or `Context`, and can be initiated as a static class same as usual MVC service pattern.\n\n## Request Dependent Service\n\nThis kind of service may require some property from the request, and should be **initiated as an Elysia instance**.\n\n## ❌ Don't: Pass entire `Context` to a service\n\n**Context is a highly dynamic type** that can be inferred from Elysia instance. Do not pass an entire `Context` to a service, instead use object destructuring to extract what you need and pass it to the service.\n\n## ✅ Do: Use Elysia instance as a service\n\nWe recommended to use Elysia instance as a service to ensure type integrity and inference.\n\n## ⚠️ Infers Context from Elysia instance\n\nIn case of **absolute necessity**, you may infer the `Context` type from the Elysia instance itself. However we recommend to avoid this if possible, and use Elysia as a service instead.\n\n## Model\n\nModel or DTO (Data Transfer Object) is handle by Elysia.t (Validation). Elysia has a validation system built-in which can infers type from your code and validate it at runtime.\n\n## ❌ Don't: Declare a class instance as a model\n\nDo not declare a class instance as a model.\n\n## ✅ Do: Use Elysia's validation system\n\nInstead of declaring a class or interface, use Elysia's validation system to define a model.\n\n## ❌ Don't: Declare type separate from the model\n\nDo not declare a type separate from the model, instead use `typeof` with `.static` property to get the type of the model.\n\n## Group\n\nYou can group multiple models into a single object to make it more organized.\n\n## Model Injection\n\nThough this is optional, if you are strictly following MVC pattern, you may want to inject like a service into a controller.\n\n## Reuse a plugin\n\nIt's ok to reuse plugins multiple time to provide type inference. Elysia handle plugin deduplication automatically by default, and the performance is negligible.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "overview", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I method chaining in elysiajs?\n\nAssistant: To method chaining in elysiajs, here's what you do:\nElysia code should always use **method chaining**. As Elysia type system is complex, every methods in Elysia returns a new type reference. **This is important** to ensure type integrity and inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: use elysia without method chaining in elysiajs?\n\nAssistant: To ❌ don't: use elysia without method chaining in elysiajs, here's what you do:\nWithout using method chaining, Elysia doesn't save these new types, leading to no type inference. We recommend to **always use method chaining** to provide an accurate type inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I controller in elysiajs?\n\nAssistant: To controller in elysiajs, here's what you do:\n1 Elysia instance = 1 controller Elysia does a lot to ensure type integrity, if you pass an entire `Context` type to a controller, these might be the problems: 1. Elysia type is complex and heavily depends on plugin and multiple level of chaining. 2. Hard to type, Elysia type could change at anytime, especially with decorators, and store 3. Type casting may lead to a loss of type integrity or an inability to ensure consistency between types and runtime code. 4. This makes it more challenging for Sucrose to statically analyze your code..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: create a separate controller in elysiajs?\n\nAssistant: To ❌ don't: create a separate controller in elysiajs, here's what you do:\nDon't create a separate controller, use Elysia itself as a controller instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: use elysia as a controller in elysiajs?\n\nAssistant: To ✅ do: use elysia as a controller in elysiajs, here's what you do:\nInstead treat an Elysia instance as a controller itself instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I testing in elysiajs?\n\nAssistant: To testing in elysiajs, here's what you do:\nYou can test your controller using `handle` to directly call a function (and it's lifecycle)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I service in elysiajs?\n\nAssistant: To service in elysiajs, here's what you do:\nService is a set of utility/helper functions decoupled as a business logic to use in a module/controller, in our case, an Elysia instance. Any technical logic that can be decoupled from controller may live inside a **Service**. There're 2 types of service in Elysia: 1. Non-request dependent service 2. Request dependent service.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: non-request dependent service in elysiajs?\n\nAssistant: To ✅ do: non-request dependent service in elysiajs, here's what you do:\nThis kind of service doesn't need to access any property from the request or `Context`, and can be initiated as a static class same as usual MVC service pattern..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I request dependent service in elysiajs?\n\nAssistant: To request dependent service in elysiajs, here's what you do:\nThis kind of service may require some property from the request, and should be **initiated as an Elysia instance**..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: pass entire `context` to a service in elysiajs?\n\nAssistant: To ❌ don't: pass entire `context` to a service in elysiajs, here's what you do:\n**Context is a highly dynamic type** that can be inferred from Elysia instance. Do not pass an entire `Context` to a service, instead use object destructuring to extract what you need and pass it to the service..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: use elysia instance as a service in elysiajs?\n\nAssistant: To ✅ do: use elysia instance as a service in elysiajs, here's what you do:\nWe recommended to use Elysia instance as a service to ensure type integrity and inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ⚠️ infers context from elysia instance in elysiajs?\n\nAssistant: To ⚠️ infers context from elysia instance in elysiajs, here's what you do:\nIn case of **absolute necessity**, you may infer the `Context` type from the Elysia instance itself. However we recommend to avoid this if possible, and use Elysia as a service instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I model in elysiajs?\n\nAssistant: To model in elysiajs, here's what you do:\nModel or DTO (Data Transfer Object) is handle by Elysia.t (Validation). Elysia has a validation system built-in which can infers type from your code and validate it at runtime..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: declare a class instance as a model in elysiajs?\n\nAssistant: To ❌ don't: declare a class instance as a model in elysiajs, here's what you do:\nDo not declare a class instance as a model..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ✅ do: use elysia's validation system in elysiajs?\n\nAssistant: To ✅ do: use elysia's validation system in elysiajs, here's what you do:\nInstead of declaring a class or interface, use Elysia's validation system to define a model..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ❌ don't: declare type separate from the model in elysiajs?\n\nAssistant: To ❌ don't: declare type separate from the model in elysiajs, here's what you do:\nDo not declare a type separate from the model, instead use `typeof` with `.static` property to get the type of the model..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I group in elysiajs?\n\nAssistant: To group in elysiajs, here's what you do:\nYou can group multiple models into a single object to make it more organized..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I model injection in elysiajs?\n\nAssistant: To model injection in elysiajs, here's what you do:\nThough this is optional, if you are strictly following MVC pattern, you may want to inject like a service into a controller..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reuse a plugin in elysiajs?\n\nAssistant: To reuse a plugin in elysiajs, here's what you do:\nIt's ok to reuse plugins multiple time to provide type inference. Elysia handle plugin deduplication automatically by default, and the performance is negligible..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "section_detail", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Best Practice in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Method Chaining Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .state('build', 1)\n    .get('/', ({ store: { build } }) => build)\n    .listen(3000)\n```\n\nThis snippet shows you how to method chaining example, which is an important aspect of best practice.\n\n**Don't Use Method Chaining Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n\napp.state('build', 1)\n\napp.get('/', ({ store: { build } }) => build)\n\napp.listen(3000)\n```\n\nThis snippet shows you how to don't use method chaining example, which is an important aspect of best practice.\n\n**Controller Example**:\n\n```yaml\nimport { Elysia, t, type Context } from 'elysia'\n\nabstract class Controller {\n    static root(context: Context) {\n        return Service.doStuff(context.stuff)\n    }\n}\n\nnew Elysia()\n    .get('/', Controller.hi)\n```\n\nThis snippet shows you how to controller example, which is an important aspect of best practice.\n\n", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "code_examples", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Best Practice in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways use method chaining to provide an accurate type inference.\n\nUse Elysia itself as a controller instead of creating a separate controller.\n\nUse Elysia instance as a service to ensure type integrity and inference.\n\nAvoid passing entire Context to a service; use object destructuring instead.\n\nUse Elysia's validation system to define a model instead of declaring a class or interface.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/essential/best-practice", "title": "Best Practice", "description": "Elysia is a pattern-agnostic framework, leaving the decision of which coding patterns to use up to you and your team. However, there are several concerns from trying to adapt an MVC pattern with Elysia, and found it's hard to decouple and handle types. This page is a guide to on how to follows Elysia structure best practice combined with MVC pattern but can be adapted to any coding pattern you like.", "has_code_examples": true, "has_best_practices": true, "section_count": 19, "timestamp": "2025-03-01 03:15:46", "type": "best_practices", "page_metadata": {"ogDescription": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Best Practice - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:description": "Elysia is pattern agnostic framework, we the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:height": "1080", "description": "Elysia is pattern agnostic framework, we leave the decision up to you and your team for coding patterns to use. However, we found that there are several who are using MVC pattern (Model-View-Controller) on Elysia, and found it's hard to decouple and handling with types. This page is a guide to use Elysia with MVC pattern.", "og:image:width": "1920", "ogTitle": "Best Practice - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Best Practice - ElysiaJS | ElysiaJS", "scrapeId": "856ee205-ccbb-41cf-8646-bb1acada43e5", "sourceURL": "https://elysiajs.com/essential/best-practice", "url": "https://elysiajs.com/essential/best-practice", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what GraphQL Apollo Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain GraphQL Apollo Plugin in elysiajs.\n\n# GraphQL Apollo Plugin\n\nPlugin for elysia for using GraphQL Apollo.Here's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add graphql @elysiajs/apollo @apollo/server\n```\n\n## Usage\n\nThen use it:\n\ntypescript\n\n```\nimport {\nElysia\n} from 'elysia'\nimport {\napollo,\n gq\nl\n} from '@elysiajs/apollo'\n\nconst\napp\n = new\nElysia\n()\n\t.\nuse\n(\n\t\napollo\n(\n\t{\ntypeDefs\n:\ngql\n`\n\t\ntype Book {\n\t\ttitle: String\n\t\tauthor: String\n\t}\n\t\ntype Query {\n\t\tbooks: [Book]\n\t}\n\t\n`,\n\nresolvers\n: {\n\nQuery\n: {\nbooks\n: () => {\n\t\t\treturn [\\\n\t\t\t{\\\n\\\ttitle\\\n: 'Elysia',\\\n\\\tauthor\\\n: 'saltyAom'\\\n\t\t\t}\\\\\n\t\t]\n\t\t}\n}\n}\n})\n\t)\n\t.\nlisten\n(3000)\n```\n\nAccessing `/graphql` should show Apollo GraphQL playground work with.\n\n## Context\n\nBecause Elysia is based on Web Standard Request and Response which is different from Node's `HttpRequest` and `HttpResponse` that Express uses, results in `req, res` being undefined in context.\n\nBecause of this, Elysia replaces both with `context` like route parameters.\n\ntypescript\n\n```\nconst app = new Elysia()\n\t.use(\n\t\tapollo({\n\t\t\ttypeDefs,\n\t\t\tresolvers,\n\t\t\tcontext: async ({ request }) => {\n\t\t\t\tconst authorization = request.headers.get('Authorization')\n\n\t\t\t\treturn {\n\t\t\t\t\tauthorization\n\t\t\t\t}\n\t\t\t}\n\t\t\t})\n\t)\n\t.listen(3000)\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-apollo", "title": "GraphQL Apollo Plugin", "description": "Plugin for elysia for using GraphQL Apollo.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:16:02", "type": "overview", "page_metadata": {"description": "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with ", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "ogTitle": "Apollo GraphQL Plugin - ElysiaJS", "og:title": "Apollo GraphQL Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with \"bun add graphql @elysiajs/apollo @apollo/server\"."], "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Apollo GraphQL Plugin - ElysiaJS | ElysiaJS", "og:image:width": "1920", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "9d45a639-9f96-4fcf-bb7e-04d2a8095ff5", "sourceURL": "https://elysiajs.com/plugins/graphql-apollo", "url": "https://elysiajs.com/plugins/graphql-apollo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add graphql @elysiajs/apollo @apollo/server\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-apollo", "title": "GraphQL Apollo Plugin", "description": "Plugin for elysia for using GraphQL Apollo.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:16:02", "type": "section_detail", "page_metadata": {"description": "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with ", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "ogTitle": "Apollo GraphQL Plugin - ElysiaJS", "og:title": "Apollo GraphQL Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with \"bun add graphql @elysiajs/apollo @apollo/server\"."], "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Apollo GraphQL Plugin - ElysiaJS | ElysiaJS", "og:image:width": "1920", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "9d45a639-9f96-4fcf-bb7e-04d2a8095ff5", "sourceURL": "https://elysiajs.com/plugins/graphql-apollo", "url": "https://elysiajs.com/plugins/graphql-apollo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\n\ntypescript\n\n```\nimport {\nElysia\n} from 'elysia'\nimport {\napollo,\n gq\nl\n} from '@elysiajs/apollo'\n\nconst\napp\n = new\nElysia\n()\n\t.\nuse\n(\n\t\napollo\n(\n\t{\ntypeDefs\n:\ngql\n`\n\t\ntype Book {\n\t\ttitle: String\n\t\tauthor: String\n\t}\n\t\ntype Query {\n\t\tbooks: [Book]\n\t}\n\t\n`,\n\nresolvers\n: {\n\nQuery\n: {\nbooks\n: () => {\n\t\t\treturn [\\\n\t\t\t{\\\n\\\ttitle\\\n: 'Elysia',\\\n\\\tauthor\\\n: 'saltyAom'\\\n\t\t\t}\\\\\n\t\t]\n\t\t}\n}\n}\n})\n\t)\n\t.\nlisten\n(3000)\n```\n\nAccessing `/graphql` should show Apollo GraphQL playground work with..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-apollo", "title": "GraphQL Apollo Plugin", "description": "Plugin for elysia for using GraphQL Apollo.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:16:02", "type": "section_detail", "page_metadata": {"description": "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with ", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "ogTitle": "Apollo GraphQL Plugin - ElysiaJS", "og:title": "Apollo GraphQL Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with \"bun add graphql @elysiajs/apollo @apollo/server\"."], "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Apollo GraphQL Plugin - ElysiaJS | ElysiaJS", "og:image:width": "1920", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "9d45a639-9f96-4fcf-bb7e-04d2a8095ff5", "sourceURL": "https://elysiajs.com/plugins/graphql-apollo", "url": "https://elysiajs.com/plugins/graphql-apollo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I context in elysiajs?\n\nAssistant: To context in elysiajs, here's what you do:\nBecause Elysia is based on Web Standard Request and Response which is different from Node's `HttpRequest` and `HttpResponse` that Express uses, results in `req, res` being undefined in context.\n\nBecause of this, Elysia replaces both with `context` like route parameters.\n\ntypescript\n\n```\nconst app = new Elysia()\n\t.use(\n\t\tapollo({\n\t\t\ttypeDefs,\n\t\t\tresolvers,\n\t\t\tcontext: async ({ request }) => {\n\t\t\t\tconst authorization = request.headers.get('Authorization')\n\n\t\t\t\treturn {\n\t\t\t\t\tauthorization\n\t\t\t\t}\n\t\t\t}\n\t\t\t})\n\t)\n\t.listen(3000)\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-apollo", "title": "GraphQL Apollo Plugin", "description": "Plugin for elysia for using GraphQL Apollo.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:16:02", "type": "section_detail", "page_metadata": {"description": "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with ", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "ogTitle": "Apollo GraphQL Plugin - ElysiaJS", "og:title": "Apollo GraphQL Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with \"bun add graphql @elysiajs/apollo @apollo/server\"."], "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Apollo GraphQL Plugin - ElysiaJS | ElysiaJS", "og:image:width": "1920", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "9d45a639-9f96-4fcf-bb7e-04d2a8095ff5", "sourceURL": "https://elysiajs.com/plugins/graphql-apollo", "url": "https://elysiajs.com/plugins/graphql-apollo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for GraphQL Apollo Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add graphql @elysiajs/apollo @apollo/server\n```\n\nThis snippet shows you how to installation command, which is an important aspect of graphql apollo plugin.\n\n**Basic Usage Example**:\n\n```yaml\nimport {\nElysia\n} from 'elysia'\nimport {\napollo,\n gq\nl\n} from '@elysiajs/apollo'\n\nconst\napp\n = new\nElysia\n()\n\t.\nuse\n(\n\t\napollo\n(\n\t{\ntypeDefs\n:\ngql\n`\n\t\ntype Book {\n\t\ttitle: String\n\t\tauthor: String\n\t}\n\t\ntype Query {\n\t\tbooks: [Book]\n\t}\n\t\n`,\n\nresolvers\n: {\n\nQuery\n: {\nbooks\n: () => {\n\t\t\treturn [\\\n\t\t\t{\\\n\\\ttitle\\\n: 'Elysia',\\\n\\\tauthor\\\n: 'saltyAom'\\\n\t\t\t}\\\\\n\t\t]\n\t\t}\n}\n}\n})\n\t)\n\t.\nlisten\n(3000)\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of graphql apollo plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-apollo", "title": "GraphQL Apollo Plugin", "description": "Plugin for elysia for using GraphQL Apollo.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:16:02", "type": "code_examples", "page_metadata": {"description": "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with ", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "ogTitle": "Apollo GraphQL Plugin - ElysiaJS", "og:title": "Apollo GraphQL Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with \"bun add graphql @elysiajs/apollo @apollo/server\"."], "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Apollo GraphQL Plugin - ElysiaJS | ElysiaJS", "og:image:width": "1920", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "9d45a639-9f96-4fcf-bb7e-04d2a8095ff5", "sourceURL": "https://elysiajs.com/plugins/graphql-apollo", "url": "https://elysiajs.com/plugins/graphql-apollo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using GraphQL Apollo Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAccessing `/graphql` should show Apollo GraphQL playground work with.\n\nElysia replaces `req, res` with `context` for route parameters.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-apollo", "title": "GraphQL Apollo Plugin", "description": "Plugin for elysia for using GraphQL Apollo.", "has_code_examples": true, "has_best_practices": true, "section_count": 3, "timestamp": "2025-03-01 03:16:02", "type": "best_practices", "page_metadata": {"description": "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with ", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:card": "summary_large_image", "ogTitle": "Apollo GraphQL Plugin - ElysiaJS", "og:title": "Apollo GraphQL Plugin - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Apollo on the Elysia server. Start by installing the plugin with \"bun add graphql @elysiajs/apollo @apollo/server\"."], "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Apollo GraphQL Plugin - ElysiaJS | ElysiaJS", "og:image:width": "1920", "language": "en-US", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "9d45a639-9f96-4fcf-bb7e-04d2a8095ff5", "sourceURL": "https://elysiajs.com/plugins/graphql-apollo", "url": "https://elysiajs.com/plugins/graphql-apollo", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Server Timing Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Server Timing Plugin in elysiajs.\n\n# Server Timing Plugin\n\nThis plugin adds support for auditing performance bottlenecks with Server Timing APIHere's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/server-timing\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\nserverTiming\n\n} from '@elysiajs/server-timing'\n\nnew\nElysia\n()\n    .use(\nserverTiming()\n)\n    .get('/', () => 'hello')\n    .listen(3000)\n```\n\nServer Timing then will append header 'Server-Timing' with log duration, function name, and detail for each life-cycle function.\n\nTo inspect, open browser developer tools > Network > [Request made through Elysia server] > Timing.\n\n![Developer tools showing Server Timing screenshot](https://elysiajs.com/assets/server-timing.webp)\n\nNow you can effortlessly audit the performance bottleneck of your server.\n\n## Config\n\nBelow is a config which is accepted by the plugin\n\n## enabled\n\n@default `NODE_ENV !== 'production'`\n\nDetermine whether or not Server Timing should be enabled\n\n## allow\n\n@default `undefined`\n\nA condition whether server timing should be log\n\n## trace\n\n@default `undefined`\n\nAllow Server Timing to log specified life-cycle events:\n\nTrace accepts objects of the following:\n\n- request: capture duration from request\n- parse: capture duration from parse\n- transform: capture duration from transform\n- beforeHandle: capture duration from beforeHandle\n- handle: capture duration from the handle\n- afterHandle: capture duration from afterHandle\n- total: capture total duration from start to finish\n\n## Pattern\n\nBelow you can find the common patterns to use the plugin.\n\n## Allow Condition\n\nYou may disable Server Timing on specific routes via `allow` property\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\nserverTiming\n\n} from '@elysiajs/server-timing'\n\nnew\nElysia\n()\n    .use(\nserverTiming({\nallow: ({\nrequest\n}) => {\n                return new\nURL\n(\nrequest\n.url\n).pathname\n !== '/no-trace'\n            }\n        })\n    )\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/server-timing\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\nserverTiming\n\n} from '@elysiajs/server-timing'\n\nnew\nElysia\n()\n    .use(\nserverTiming()\n)\n    .get('/', () => 'hello')\n    .listen(3000)\n```\n\nServer Timing then will append header 'Server-Timing' with log duration, function name, and detail for each life-cycle function.\n\nTo inspect, open browser developer tools > Network > [Request made through Elysia server] > Timing.\n\n![Developer tools showing Server Timing screenshot](https://elysiajs.com/assets/server-timing.webp)\n\nNow you can effortlessly audit the performance bottleneck of your server..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nBelow is a config which is accepted by the plugin.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I enabled in elysiajs?\n\nAssistant: To enabled in elysiajs, here's what you do:\n@default `NODE_ENV !== 'production'`\n\nDetermine whether or not Server Timing should be enabled.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I allow in elysiajs?\n\nAssistant: To allow in elysiajs, here's what you do:\n@default `undefined`\n\nA condition whether server timing should be log.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trace in elysiajs?\n\nAssistant: To trace in elysiajs, here's what you do:\n@default `undefined`\n\nAllow Server Timing to log specified life-cycle events:\n\nTrace accepts objects of the following:\n\n- request: capture duration from request\n- parse: capture duration from parse\n- transform: capture duration from transform\n- beforeHandle: capture duration from beforeHandle\n- handle: capture duration from the handle\n- afterHandle: capture duration from afterHandle\n- total: capture total duration from start to finish.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I pattern in elysiajs?\n\nAssistant: To pattern in elysiajs, here's what you do:\nBelow you can find the common patterns to use the plugin..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I allow condition in elysiajs?\n\nAssistant: To allow condition in elysiajs, here's what you do:\nYou may disable Server Timing on specific routes via `allow` property\ntypescript\n\n```\nimport {\nElysia\n\n} from 'elysia'\nimport {\nserverTiming\n\n} from '@elysiajs/server-timing'\n\nnew\nElysia\n()\n    .use(\nserverTiming({\nallow: ({\nrequest\n}) => {\n                return new\nURL\n(\nrequest\n.url\n).pathname\n !== '/no-trace'\n            }\n        })\n    )\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Server Timing Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/server-timing\n```\n\nThis snippet shows you how to installation command, which is an important aspect of server timing plugin.\n\n**Basic Usage Example**:\n\n```yaml\nimport {\nElysia\n} from 'elysia'\nimport {\nserverTiming\n} from '@elysiajs/server-timing'\n\nnew\nElysia\n()\n    .use(\nserverTiming()\n)\n    .get('/', () => 'hello')\n    .listen(3000)\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of server timing plugin.\n\n**Allow Condition Example**:\n\n```yaml\nimport {\nElysia\n} from 'elysia'\nimport {\nserverTiming\n} from '@elysiajs/server-timing'\n\nnew\nElysia\n()\n    .use(\nserverTiming({\nallow: ({\nrequest\n}) => {\n                return new\nURL\n(\nrequest\n.url\n).pathname\n !== '/no-trace'\n            }\n        })\n    )\n```\n\nThis snippet shows you how to allow condition example, which is an important aspect of server timing plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Server Timing Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo inspect the Server Timing, open browser developer tools > Network > [Request made through Elysia server] > Timing.\n\nUse the 'allow' property to disable Server Timing on specific routes.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/server-timing", "title": "Server Timing Plugin", "description": "This plugin adds support for auditing performance bottlenecks with Server Timing API", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:16:16", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "og:title": "Server Timing Plugin - ElysiaJS", "generator": "VitePress v1.6.3", "title": "Server Timing Plugin - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with \"bun add @elysiajs/server-timing\"."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "og:image:width": "1920", "ogTitle": "Server Timing Plugin - ElysiaJS", "description": "Plugin for Elysia for performance audit via Server Timing API. Start by installing the plugin with ", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "scrapeId": "bbe5592b-dbf6-4036-ac96-5a7e1b916022", "sourceURL": "https://elysiajs.com/plugins/server-timing", "url": "https://elysiajs.com/plugins/server-timing", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 1.0 - Lament of the Fallen is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 1.0 - Lament of the Fallen in elysiajs.\n\n# Elysia 1.0 - Lament of the Fallen\n\nElysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.Here's a quick rundown of what this is about:\n\n## Introduction\n\nElysia 1.0 is the first stable release after development for 1.8 years. Since started, we have always waiting for a framework that focuses on developer experience, velocity, and how to make writing code for humans, not a machine. We battle-test Elysia in various situations, simulate medium and large-scale projects, shipping code to clients and this is the first version that we felt confident enough to ship. Elysia 1.0 introduces significant improvements and contains 1 necessary breaking change.\n\n## Notable Improvements\n\n- Sucrose - Rewritten pattern matching static analysis instead of RegEx\n- Improved startup time up to 14x\n- Remove ~40 routes/instance TypeScript limitation\n- Faster type inference up to ~3.8x\n- Treaty 2\n- Hook type (breaking changes)\n- Inline error for strict error check\n\n## Sucrose\n\nElysia is optimized to have an excellent performance proven in various benchmarks, one of the main factors is thanks to Bun, and our custom JIT static code analysis. If you are not aware, Elysia has some sort of \"compiler\" embedded that reads your code and produces an optimized way to handle functions. The process is fast and happens on the fly without a need for a build step. However, it's challenging to maintain as it's written mostly in many complex RegEx, and can be slow at times if recursion happens. That's why we rewrote our static analysis part to separate the code injection phase using a hybrid approach between partial AST-based and pattern-matching name \"Sucrose\". Instead of using full AST-based which is more accurate, we choose to implement only a subset of rules that is needed to improve performance as it needs to be fast on runtime. Sucrose is good at inferring the recursive property of the handler function accurately with low memory usage, resulting in up to 37% faster inference time and significantly reduced memory usage.\n\n## Improved Startup Time\n\nThanks to Sucrose, and separation from the dynamic injection phase, we can defer the analysis time JIT instead of AOT. In other words, the \"compile\" phase can be lazily evaluated. Offloading the evaluation phase from AOT to JIT when a route is matched for the first time and caching the result to compile on demand instead of all routes before server start. In a runtime performance, a single compilation is usually fast and takes no longer than 0.01-0.03 ms (millisecond not second). In a medium-sized application and stress test, we measure up to between ~6.5-14x faster start-up time.\n\n## Remove ~40 Routes/Instance Limit\n\nPreviously you could only stack up to ~40 routes / 1 Elysia instance since Elysia 0.1. This is the limitation of TypeScript that each queue that has a limited memory and if exceeded, TypeScript will think that \"Type instantiation is excessively deep and possibly infinite\". As a workaround, we need to separate an instance into a controller to overcome the limit and remerge the type to offload the queue. However, starting from Elysia 1.0, we have overcome the limit after a year after optimizing for type-performance, specifically Tail Call Optimization, and variances. This means theoretically, we can stack an unlimited amount of routes and methods until TypeScript breaks.\n\n## Type Inference Improvement\n\nThanks to the effort we put into optimization, we measure up to ~82% in most Elysia servers. Thanks to the removed limitation of stack, and improved type performance, we can expect almost instant type check and auto-completion even after 500 routes stacks. Up to 13x faster for Eden Treaty, type inference performance by precomputing the type instead offload type remap to Eden.\n\n## Treaty 2\n\nWe ask you for feedback on Eden Treaty what you like and what could have been improved. and you have given us some flaws in Treaty design and several proposals to improvement. That's why today, we introduce Eden Treaty 2, an overhaul to a more ergonomic design. As much as we dislike breaking change, Treaty 2 is a successor to Treaty 1. What's new in Treaty 2: More ergonomic syntax, End-to-end type safety for Unit Test, Interceptor, No \"$\" prefix and property.\n\n## Hook Type (Breaking Change)\n\nWe hate breaking changes, and this is the first time we do it in large-scale. We put a lot of effort into API design to reduce changes made to Elysia, but this is necessary to fix a flawed design. Previously when we added a hook with \"on\" like onTransform, or onBeforeHandle, it would become a global hook. However, we found several problems arise from this behavior. To fix this, we introduce a hook type to specify how the hook should be inherited by introducing a \"hook-type\".\n\n## Inline Error\n\nStarting from Elysia 0.8, we can use the error function to return a response with a status code for Eden inference. However, this has some flaws. Inline error can produce a fine-grained type from a schema, providing type narrowing, auto-completion, and type checking to the accuracy of value.\n\n## What Does It Mean for v1, and What's Next\n\nReaching stable release means we believe that Elysia is stable enough and ready to be used in production. Maintaining backward compatibility is now one of our goals, putting effort into not introducing breaking changes to Elysia except for security.\n\n## Notable Improvement\n\n- fine-grained reactive cookie\n- using single source of truth for cookie\n- macro support for websocket\n- add mapResolve\n- add { as: 'global' | 'scoped' | 'local' } to lifecycle event\n- add ephemeral type\n- inline error to handler\n- inline error has auto-completion and type checking based on status code\n- handler now check return type of error based on status code\n- utility Elysia._types for types inference\n- Provide user friendly error for failed parse\n- handler now infers return type for error status for Treaty\n- t.Date now allow stringified date\n- improves type test case\n- add test case for all life-cycle\n- resolve, mapResolve, derive, mapDerive use ephemeral type to scope down accurately\n- inference query dynamic variable.\n\n## Breaking Change\n\nlifecycle is now local first.\n\n## Change\n\n- group private API property\n- move Elysia.routes to Elysia.router.history\n- detect possible json before return\n- unknown response now return as-is instead of JSON.stringify()\n- change Elysia validation error to JSON instead of string.\n\n## Bug Fix\n\n- Async Derive leaks request context to other requests if aot: true\n- Empty ObjectString missing validation inside query schema\n- Beta: undefined class when using decorate and derive\n- onStop callback called twice when calling .stop\n- mapDerive now resolve to Singleton['derive'] instead of Singleton['store']\n- ValidationError doesn't return content-type as application/json\n- validate error(status, value) validate per status\n- derive/resolve always scoped to Global\n- duplicated onError call if not handled\n- server timing breaks beforeHandle guards\n- cookie.remove() doesn't set correct cookie path.\n\n## Afterword\n\nThe following contains personal feeling, possibly venting, ranting, possibly cringe and unprofessionalism that shouldn't be written in software release note. You may choose to not continue reading as we have stated all the necessary content for the release.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "overview", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I introduction in elysiajs?\n\nAssistant: To introduction in elysiajs, here's what you do:\nElysia 1.0 is the first stable release after development for 1.8 years. Since started, we have always waiting for a framework that focuses on developer experience, velocity, and how to make writing code for humans, not a machine. We battle-test Elysia in various situations, simulate medium and large-scale projects, shipping code to clients and this is the first version that we felt confident enough to ship. Elysia 1.0 introduces significant improvements and contains 1 necessary breaking change..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable improvements in elysiajs?\n\nAssistant: To notable improvements in elysiajs, here's what you do:\n- Sucrose - Rewritten pattern matching static analysis instead of RegEx\n- Improved startup time up to 14x\n- Remove ~40 routes/instance TypeScript limitation\n- Faster type inference up to ~3.8x\n- Treaty 2\n- Hook type (breaking changes)\n- Inline error for strict error check.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I sucrose in elysiajs?\n\nAssistant: To sucrose in elysiajs, here's what you do:\nElysia is optimized to have an excellent performance proven in various benchmarks, one of the main factors is thanks to Bun, and our custom JIT static code analysis. If you are not aware, Elysia has some sort of \"compiler\" embedded that reads your code and produces an optimized way to handle functions. The process is fast and happens on the fly without a need for a build step. However, it's challenging to maintain as it's written mostly in many complex RegEx, and can be slow at times if recursion happens. That's why we rewrote our static analysis part to separate the code injection phase using a hybrid approach between partial AST-based and pattern-matching name \"Sucrose\". Instead of using full AST-based which is more accurate, we choose to implement only a subset of rules that is needed to improve performance as it needs to be fast on runtime. Sucrose is good at inferring the recursive property of the handler function accurately with low memory usage, resulting in up to 37% faster inference time and significantly reduced memory usage..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I improved startup time in elysiajs?\n\nAssistant: To improved startup time in elysiajs, here's what you do:\nThanks to Sucrose, and separation from the dynamic injection phase, we can defer the analysis time JIT instead of AOT. In other words, the \"compile\" phase can be lazily evaluated. Offloading the evaluation phase from AOT to JIT when a route is matched for the first time and caching the result to compile on demand instead of all routes before server start. In a runtime performance, a single compilation is usually fast and takes no longer than 0.01-0.03 ms (millisecond not second). In a medium-sized application and stress test, we measure up to between ~6.5-14x faster start-up time..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I remove ~40 routes/instance limit in elysiajs?\n\nAssistant: To remove ~40 routes/instance limit in elysiajs, here's what you do:\nPreviously you could only stack up to ~40 routes / 1 Elysia instance since Elysia 0.1. This is the limitation of TypeScript that each queue that has a limited memory and if exceeded, TypeScript will think that \"Type instantiation is excessively deep and possibly infinite\". As a workaround, we need to separate an instance into a controller to overcome the limit and remerge the type to offload the queue. However, starting from Elysia 1.0, we have overcome the limit after a year after optimizing for type-performance, specifically Tail Call Optimization, and variances. This means theoretically, we can stack an unlimited amount of routes and methods until TypeScript breaks..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type inference improvement in elysiajs?\n\nAssistant: To type inference improvement in elysiajs, here's what you do:\nThanks to the effort we put into optimization, we measure up to ~82% in most Elysia servers. Thanks to the removed limitation of stack, and improved type performance, we can expect almost instant type check and auto-completion even after 500 routes stacks. Up to 13x faster for Eden Treaty, type inference performance by precomputing the type instead offload type remap to Eden..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I treaty 2 in elysiajs?\n\nAssistant: To treaty 2 in elysiajs, here's what you do:\nWe ask you for feedback on Eden Treaty what you like and what could have been improved. and you have given us some flaws in Treaty design and several proposals to improvement. That's why today, we introduce Eden Treaty 2, an overhaul to a more ergonomic design. As much as we dislike breaking change, Treaty 2 is a successor to Treaty 1. What's new in Treaty 2: More ergonomic syntax, End-to-end type safety for Unit Test, Interceptor, No \"$\" prefix and property..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I hook type (breaking change) in elysiajs?\n\nAssistant: To hook type (breaking change) in elysiajs, here's what you do:\nWe hate breaking changes, and this is the first time we do it in large-scale. We put a lot of effort into API design to reduce changes made to Elysia, but this is necessary to fix a flawed design. Previously when we added a hook with \"on\" like onTransform, or onBeforeHandle, it would become a global hook. However, we found several problems arise from this behavior. To fix this, we introduce a hook type to specify how the hook should be inherited by introducing a \"hook-type\"..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I inline error in elysiajs?\n\nAssistant: To inline error in elysiajs, here's what you do:\nStarting from Elysia 0.8, we can use the error function to return a response with a status code for Eden inference. However, this has some flaws. Inline error can produce a fine-grained type from a schema, providing type narrowing, auto-completion, and type checking to the accuracy of value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I what does it mean for v1, and what's next in elysiajs?\n\nAssistant: To what does it mean for v1, and what's next in elysiajs, here's what you do:\nReaching stable release means we believe that Elysia is stable enough and ready to be used in production. Maintaining backward compatibility is now one of our goals, putting effort into not introducing breaking changes to Elysia except for security..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable improvement in elysiajs?\n\nAssistant: To notable improvement in elysiajs, here's what you do:\n- fine-grained reactive cookie\n- using single source of truth for cookie\n- macro support for websocket\n- add mapResolve\n- add { as: 'global' | 'scoped' | 'local' } to lifecycle event\n- add ephemeral type\n- inline error to handler\n- inline error has auto-completion and type checking based on status code\n- handler now check return type of error based on status code\n- utility Elysia._types for types inference\n- Provide user friendly error for failed parse\n- handler now infers return type for error status for Treaty\n- t.Date now allow stringified date\n- improves type test case\n- add test case for all life-cycle\n- resolve, mapResolve, derive, mapDerive use ephemeral type to scope down accurately\n- inference query dynamic variable..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I breaking change in elysiajs?\n\nAssistant: To breaking change in elysiajs, here's what you do:\nlifecycle is now local first..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I change in elysiajs?\n\nAssistant: To change in elysiajs, here's what you do:\n- group private API property\n- move Elysia.routes to Elysia.router.history\n- detect possible json before return\n- unknown response now return as-is instead of JSON.stringify()\n- change Elysia validation error to JSON instead of string..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bug fix in elysiajs?\n\nAssistant: To bug fix in elysiajs, here's what you do:\n- Async Derive leaks request context to other requests if aot: true\n- Empty ObjectString missing validation inside query schema\n- Beta: undefined class when using decorate and derive\n- onStop callback called twice when calling .stop\n- mapDerive now resolve to Singleton['derive'] instead of Singleton['store']\n- ValidationError doesn't return content-type as application/json\n- validate error(status, value) validate per status\n- derive/resolve always scoped to Global\n- duplicated onError call if not handled\n- server timing breaks beforeHandle guards\n- cookie.remove() doesn't set correct cookie path..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I afterword in elysiajs?\n\nAssistant: To afterword in elysiajs, here's what you do:\nThe following contains personal feeling, possibly venting, ranting, possibly cringe and unprofessionalism that shouldn't be written in software release note. You may choose to not continue reading as we have stated all the necessary content for the release..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "section_detail", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 1.0 - Lament of the Fallen in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**TypeScript Example for Route Limit**:\n\n```yaml\nconst main = new Elysia()\n    .get('/1', () => '1')\n    .get('/2', () => '2')\n    .get('/3', () => '3')\n    // repeat for 40 times\n    .get('/42', () => '42')\n    // Type instantiation is excessively deep and possibly infinite\n```\n\nThis snippet shows you how to typescript example for route limit, which is an important aspect of elysia 1.0 - lament of the fallen.\n\n**Workaround for Route Limit**:\n\n```yaml\nconst controller1 = new Elysia()\n    .get('/42', () => '42')\n    .get('/43', () => '43')\n\nconst main = new Elysia()\n    .get('/1', () => '1')\n    .get('/2', () => '2')\n    // repeat for 40 times\n    .use(controller1)\n```\n\nThis snippet shows you how to workaround for route limit, which is an important aspect of elysia 1.0 - lament of the fallen.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "code_examples", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 1.0 - Lament of the Fallen in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nRemember, ElysiaJS is an open source library maintain by volunteers, and isn't associate with Mihoyo nor Hoyoverse. But we are a huge fan of Honkai series, alright?\n\nWe recommend using inline error instead of import error for more accurate type safety.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-10", "title": "Elysia 1.0 - Lament of the Fallen", "description": "Elysia 1.0 is the first stable release after development for 1.8 years, introducing significant improvements and one necessary breaking change.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 03:19:59", "type": "best_practices", "page_metadata": {"og:title": "Elysia 1.0 - Lament of the Fallen", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "viewport": ["width=device-width,initial-scale=1,user-scalable=no", "width=device-width, initial-scale=1.0"], "title": "Elysia 1.0 - Lament of the Fallen | ElysiaJS", "ogDescription": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "twitter:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "ogTitle": "Elysia 1.0 - Lament of the Fallen", "og:description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "description": "Introducing Sucrose, a better static code analysis engine, improved starts up time up to 14x, remove 40 routes/instance limitation, faster type inference up to ~3.8x, Eden Treaty 2, Hook type (breaking change), and inline error for strict type check.", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "og:image": "https://elysiajs.com/blog/elysia-10/lament-of-the-fallen.webp", "language": "en-US", "scrapeId": "7b9c681a-26a3-4638-a26a-b4efd6a4e455", "sourceURL": "https://elysiajs.com/blog/elysia-10", "url": "https://elysiajs.com/blog/elysia-10", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what GraphQL Yoga Plugin is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain GraphQL Yoga Plugin in elysiajs.\n\n# GraphQL Yoga Plugin\n\nThis plugin integrates GraphQL yoga with ElysiaHere's a quick rundown of what this is about:\n\n## Installation\n\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/graphql-yoga\n```\n\n## Usage\n\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n } from 'elysia'\nimport {\nyoga\n\n } from '@elysiajs/graphql-yoga'\n\nconst\napp\n = new\nElysia\n()\n\t.\nuse\n(\n\nyoga\n(\n{\ntypeDefs\n: /* GraphQL */ `\n\t\ttype Query {\n\t\t\thi: String\n\t\t}\n\t`,\n\nresolvers\n: {\nQuery\n: {\nhi\n: () => 'Hello from Elysia'\n\t\t}\n\t}\n}\n)\n)\n\t.\nlisten\n(3000)\n```\n\nAccessing `/graphql` in the browser (GET request) would show you a GraphiQL instance for the GraphQL-enabled Elysia server.\n\n## Optional Peer Dependencies\n\noptional: you can install a custom version of optional peer dependencies as well:\n\nbash\n\n```\nbun add graphql graphql-yoga\n```\n\n## Resolver\n\nElysia uses [Mobius](https://github.com/saltyaom/mobius) to infer type from **typeDefs** field automatically, allowing you to get full type-safety and auto-complete when typing **resolver** types.\n\n## Context\n\nYou can add custom context to the resolver function by adding **context**\n\nts\n\n```\nimport { Elysia } from 'elysia'\nimport { yoga } from '@elysiajs/graphql-yoga'\n\nconst app = new Elysia()\n\t.use(\n\t\tyoga({\n\t\t\ttypeDefs: /* GraphQL */ `\n\t\t\t\ttype Query {\n\t\t\t\t\thi: String\n\t\t\t\t}\n\t\t\t`,\n\t\t\tcontext: {\n\t\t\t\tname: 'Mobius'\n\t\t\t},\n\t\t\t// If context is a function on this doesn't present\n\t\t\t// for some reason it won't infer context type\n\t\t\tuseContext(_) {},\n\t\t\tresolvers: {\n\t\t\t\tQuery: {\n\t\t\t\t\thi: async (parent, args, context) => context.name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t)\n\t.listen(3000)\n```\n\n\n## Config\n\nThis plugin extends [GraphQL Yoga's createYoga options, please refer to the GraphQL Yoga documentation](https://the-guild.dev/graphql/yoga-server/docs) with inlining `schema` config to root.\n\nBelow is a config which is accepted by the plugin\n\n### path\n@default `/graphql`\n\nEndpoint to expose GraphQL handler\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "overview", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nInstall with:\n\nbash\n\n```\nbun add @elysiajs/graphql-yoga\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I usage in elysiajs?\n\nAssistant: To usage in elysiajs, here's what you do:\nThen use it:\ntypescript\n\n```\nimport {\nElysia\n\n } from 'elysia'\nimport {\nyoga\n\n } from '@elysiajs/graphql-yoga'\n\nconst\napp\n = new\nElysia\n()\n\t.\nuse\n(\n\nyoga\n(\n{\ntypeDefs\n: /* GraphQL */ `\n\t\ttype Query {\n\t\t\thi: String\n\t\t}\n\t`,\n\nresolvers\n: {\nQuery\n: {\nhi\n: () => 'Hello from Elysia'\n\t\t}\n\t}\n}\n)\n)\n\t.\nlisten\n(3000)\n```\n\nAccessing `/graphql` in the browser (GET request) would show you a GraphiQL instance for the GraphQL-enabled Elysia server..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I optional peer dependencies in elysiajs?\n\nAssistant: To optional peer dependencies in elysiajs, here's what you do:\noptional: you can install a custom version of optional peer dependencies as well:\n\nbash\n\n```\nbun add graphql graphql-yoga\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I resolver in elysiajs?\n\nAssistant: To resolver in elysiajs, here's what you do:\nElysia uses [Mobius](https://github.com/saltyaom/mobius) to infer type from **typeDefs** field automatically, allowing you to get full type-safety and auto-complete when typing **resolver** types..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I context in elysiajs?\n\nAssistant: To context in elysiajs, here's what you do:\nYou can add custom context to the resolver function by adding **context**\n\nts\n\n```\nimport { Elysia } from 'elysia'\nimport { yoga } from '@elysiajs/graphql-yoga'\n\nconst app = new Elysia()\n\t.use(\n\t\tyoga({\n\t\t\ttypeDefs: /* GraphQL */ `\n\t\t\t\ttype Query {\n\t\t\t\t\thi: String\n\t\t\t\t}\n\t\t\t`,\n\t\t\tcontext: {\n\t\t\t\tname: 'Mobius'\n\t\t\t},\n\t\t\t// If context is a function on this doesn't present\n\t\t\t// for some reason it won't infer context type\n\t\t\tuseContext(_) {},\n\t\t\tresolvers: {\n\t\t\t\tQuery: {\n\t\t\t\t\thi: async (parent, args, context) => context.name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t)\n\t.listen(3000)\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nThis plugin extends [GraphQL Yoga's createYoga options, please refer to the GraphQL Yoga documentation](https://the-guild.dev/graphql/yoga-server/docs) with inlining `schema` config to root.\n\nBelow is a config which is accepted by the plugin\n\n### path\n@default `/graphql`\n\nEndpoint to expose GraphQL handler.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "section_detail", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for GraphQL Yoga Plugin in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add @elysiajs/graphql-yoga\n```\n\nThis snippet shows you how to installation command, which is an important aspect of graphql yoga plugin.\n\n**Basic Usage Example**:\n\n```yaml\nimport {\nElysia\n } from 'elysia'\nimport {\nyoga\n } from '@elysiajs/graphql-yoga'\n\nconst\napp\n = new\nElysia\n()\n\t.\nuse\n(\n\nyoga\n(\n{\ntypeDefs\n: /* GraphQL */ `\n\t\ttype Query {\n\t\t\thi: String\n\t\t}\n\t`,\n\nresolvers\n: {\nQuery\n: {\nhi\n: () => 'Hello from Elysia'\n\t\t}\n\t}\n}\n)\n)\n\t.\nlisten\n(3000)\n```\n\nThis snippet shows you how to basic usage example, which is an important aspect of graphql yoga plugin.\n\n", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "code_examples", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using GraphQL Yoga Plugin in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia uses Mobius to infer type from typeDefs field automatically, allowing for full type-safety and auto-complete when typing resolver types.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/plugins/graphql-yoga", "title": "GraphQL Yoga Plugin", "description": "This plugin integrates GraphQL yoga with Elysia", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:20:13", "type": "best_practices", "page_metadata": {"generator": "VitePress v1.6.3", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with \"bun add graphql graphql-yoga @elysiajs/graphql-yoga\"."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "Plugin for Elysia that adds support for using GraphQL Yoga on the Elysia server. Start by installing the plugin with ", "language": "en-US", "ogTitle": "GraphQL Yoga Plugin - ElysiaJS", "ogImage": "https://elysiajs.com/assets/cover.jpg", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:title": "GraphQL Yoga Plugin - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "title": "GraphQL Yoga Plugin - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "scrapeId": "a28dc6cc-ee7e-4086-8085-749d588660fe", "sourceURL": "https://elysiajs.com/plugins/graphql-yoga", "url": "https://elysiajs.com/plugins/graphql-yoga", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.2 - The Blessing is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.2 - The Blessing in elysiajs.\n\n# Elysia 0.2 - The Blessing\n\nElysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.Here's a quick rundown of what this is about:\n\n## Defers / Lazy Loading Module\n\nWith Elysia 0.2 now add support for the lazy loading module and async plugin.\n\nThis made it possible to defer plugin registration and incrementally apply after the Elysia server is started to achieve the fastest possible start-up time in Serverless/Edge environments.\n\nTo create defers module, simply mark the plugin as async:\n\n```typescript\nconst plugin = async (app: Elysia) => {\n    const stuff = await doSomeHeavyWork()\n\n    return app.get('/heavy', stuff)\n}\n\napp.use(plugin)\n```\n\n## Lazy Loading\n\nSome modules might be heavy and importing before starting the server might not be a good idea.\n\nWe can tell Elysia to skip the module then register the module later, and register the module when finish loading by using `import` statement in `use`:\n\n```typescript\napp.use(import('./some-heavy-module'))\n```\n\nThis will register the module after the import is finished making the module lazy-load.\n\nDefers Plugin and lazy loading module will have all type-inference available right out of the box.\n\n## Reference Model\n\nNow Elysia can memorize schema and reference the schema directly in Schema fields, without creating an import file via `Elysia.setModel`\n\nThis list of schema available, brings auto-completion, complete type-inference, and validation as you expected from inline schema.\n\nTo use a reference model, first, register the model with `setModel`, then write a model name to reference a model in `schema`:\n\n```typescript\nconst app = new Elysia()\n    .setModel({\n        sign: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .post('/sign', ({ body }) => body, {\n        schema: {\n            body: 'sign',\n            response: 'sign'\n        }\n    })\n```\n\nThis will bring auto-completion of known models. And type reference stopping you from accidentally returning invalid type. Using `@elysiajs/swagger` will also create a separate `Model` section for listing available models. Reference also handles validation as you expected.\n\n## OpenAPI Detail field\n\nIntroducing new field `schema.detail` for customizing detail for the route following the standard of OpenAPI Schema V2 with auto-completion.\n\nThis allows you to write better documentation and fully editable Swagger as you want.\n\n## Union Type\n\nThe previous version of Elysia sometime has a problem with distinct Union types, as Elysia tries to catch the response to create a full type reference for Eden. Results in invalidation of possible types.\n\n## Union Response\n\nMade possible by Union Type, now returning multiple response status for `schema` now available using `schema.response[statusCode]`:\n\n```typescript\napp\n    .post(\n        '/json/:id',\n        ({ body, params: { id } }) => ({\n            ...body,\n            id\n        }),\n        {\n            schema: {\n                body: 'sign',\n                response: {\n                    200: t.Object({\n                        username: t.String(),\n                        password: t.String(),\n                        id: t.String()\n                    }),\n                    400: t.Object({\n                        error: t.String()\n                    })\n                }\n            }\n        }\n    )\n```\n\nElysia will try to validate all schema in `response` allowing one of the types to be returned. Return types are also supported report in Swagger's response.\n\n## Faster Type Inference\n\nAs Elysia 0.1 explore the possibility of using type inference for improving better Developer Experience, we found that sometimes it takes a long time to update type inference because of heavy type inference and in-efficient custom generic. With Elysia 0.2 now optimized for faster type-inference, preventing duplication of heavy type unwrap, results in better performance for updating type and inference.\n\n## Ecosystem\n\nWith Elysia 0.2 enabling async plugin and deferred module many new plugins that isn't possible before became reality. Like:\n\n- Elysia Static plugin with the non-blocking capability\n- Eden with union-type inference for multiple responses\n- New Elysia Apollo Plugin for Elysia\n\n## Notable Improvement\n\n- `onRequest` and `onParse` now can access `PreContext`\n- Support `application/x-www-form-urlencoded` by default\n- body parser now parse `content-type` with extra attribute eg. `application/json;charset=utf-8`\n- Decode URI parameter path parameter\n- Eden now reports an error if Elysia is not installed\n- Skip declaration of existing model and decorators.\n\n## Breaking Changes\n\n- `onParse` now accepts `(context: PreContext, contentType: string)` instead of `(request: Request, contentType: string)`\n  - To migrate, add `.request` to context to access `Request`.\n\n## Afterward\n\nThank you for supporting Elysia and being interested in this project. This release brings better DX and hopefully all you need to write great software with Bun. Now we have [Discord server](https://discord.gg/eaFJ2KDJck) where you can ask any questions about Elysia or just hang out and chill around is also welcome.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "overview", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I defers / lazy loading module in elysiajs?\n\nAssistant: To defers / lazy loading module in elysiajs, here's what you do:\nWith Elysia 0.2 now add support for the lazy loading module and async plugin.\n\nThis made it possible to defer plugin registration and incrementally apply after the Elysia server is started to achieve the fastest possible start-up time in Serverless/Edge environments.\n\nTo create defers module, simply mark the plugin as async:\n\n```typescript\nconst plugin = async (app: Elysia) => {\n    const stuff = await doSomeHeavyWork()\n\n    return app.get('/heavy', stuff)\n}\n\napp.use(plugin)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I lazy loading in elysiajs?\n\nAssistant: To lazy loading in elysiajs, here's what you do:\nSome modules might be heavy and importing before starting the server might not be a good idea.\n\nWe can tell Elysia to skip the module then register the module later, and register the module when finish loading by using `import` statement in `use`:\n\n```typescript\napp.use(import('./some-heavy-module'))\n```\n\nThis will register the module after the import is finished making the module lazy-load.\n\nDefers Plugin and lazy loading module will have all type-inference available right out of the box..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reference model in elysiajs?\n\nAssistant: To reference model in elysiajs, here's what you do:\nNow Elysia can memorize schema and reference the schema directly in Schema fields, without creating an import file via `Elysia.setModel`\n\nThis list of schema available, brings auto-completion, complete type-inference, and validation as you expected from inline schema.\n\nTo use a reference model, first, register the model with `setModel`, then write a model name to reference a model in `schema`:\n\n```typescript\nconst app = new Elysia()\n    .setModel({\n        sign: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .post('/sign', ({ body }) => body, {\n        schema: {\n            body: 'sign',\n            response: 'sign'\n        }\n    })\n```\n\nThis will bring auto-completion of known models. And type reference stopping you from accidentally returning invalid type. Using `@elysiajs/swagger` will also create a separate `Model` section for listing available models. Reference also handles validation as you expected..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I openapi detail field in elysiajs?\n\nAssistant: To openapi detail field in elysiajs, here's what you do:\nIntroducing new field `schema.detail` for customizing detail for the route following the standard of OpenAPI Schema V2 with auto-completion.\n\nThis allows you to write better documentation and fully editable Swagger as you want..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I union type in elysiajs?\n\nAssistant: To union type in elysiajs, here's what you do:\nThe previous version of Elysia sometime has a problem with distinct Union types, as Elysia tries to catch the response to create a full type reference for Eden. Results in invalidation of possible types..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I union response in elysiajs?\n\nAssistant: To union response in elysiajs, here's what you do:\nMade possible by Union Type, now returning multiple response status for `schema` now available using `schema.response[statusCode]`:\n\n```typescript\napp\n    .post(\n        '/json/:id',\n        ({ body, params: { id } }) => ({\n            ...body,\n            id\n        }),\n        {\n            schema: {\n                body: 'sign',\n                response: {\n                    200: t.Object({\n                        username: t.String(),\n                        password: t.String(),\n                        id: t.String()\n                    }),\n                    400: t.Object({\n                        error: t.String()\n                    })\n                }\n            }\n        }\n    )\n```\n\nElysia will try to validate all schema in `response` allowing one of the types to be returned. Return types are also supported report in Swagger's response..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I faster type inference in elysiajs?\n\nAssistant: To faster type inference in elysiajs, here's what you do:\nAs Elysia 0.1 explore the possibility of using type inference for improving better Developer Experience, we found that sometimes it takes a long time to update type inference because of heavy type inference and in-efficient custom generic. With Elysia 0.2 now optimized for faster type-inference, preventing duplication of heavy type unwrap, results in better performance for updating type and inference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ecosystem in elysiajs?\n\nAssistant: To ecosystem in elysiajs, here's what you do:\nWith Elysia 0.2 enabling async plugin and deferred module many new plugins that isn't possible before became reality. Like:\n\n- Elysia Static plugin with the non-blocking capability\n- Eden with union-type inference for multiple responses\n- New Elysia Apollo Plugin for Elysia.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable improvement in elysiajs?\n\nAssistant: To notable improvement in elysiajs, here's what you do:\n- `onRequest` and `onParse` now can access `PreContext`\n- Support `application/x-www-form-urlencoded` by default\n- body parser now parse `content-type` with extra attribute eg. `application/json;charset=utf-8`\n- Decode URI parameter path parameter\n- Eden now reports an error if Elysia is not installed\n- Skip declaration of existing model and decorators..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I breaking changes in elysiajs?\n\nAssistant: To breaking changes in elysiajs, here's what you do:\n- `onParse` now accepts `(context: PreContext, contentType: string)` instead of `(request: Request, contentType: string)`\n  - To migrate, add `.request` to context to access `Request`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I afterward in elysiajs?\n\nAssistant: To afterward in elysiajs, here's what you do:\nThank you for supporting Elysia and being interested in this project. This release brings better DX and hopefully all you need to write great software with Bun. Now we have [Discord server](https://discord.gg/eaFJ2KDJck) where you can ask any questions about Elysia or just hang out and chill around is also welcome..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 0.2 - The Blessing in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Defers Module Example**:\n\n```yaml\nconst plugin = async (app: Elysia) => {\n    const stuff = await doSomeHeavyWork()\n\n    return app.get('/heavy', stuff)\n}\n\napp.use(plugin)\n```\n\nThis snippet shows you how to defers module example, which is an important aspect of elysia 0.2 - the blessing.\n\n**Lazy Loading Example**:\n\n```yaml\napp.use(import('./some-heavy-module'))\n```\n\nThis snippet shows you how to lazy loading example, which is an important aspect of elysia 0.2 - the blessing.\n\n**Reference Model Example**:\n\n```yaml\nconst app = new Elysia()\n    .setModel({\n        sign: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .post('/sign', ({ body }) => body, {\n        schema: {\n            body: 'sign',\n            response: 'sign'\n        }\n    })\n```\n\nThis snippet shows you how to reference model example, which is an important aspect of elysia 0.2 - the blessing.\n\n**Union Response Example**:\n\n```yaml\napp\n    .post(\n        '/json/:id',\n        ({ body, params: { id } }) => ({\n            ...body,\n            id\n        }),\n        {\n            schema: {\n                body: 'sign',\n                response: {\n                    200: t.Object({\n                        username: t.String(),\n                        password: t.String(),\n                        id: t.String()\n                    }),\n                    400: t.Object({\n                        error: t.String()\n                    })\n                }\n            }\n        }\n    )\n```\n\nThis snippet shows you how to union response example, which is an important aspect of elysia 0.2 - the blessing.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "code_examples", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.2 - The Blessing in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse async plugins for deferred module registration to improve server start-up time.\n\nUtilize lazy loading for heavy modules to optimize server performance.\n\nLeverage reference models for better type inference and validation without excessive imports.\n\nCustomize OpenAPI details for improved documentation and Swagger integration.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-02", "title": "Elysia 0.2 - The Blessing", "description": "Elysia 0.2 brings improvements mainly on TypeScript performance, type-inference, better auto-completion, and new features to reduce boilerplate.", "has_code_examples": true, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:20:42", "type": "best_practices", "page_metadata": {"og:image:width": "1920", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "og:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "ogDescription": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.2 - The Blessing", "description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "generator": "VitePress v1.6.3", "twitter:image": "https://elysiajs.com/blog/elysia-02/blessing.webp", "title": "Elysia 0.2 - The Blessing | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-02/blessing.webp", "og:description": "Introducing Elysia 0.2, bringing more improvement, mainly on TypeScript performance, type-inference, and better auto-completion and some new features to reduce boilerplate.", "og:title": "Introducing Elysia 0.2 - The Blessing", "twitter:card": "summary_large_image", "scrapeId": "bbdfb381-914b-40ee-93ee-a167e4c49d3d", "sourceURL": "https://elysiajs.com/blog/elysia-02", "url": "https://elysiajs.com/blog/elysia-02", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 1.2 - You and Me is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 1.2 - You and Me in elysiajs.\n\n# Elysia 1.2 - You and Me\n\nElysia 1.2 focuses on commitment to expand universal runtime support and developer experience.Here's a quick rundown of what this is about:\n\n## Adapter\n\nOne of the most requested features is to support more runtimes.\n\nElysia 1.2 introduces **adapter** to allow Elysia to run on different runtimes.\n\n```ts\nimport { node } from '@elysiajs/node'\n\nnew Elysia({ adapter: node() })\n\t.get('/', 'Hello Node')\n\t.listen(3000)\n```\n\nElysia is designed to be run on Bun and will continue to have Bun as the primary runtime and prioritize feature on Bun first.\n\nHowever, we are giving you more choice to try Elysia on different environment that fits your need, eg. serverless like AWS Lambda, Supabase Function, etc.\n\nThe goal of Elysia's adapter is to provide a consistent API across different runtime while maintaining the best performance with the same code or with minimal changes for each runtime.\n\n## Performance\n\nPerformance is one of Elysia's strength. We do not compromise on performance.\n\nInstead of relying on a bridge to convert Web Standard's request to Node Request/Response. Elysia use the native Node API directly to achieve the best performance while providing Web Standard compatibility if needed.\n\nBy utilizing Sucrose static code analysis, it allows Elysia to be faster than most Web-Standard frameworks like Hono, h3, and even native Node framework like Fastify, Express.\n\n![Node Benchmark](https://elysiajs.com/blog/elysia-12/node-benchmark.webp)\n\nAs usual, you may find the benchmark in [Bun HTTP framework benchmark](https://github.com/saltyaom/bun-http-framework-benchmark).\n\nElysia now has supports runtime adapter for:\n\n- Bun\n- Web Standard (WinterCG) eg. Deno, Browser\n- Node (beta)\n\nAlthough Node adapter is still in beta, it has the most features you expected from returning Generator Stream to WebSocket. We recommended you to try it out.\n\nWe will continue to expand support for more runtimes in the future starting with:\n\n- Cloudflare Worker\n- AWS Lambda\n- uWebSocket.js\n\n## Universal runtime API\n\nTo be compatible with different runtime, Elysia now wrap over a hand-picked utility function to provide a consistent API across different runtime.\n\nFor example, in Bun you may use `Bun.file` to return a file response which is not available in Node.\n\n```ts\nimport { Elysia } from 'elysia'\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n\t.get('/', () => Bun.file('./public/index.html'))\n\t.get('/', () => file('./public/index.html'))\n```\n\nThese utility functions are a replicated of Bun's utility function designed to be compatible with runtime that Elysia has supports for which will be expanded in the future.\n\nCurrently, Elysia has supports for:\n\n- `file` - Return a file response\n- `form` - Return a formdata response\n- `server` - A port of Bun's `Server` type declaration.\n\n## Macro with resolve\n\nStarting with Elysia 1.2, you can now use `resolve` in macro.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.macro({\n\t\tuser: (enabled: true) => ({\n\t\t\tresolve: ({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t})\n\t.get('/', ({ user }) => user, { user: true })\n```\n\nWith the new macro object syntax, instead of retrieving lifecycle you can now return it instead to reduce boilerplate.\n\nHere's a comparison between the old and new syntax:\n\n```ts\n// ✅ Object Macro\nnew Elysia()\n\t.macro({\n\t\trole: (role: 'admin' | 'user') => ({\n\t\t\tbeforeHandle: ({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t\t})\n\n// ⚠️ Function Macro\nnew Elysia()\n\t.macro(({ onBeforeHandle }) => {\n\t\trole(role: 'admin' | 'user') {\n\t\t\tonBeforeHandle(({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t\t}\n\t})\n```\n\nBoth syntax are supported but the new object syntax is recommended. We don't have plan to remove the previous syntax but we will focus on the new object syntax with new features.\n\nINFO\n\nDue to TypeScript limitation, macro's `resolve` only works with the new object syntax but not with previous one.\n\n## Name Parser\n\nElysia 1.2 introduce a parser with a custom name, allowing you to specify which parser should be used for decoding request body.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.parser('custom', ({ contentType }) => {\n\t\tif (contentType === \"application/kivotos\")\n\t\t\treturn 'nagisa'\n\t})\n\t.post('/', ({ body }) => body, { parse: 'custom' })\n```\n\n`parser` has a similar API to `onParse` but with a custom name allowing you to reference it in a route.\n\nYou may also reference Elysia's built-in parser or provide multiple parsers to be used in order.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.parser('custom', ({ contentType }) => {\n\t\tif (contentType === \"application/kivotos\")\n\t\t\treturn 'nagisa'\n\t})\n\t.post('/', ({ body }) => body, { parse: ['custom', 'json'] })\n```\n\nParsers will be called in order, if the parser does not return a value, it will move to the next parser until one of the parser returns a value.\n\n## WebSocket\n\nWe have rewrite WebSocket to be more performant and match the API and behavior with the latest Bun's WebSocket API while maintaining compatibility with each runtime.\n\n```ts\nnew Elysia()\n\t.ws('/ws', {\n\t\tping: (message) => message,\n\t\tpong: (message) => message\n\t})\n```\n\nWebSocket now has a more consistent API with HTTP route and has a similar lifecycle as HTTP route.\n\n## TypeBox 0.34\n\nElysia 1.2 now has support for TypeBox 0.34.\n\nWith this update, Elysia now use TypeBox's `t.Module` to handle reference model to support circular recursive type.\n\n```ts\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n\t.model({\n\t\ta: t.Object({\n\t\t\ta: t.Optional(t.Ref('a'))\n\t\t})\n\t})\n\t.post('/recursive', ({ body }) => body, { body: 'a' })\n```\n\n## Reduced Memory usage\n\nWe have refactor Sucrose's generated code for a swappable code generation process.\n\nBy refactoring for a better code duplication, router optimization, and unnecessary code removal.\n\nThis allows Elysia to reuse code from several parts and reduce large portion of memory usage.\n\nFor our project, by simply upgrading to Elysia 1.2, we seen up to 2x memory reduction from 1.1.\n\n![Memory comparison between 1.1 and 1.2](https://elysiajs.com/blog/elysia-12/memory.webp)\n\nThis memory optimization is scaled with the number of routes and the complexity of the route. So you may see reduced memory usage exponentially.\n\n## Notable update\n\nBelow are some of the notable improvement that are made in Elysia 1.2.\n\n## Eden validation error\n\nEden also now automatically infers `422` status code if validation model is provided.\n\n```ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './app'\n\nconst api = treaty<App>('localhost:3000')\n\nconst { data, error } = await api.user.put({\n\tname: 'saltyaom'\n})\n\nif (error)\n\tswitch (error.status) {\n\t\tcase 422:\n\t\t\tconsole.log(error.summary)\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tconsole.error(error)\n\t}\n```\n\n## Router\n\nWe have updated route registration deduplication to be more optimized.\n\nPreviously Elysia will check all of the possible route to prevent route deduplication. Now Elysia use a checksum hash map to check if the route is already registered and merged routing and code generation process loop for static route registration to improve performance.\n\n## Changes\n\n- Event Listener now infers path parameter automatically based on scope\n- Add ‘scoped’ to bulk `as` for casting type to ‘scoped’ similar to ‘plugin’\n- Update `cookie` to 1.0.1\n- Update TypeBox to 0.33\n- `content-length` now accept number\n- use 16-degit hexadecimals for `id` in `trace`\n- disable `minify` in production build for better debugging/error reporting.\n\n## Breaking Change\n\nThere should be minor required changes to your codebase to adapt to upgrade to Elysia 1.2.\n\nHowever, these are all the changes that you need to be aware of.\n\n## parse\n\n`type` is now merged with `parse` to allow control over order of custom and built-in parser.\n\n```ts\nimport { Elysia, form, file } from 'elysia'\n\nnew Elysia()\n\t.post('/', ({ body }) => body, {\n\t\ttype: 'json',\n\t\tparse: 'json'\n\t})\n```\n\n## formdata\n\nStarting from 1.2, you now have to explicitly return `form` if the response is a formdata instead of automatically detect if file is present in 1-level deep object.\n\n```ts\nimport { Elysia, form, file } from 'elysia'\n\nnew Elysia()\n\t.post('/', ({ file }) => ({\n\t\t.post('/', ({ file }) => form({\n\t\t\ta: file('./public/kyuukurarin.mp4')\n\t\t}))\n\t})\n```\n\n## WebSocket\n\nWebSocket method now return their respective value instead of returning `WebSocket`.\n\nThus removing the ability to do method chaining.\n\nThis is to make WebSocket match the same API with Bun's WebSocket API for better compatibility and migration.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.ws('/', {\n\t\tmessage(ws) {\n\t\t\tws\n\t\t\t\t.send('hello')\n\t\t\t\t.send('world')\n\n\t\t\tws.send('hello')\n\t\t\tws.send('world')\n\t\t}\n\t})\n```\n\n## scoped\n\nElysia now removed the `constructor scoped` as it might be confused with `scope's scoped/global`\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({ scoped: false })\n\nconst scoped = new Elysia()\n\nconst main = new Elysia()\n\t.mount(scoped)\n```\n\n## Internal breaking changes\n\n- Remove router internal property static.http.staticHandlers\n- Router history compile now link with history composed.\n\n## Afterword\n\nElysia 1.2 is an ambitious update that we have been working on for a while.\n\nA gambit to expand Elysia's reach to more developer and more runtime but there are something else I want to say as well.\n\n## Let's start this again.\n\nHi, how are you? I hope you are doing well.\n\nI still love doing this, writing blog post about Elysia. It's has been a while since then.\n\nYou may noticed that it has been a while since the last update, and it's not a long one. I'm sorry for that.\n\nI hope you understand that we also have our own life to take care of. We are not a robot, we are human. Sometime about life, sometime about work, sometime about family, sometime financially.\n\n## I want to be with you all the time.\n\nDoing what I love, keep updating Elysia, keep writing blog post, keep making art but you know that I have something to take care of too.\n\nI have to bring food to table, I have take care of a lot of things financially. I have to take care of myself too.\n\nI hope you are doing well, I hope you are happy, I hope you are healthy, I hope you are safe.\n\nEven if I'm not here. A part of me known as Elysia will be with you.\n\nThanks for being with me.\n\n> Here I feel the touch brought by the real number solution.\n> \n> Ripples of two souls now have reached our double slits.\n> \n> Casting stripes of light and dark in the world as days and nights.\n> \n> You set me free under the sun.\n> \n> I fly your cradle dreams to the moon and back.\n> \n> A worm will turn into a butterfly,\n> \n> before one can answer \"who am I\".\n> \n> After the ice turns into water,\n> \n> the sea I hang upside down will be your sky.\n> \n> And we finally met again, Seele.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "overview", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I adapter in elysiajs?\n\nAssistant: To adapter in elysiajs, here's what you do:\nOne of the most requested features is to support more runtimes.\n\nElysia 1.2 introduces **adapter** to allow Elysia to run on different runtimes.\n\n```ts\nimport { node } from '@elysiajs/node'\n\nnew Elysia({ adapter: node() })\n\t.get('/', 'Hello Node')\n\t.listen(3000)\n```\n\nElysia is designed to be run on Bun and will continue to have Bun as the primary runtime and prioritize feature on Bun first.\n\nHowever, we are giving you more choice to try Elysia on different environment that fits your need, eg. serverless like AWS Lambda, Supabase Function, etc.\n\nThe goal of Elysia's adapter is to provide a consistent API across different runtime while maintaining the best performance with the same code or with minimal changes for each runtime..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I performance in elysiajs?\n\nAssistant: To performance in elysiajs, here's what you do:\nPerformance is one of Elysia's strength. We do not compromise on performance.\n\nInstead of relying on a bridge to convert Web Standard's request to Node Request/Response. Elysia use the native Node API directly to achieve the best performance while providing Web Standard compatibility if needed.\n\nBy utilizing Sucrose static code analysis, it allows Elysia to be faster than most Web-Standard frameworks like Hono, h3, and even native Node framework like Fastify, Express.\n\n![Node Benchmark](https://elysiajs.com/blog/elysia-12/node-benchmark.webp)\n\nAs usual, you may find the benchmark in [Bun HTTP framework benchmark](https://github.com/saltyaom/bun-http-framework-benchmark).\n\nElysia now has supports runtime adapter for:\n\n- Bun\n- Web Standard (WinterCG) eg. Deno, Browser\n- Node (beta)\n\nAlthough Node adapter is still in beta, it has the most features you expected from returning Generator Stream to WebSocket. We recommended you to try it out.\n\nWe will continue to expand support for more runtimes in the future starting with:\n\n- Cloudflare Worker\n- AWS Lambda\n- uWebSocket.js.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I universal runtime api in elysiajs?\n\nAssistant: To universal runtime api in elysiajs, here's what you do:\nTo be compatible with different runtime, Elysia now wrap over a hand-picked utility function to provide a consistent API across different runtime.\n\nFor example, in Bun you may use `Bun.file` to return a file response which is not available in Node.\n\n```ts\nimport { Elysia } from 'elysia'\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n\t.get('/', () => Bun.file('./public/index.html'))\n\t.get('/', () => file('./public/index.html'))\n```\n\nThese utility functions are a replicated of Bun's utility function designed to be compatible with runtime that Elysia has supports for which will be expanded in the future.\n\nCurrently, Elysia has supports for:\n\n- `file` - Return a file response\n- `form` - Return a formdata response\n- `server` - A port of Bun's `Server` type declaration..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I macro with resolve in elysiajs?\n\nAssistant: To macro with resolve in elysiajs, here's what you do:\nStarting with Elysia 1.2, you can now use `resolve` in macro.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.macro({\n\t\tuser: (enabled: true) => ({\n\t\t\tresolve: ({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t})\n\t.get('/', ({ user }) => user, { user: true })\n```\n\nWith the new macro object syntax, instead of retrieving lifecycle you can now return it instead to reduce boilerplate.\n\nHere's a comparison between the old and new syntax:\n\n```ts\n// ✅ Object Macro\nnew Elysia()\n\t.macro({\n\t\trole: (role: 'admin' | 'user') => ({\n\t\t\tbeforeHandle: ({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t\t})\n\n// ⚠️ Function Macro\nnew Elysia()\n\t.macro(({ onBeforeHandle }) => {\n\t\trole(role: 'admin' | 'user') {\n\t\t\tonBeforeHandle(({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t\t}\n\t})\n```\n\nBoth syntax are supported but the new object syntax is recommended. We don't have plan to remove the previous syntax but we will focus on the new object syntax with new features.\n\nINFO\n\nDue to TypeScript limitation, macro's `resolve` only works with the new object syntax but not with previous one..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I name parser in elysiajs?\n\nAssistant: To name parser in elysiajs, here's what you do:\nElysia 1.2 introduce a parser with a custom name, allowing you to specify which parser should be used for decoding request body.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.parser('custom', ({ contentType }) => {\n\t\tif (contentType === \"application/kivotos\")\n\t\t\treturn 'nagisa'\n\t})\n\t.post('/', ({ body }) => body, { parse: 'custom' })\n```\n\n`parser` has a similar API to `onParse` but with a custom name allowing you to reference it in a route.\n\nYou may also reference Elysia's built-in parser or provide multiple parsers to be used in order.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.parser('custom', ({ contentType }) => {\n\t\tif (contentType === \"application/kivotos\")\n\t\t\treturn 'nagisa'\n\t})\n\t.post('/', ({ body }) => body, { parse: ['custom', 'json'] })\n```\n\nParsers will be called in order, if the parser does not return a value, it will move to the next parser until one of the parser returns a value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket in elysiajs?\n\nAssistant: To websocket in elysiajs, here's what you do:\nWe have rewrite WebSocket to be more performant and match the API and behavior with the latest Bun's WebSocket API while maintaining compatibility with each runtime.\n\n```ts\nnew Elysia()\n\t.ws('/ws', {\n\t\tping: (message) => message,\n\t\tpong: (message) => message\n\t})\n```\n\nWebSocket now has a more consistent API with HTTP route and has a similar lifecycle as HTTP route..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typebox 0.34 in elysiajs?\n\nAssistant: To typebox 0.34 in elysiajs, here's what you do:\nElysia 1.2 now has support for TypeBox 0.34.\n\nWith this update, Elysia now use TypeBox's `t.Module` to handle reference model to support circular recursive type.\n\n```ts\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n\t.model({\n\t\ta: t.Object({\n\t\t\ta: t.Optional(t.Ref('a'))\n\t\t})\n\t})\n\t.post('/recursive', ({ body }) => body, { body: 'a' })\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reduced memory usage in elysiajs?\n\nAssistant: To reduced memory usage in elysiajs, here's what you do:\nWe have refactor Sucrose's generated code for a swappable code generation process.\n\nBy refactoring for a better code duplication, router optimization, and unnecessary code removal.\n\nThis allows Elysia to reuse code from several parts and reduce large portion of memory usage.\n\nFor our project, by simply upgrading to Elysia 1.2, we seen up to 2x memory reduction from 1.1.\n\n![Memory comparison between 1.1 and 1.2](https://elysiajs.com/blog/elysia-12/memory.webp)\n\nThis memory optimization is scaled with the number of routes and the complexity of the route. So you may see reduced memory usage exponentially..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable update in elysiajs?\n\nAssistant: To notable update in elysiajs, here's what you do:\nBelow are some of the notable improvement that are made in Elysia 1.2..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden validation error in elysiajs?\n\nAssistant: To eden validation error in elysiajs, here's what you do:\nEden also now automatically infers `422` status code if validation model is provided.\n\n```ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './app'\n\nconst api = treaty<App>('localhost:3000')\n\nconst { data, error } = await api.user.put({\n\tname: 'saltyaom'\n})\n\nif (error)\n\tswitch (error.status) {\n\t\tcase 422:\n\t\t\tconsole.log(error.summary)\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tconsole.error(error)\n\t}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I router in elysiajs?\n\nAssistant: To router in elysiajs, here's what you do:\nWe have updated route registration deduplication to be more optimized.\n\nPreviously Elysia will check all of the possible route to prevent route deduplication. Now Elysia use a checksum hash map to check if the route is already registered and merged routing and code generation process loop for static route registration to improve performance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I changes in elysiajs?\n\nAssistant: To changes in elysiajs, here's what you do:\n- Event Listener now infers path parameter automatically based on scope\n- Add ‘scoped’ to bulk `as` for casting type to ‘scoped’ similar to ‘plugin’\n- Update `cookie` to 1.0.1\n- Update TypeBox to 0.33\n- `content-length` now accept number\n- use 16-degit hexadecimals for `id` in `trace`\n- disable `minify` in production build for better debugging/error reporting..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I breaking change in elysiajs?\n\nAssistant: To breaking change in elysiajs, here's what you do:\nThere should be minor required changes to your codebase to adapt to upgrade to Elysia 1.2.\n\nHowever, these are all the changes that you need to be aware of..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I parse in elysiajs?\n\nAssistant: To parse in elysiajs, here's what you do:\n`type` is now merged with `parse` to allow control over order of custom and built-in parser.\n\n```ts\nimport { Elysia, form, file } from 'elysia'\n\nnew Elysia()\n\t.post('/', ({ body }) => body, {\n\t\ttype: 'json',\n\t\tparse: 'json'\n\t})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I formdata in elysiajs?\n\nAssistant: To formdata in elysiajs, here's what you do:\nStarting from 1.2, you now have to explicitly return `form` if the response is a formdata instead of automatically detect if file is present in 1-level deep object.\n\n```ts\nimport { Elysia, form, file } from 'elysia'\n\nnew Elysia()\n\t.post('/', ({ file }) => ({\n\t\t.post('/', ({ file }) => form({\n\t\t\ta: file('./public/kyuukurarin.mp4')\n\t\t}))\n\t})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket in elysiajs?\n\nAssistant: To websocket in elysiajs, here's what you do:\nWebSocket method now return their respective value instead of returning `WebSocket`.\n\nThus removing the ability to do method chaining.\n\nThis is to make WebSocket match the same API with Bun's WebSocket API for better compatibility and migration.\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.ws('/', {\n\t\tmessage(ws) {\n\t\t\tws\n\t\t\t\t.send('hello')\n\t\t\t\t.send('world')\n\n\t\t\tws.send('hello')\n\t\t\tws.send('world')\n\t\t}\n\t})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I scoped in elysiajs?\n\nAssistant: To scoped in elysiajs, here's what you do:\nElysia now removed the `constructor scoped` as it might be confused with `scope's scoped/global`\n\n```ts\nimport { Elysia } from 'elysia'\n\nnew Elysia({ scoped: false })\n\nconst scoped = new Elysia()\n\nconst main = new Elysia()\n\t.mount(scoped)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I internal breaking changes in elysiajs?\n\nAssistant: To internal breaking changes in elysiajs, here's what you do:\n- Remove router internal property static.http.staticHandlers\n- Router history compile now link with history composed..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I afterword in elysiajs?\n\nAssistant: To afterword in elysiajs, here's what you do:\nElysia 1.2 is an ambitious update that we have been working on for a while.\n\nA gambit to expand Elysia's reach to more developer and more runtime but there are something else I want to say as well..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I let's start this again. in elysiajs?\n\nAssistant: To let's start this again. in elysiajs, here's what you do:\nHi, how are you? I hope you are doing well.\n\nI still love doing this, writing blog post about Elysia. It's has been a while since then.\n\nYou may noticed that it has been a while since the last update, and it's not a long one. I'm sorry for that.\n\nI hope you understand that we also have our own life to take care of. We are not a robot, we are human. Sometime about life, sometime about work, sometime about family, sometime financially..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I i want to be with you all the time. in elysiajs?\n\nAssistant: To i want to be with you all the time. in elysiajs, here's what you do:\nDoing what I love, keep updating Elysia, keep writing blog post, keep making art but you know that I have something to take care of too.\n\nI have to bring food to table, I have take care of a lot of things financially. I have to take care of myself too.\n\nI hope you are doing well, I hope you are happy, I hope you are healthy, I hope you are safe.\n\nEven if I'm not here. A part of me known as Elysia will be with you.\n\nThanks for being with me.\n\n> Here I feel the touch brought by the real number solution.\n> \n> Ripples of two souls now have reached our double slits.\n> \n> Casting stripes of light and dark in the world as days and nights.\n> \n> You set me free under the sun.\n> \n> I fly your cradle dreams to the moon and back.\n> \n> A worm will turn into a butterfly,\n> \n> before one can answer \"who am I\".\n> \n> After the ice turns into water,\n> \n> the sea I hang upside down will be your sky.\n> \n> And we finally met again, Seele..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "section_detail", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 1.2 - You and Me in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Adapter Example**:\n\n```yaml\nimport { node } from '@elysiajs/node'\n\nnew Elysia({ adapter: node() })\n\t.get('/', 'Hello Node')\n\t.listen(3000)\n```\n\nThis snippet shows you how to adapter example, which is an important aspect of elysia 1.2 - you and me.\n\n**Universal Runtime API Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { Elysia, file } from 'elysia'\n\nnew Elysia()\n\t.get('/', () => Bun.file('./public/index.html'))\n\t.get('/', () => file('./public/index.html'))\n```\n\nThis snippet shows you how to universal runtime api example, which is an important aspect of elysia 1.2 - you and me.\n\n**Macro with Resolve Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.macro({\n\t\tuser: (enabled: true) => ({\n\t\t\tresolve: ({ cookie: { session } }) => ({\n\t\t\t\tuser: session.value!\n\t\t\t})\n\t\t})\n\t})\n\t.get('/', ({ user }) => user, { user: true })\n```\n\nThis snippet shows you how to macro with resolve example, which is an important aspect of elysia 1.2 - you and me.\n\n**Custom Parser Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n\t.parser('custom', ({ contentType }) => {\n\t\tif (contentType === \"application/kivotos\")\n\t\t\treturn 'nagisa'\n\t})\n\t.post('/', ({ body }) => body, { parse: 'custom' })\n```\n\nThis snippet shows you how to custom parser example, which is an important aspect of elysia 1.2 - you and me.\n\n**WebSocket Example**:\n\n```yaml\nnew Elysia()\n\t.ws('/ws', {\n\t\tping: (message) => message,\n\t\tpong: (message) => message\n\t})\n```\n\nThis snippet shows you how to websocket example, which is an important aspect of elysia 1.2 - you and me.\n\n**TypeBox Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n\t.model({\n\t\ta: t.Object({\n\t\t\ta: t.Optional(t.Ref('a'))\n\t\t})\n\t})\n\t.post('/recursive', ({ body }) => body, { body: 'a' })\n```\n\nThis snippet shows you how to typebox example, which is an important aspect of elysia 1.2 - you and me.\n\n**Eden Validation Error Example**:\n\n```yaml\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './app'\n\nconst api = treaty<App>('localhost:3000')\n\nconst { data, error } = await api.user.put({\n\tname: 'saltyaom'\n})\n\nif (error)\n\tswitch (error.status) {\n\t\tcase 422:\n\t\t\tconsole.log(error.summary)\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tconsole.error(error)\n\t}\n```\n\nThis snippet shows you how to eden validation error example, which is an important aspect of elysia 1.2 - you and me.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "code_examples", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 1.2 - You and Me in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia is designed to be run on Bun and will continue to have Bun as the primary runtime and prioritize feature on Bun first.\n\nThe new object syntax for macros is recommended over the previous function syntax.\n\nParsers will be called in order, if the parser does not return a value, it will move to the next parser until one of the parser returns a value.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-12", "title": "Elysia 1.2 - You and Me", "description": "Elysia 1.2 focuses on commitment to expand universal runtime support and developer experience.", "has_code_examples": true, "has_best_practices": true, "section_count": 21, "timestamp": "2025-03-01 03:21:37", "type": "best_practices", "page_metadata": {"og:description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "description": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "twitter:card": "summary_large_image", "ogTitle": "Elysia 1.2 - You and Me", "og:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:title": "Elysia 1.2 - You and Me", "twitter:image": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "og:image:width": "1920", "ogImage": "https://elysiajs.com/blog/elysia-12/elysia-12.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Introducing Adapter for universal runtime suppport, Object macro with resolve, Parser with custom name, WebSocket with lifecycle, TypeBox 0.34 with recursive type, and Eden validation inference.", "generator": "VitePress v1.6.3", "title": "Elysia 1.2 - You and Me | ElysiaJS", "scrapeId": "5a6a4cec-efba-4b4d-a642-00c18ca0bffb", "sourceURL": "https://elysiajs.com/blog/elysia-12", "url": "https://elysiajs.com/blog/elysia-12", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what React Email is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain React Email in elysiajs.\n\n# React Email\n\nReact Email is a library that allows you to use React components to create emails.Here's a quick rundown of what this is about:\n\n## Installation\n\nTo install React Email, run the following command:\n\nbash\n\n```\nbun add -d react-email\nbun add @react-email/components react react-dom\n```\n\nThen add this script to `package.json`:\n\njson\n\n```\n{\n  \"scripts\": {\n    \"email\": \"email dev --dir src/emails\"\n  }\n}\n```\n\nWe recommend adding email templates into the `src/emails` directory as we can directly import the JSX files.\n\n## TypeScript\n\nIf you are using TypeScript, you may need to add the following to your `tsconfig.json`:\n\njson\n\n```\n{\n  \"compilerOptions\": {\n\t\"jsx\": \"react\"\n  }\n}\n```\n\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/recipe/react-email", "title": "React Email", "description": "React Email is a library that allows you to use React components to create emails.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:44", "type": "overview", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our base to send emails.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "title": "React Email - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our code to send emails."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "ogTitle": "React Email - ElysiaJS", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "React Email - ElysiaJS", "scrapeId": "07d9ddce-123a-4170-b941-c573b5359b92", "sourceURL": "https://elysiajs.com/recipe/react-email", "url": "https://elysiajs.com/recipe/react-email", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nTo install React Email, run the following command:\n\nbash\n\n```\nbun add -d react-email\nbun add @react-email/components react react-dom\n```\n\nThen add this script to `package.json`:\n\njson\n\n```\n{\n  \"scripts\": {\n    \"email\": \"email dev --dir src/emails\"\n  }\n}\n```\n\nWe recommend adding email templates into the `src/emails` directory as we can directly import the JSX files..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/react-email", "title": "React Email", "description": "React Email is a library that allows you to use React components to create emails.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:44", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our base to send emails.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "title": "React Email - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our code to send emails."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "ogTitle": "React Email - ElysiaJS", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "React Email - ElysiaJS", "scrapeId": "07d9ddce-123a-4170-b941-c573b5359b92", "sourceURL": "https://elysiajs.com/recipe/react-email", "url": "https://elysiajs.com/recipe/react-email", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typescript in elysiajs?\n\nAssistant: To typescript in elysiajs, here's what you do:\nIf you are using TypeScript, you may need to add the following to your `tsconfig.json`:\n\njson\n\n```\n{\n  \"compilerOptions\": {\n\t\"jsx\": \"react\"\n  }\n}\n```\n.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/react-email", "title": "React Email", "description": "React Email is a library that allows you to use React components to create emails.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:44", "type": "section_detail", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our base to send emails.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "title": "React Email - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our code to send emails."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "ogTitle": "React Email - ElysiaJS", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "React Email - ElysiaJS", "scrapeId": "07d9ddce-123a-4170-b941-c573b5359b92", "sourceURL": "https://elysiajs.com/recipe/react-email", "url": "https://elysiajs.com/recipe/react-email", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for React Email in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**First Email Component**:\n\n```yaml\nimport * as React from 'react'\nimport { Tailwind, Section, Text } from '@react-email/components'\n\nexport default function OTPEmail({ otp }: { otp: number }) {\n    return (\n        <Tailwind>\n            <Section className=\"flex justify-center items-center w-full min-h-screen font-sans\">\n                <Section className=\"flex flex-col items-center w-76 rounded-2xl px-6 py-1 bg-gray-50\">\n                    <Text className=\"text-xs font-medium text-violet-500\">\n                        Verify your Email Address\n                    </Text>\n                    <Text className=\"text-gray-500 my-0\">\n                        Use the following code to verify your email address\n                    </Text>\n                    <Text className=\"text-5xl font-bold pt-2\">{otp}</Text>\n                    <Text className=\"text-gray-400 font-light text-xs pb-4\">\n                        This code is valid for 10 minutes\n                    </Text>\n                    <Text className=\"text-gray-600 text-xs\">\n                        Thank you joining us\n                    </Text>\n                </Section>\n            </Section>\n        </Tailwind>\n    )\n}\n\nOTPEmail.PreviewProps = {\n    otp: 123456\n}\n```\n\nThis snippet shows you how to first email component, which is an important aspect of react email.\n\n", "metadata": {"source_url": "https://elysiajs.com/recipe/react-email", "title": "React Email", "description": "React Email is a library that allows you to use React components to create emails.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:44", "type": "code_examples", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our base to send emails.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "title": "React Email - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our code to send emails."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "ogTitle": "React Email - ElysiaJS", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "React Email - ElysiaJS", "scrapeId": "07d9ddce-123a-4170-b941-c573b5359b92", "sourceURL": "https://elysiajs.com/recipe/react-email", "url": "https://elysiajs.com/recipe/react-email", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using React Email in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nNotice that we can directly import the email component out of the box thanks to Bun.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/recipe/react-email", "title": "React Email", "description": "React Email is a library that allows you to use React components to create emails.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:21:44", "type": "best_practices", "page_metadata": {"twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our base to send emails.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "og:image:height": "1080", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "title": "React Email - ElysiaJS | ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "As Elysia is using Bun as runtime environment, we may directly use React Email and import JSX directly to our code to send emails."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "language": "en-US", "ogTitle": "React Email - ElysiaJS", "og:image:width": "1920", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "React Email - ElysiaJS", "scrapeId": "07d9ddce-123a-4170-b941-c573b5359b92", "sourceURL": "https://elysiajs.com/recipe/react-email", "url": "https://elysiajs.com/recipe/react-email", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.8 - Gate of Steiner is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.8 - Gate of Steiner in elysiajs.\n\n# Elysia 0.8 - Gate of Steiner\n\nElysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.Here's a quick rundown of what this is about:\n\n## Macro API\n\nMacro allows us to define a custom field to hook and guard by exposing full control of the life cycle event stack. Allowing us to compose custom logic into a simple configuration with full type safety. Suppose we have an authentication plugin to restrict access based on role, we can define a custom **role** field.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { auth } from '@services/auth'\n\nconst app = new Elysia()\n    .use(auth)\n    .get('/', ({ user }) => user.profile, {\n        role: 'admin'\n    })\n```\n\nMacro has full access to the life cycle stack, allowing us to add, modify, or delete existing events directly for each route.\n\n```typescript\nconst plugin = new Elysia({ name: 'plugin' }).macro(({ beforeHandle }) => {\n    return {\n        role(type: 'admin' | 'user') {\n            beforeHandle(\n                { insert: 'before' },\n                async ({ cookie: { session } }) => {\n                  const user = await validateSession(session.value)\n                  await validateRole('admin', user)\n}\n            )\n        }\n    }\n})\n```\n\nWe hope that with this macro API, plugin maintainers will be able to customize Elysia to their heart's content opening a new way to interact better with Elysia, and Elysia users will be able to enjoy even more ergonomic API Elysia could provide. The documentation of [Macro API](https://elysiajs.com/patterns/macro.html) is now available in **pattern** section. The next generation of customizability is now only a reach away from your keyboard and imagination.\n\n## New Life Cycle\n\nElysia introduced a new life cycle to fix an existing problem and highly requested API including **Resolve** and **MapResponse**: resolve: a safe version of **derive**. Execute in the same queue as **beforeHandle** mapResponse: Execute just after **afterResponse** for providing transform function from primitive value to Web Standard Response.\n\n### Resolve\nA \"safe\" version of [derive](https://elysiajs.com/essential/context.html#derive). Designed to append new value to context after validation process storing in the same stack as **beforeHandle**. Resolve syntax is identical to [derive](https://elysiajs.com/life-cycle/before-handle.html#derive), below is an example of retrieving a bearer header from Authorization plugin.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .guard(\n        {\n            headers: t.Object({\n                authorization: t.TemplateLiteral('Bearer ${string}')\n            })\n        },\n        (app) =>\n            app\n                .resolve(({ headers: { authorization } }) => {\n                    return {\n                        bearer: authorization.split(' ')[1]\n                    }\n                })\n                .get('/', ({ bearer }) => bearer)\n    )\n    .listen(3000)\n```\n\n### MapResponse\nExecuted just after **\"afterHandle\"**, designed to provide custom response mapping from primitive value into a Web Standard Response. Below is an example of using mapResponse to provide Response compression.\n\n```typescript\nimport { Elysia, mapResponse } from 'elysia'\nimport { gzipSync } from 'bun'\n\nnew Elysia()\n    .mapResponse(({ response }) => {\n        return new Response(\n            gzipSync(\n                typeof response === 'object'\n                    ? JSON.stringify(response)\n                    : response.toString()\n            )\n        )\n    })\n    .listen(3000)\n```\n\nWhy not use **afterHandle** but introduce a new API? Because **afterHandle** is designed to read and modify a primitive value. Storing plugins like HTML, and Compression which depends on creating Web Standard Response. This means that plugins registered after this type of plugin will be unable to read a value or modify the value making the plugin behavior incorrect. This is why we introduce a new life-cycle run after **afterHandle** dedicated to providing a custom response mapping instead of mixing the response mapping and primitive value mutation in the same queue.\n\n## Error Function\n\nWe can set the status code by using either **set.status** or returning a new Response.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.status = 418\n\n        return \"I'm a teapot\"\n    })\n    .listen(3000)\n```\n\nThis aligns with our goal, to just the literal value to the client instead of worrying about how the server should behave. However, this is proven to have a challenging integration with Eden. Since we return a literal value, we can't infer the status code from the response making Eden unable to differentiate the response from the status code. This results in Eden not being able to use its full potential, especially in error handling as it cannot infer type without declaring explicit response type for each status. Along with many requests from our users wanting to have a more explicit way to return the status code directly with the value, not wanting to rely on **set.status**, and **new Response** for verbosity or returning a response from utility function declared outside handler function. This is why we introduce an **error** function to return a status code alongside with value back to the client.\n\n```typescript\nimport { Elysia, error } from 'elysia'\n\nnew Elysia()\n    .get('/', () => error(418, \"I'm a teapot\"))\n    .listen(3000)\n```\n\nWhich is an equivalent to:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.status = 418\n\n        return \"I'm a teapot\"\n    })\n    .listen(3000)\n```\n\nThe difference is that using an **error** function, Elysia will automatically differentiate from the status code into a dedicated response type, helping Eden to infer a response based on status correctly. This means that by using **error**, we don't have to include the explicit response schema to make Eden infers type correctly for each status code.\n\n```typescript\nimport { Elysia, error, t } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.status = 418\n        return \"I'm a teapot\"\n    }, {\n        response: {\n            418: t.String()\n        }\n    })\n    .listen(3000)\n```\n\nWe recommended using `error` function to return a response with the status code for the correct type inference, however, we do not intend to remove the usage of **set.status** from Elysia to keep existing servers working.\n\n## Static Content\n\nStatic Content refers to a response that almost always returns the same value regardless of the incoming request. This type of resource on the server is usually something like a public **File**, **video** or hardcode value that is rarely changed unless the server is updated. By far, most content in Elysia is static content. But we also found that many cases like serving a static file or serving an HTML page using a template engine are usually static content. This is why Elysia introduced a new API to optimize static content by determining the Response Ahead of Time.\n\n```typescript\nnew Elysia()\n    .get('/', () => Bun.file('video/kyuukurarin.mp4'))\n    .get('/', Bun.file('video/kyuukurarin.mp4'))\n    .listen(3000)\n```\n\nNotice that the handler now isn't a function but is an inline value instead. This will improve the performance by around 20-25% by compiling the response ahead of time.\n\n## Default Property\n\nElysia 0.8 updates to [TypeBox to 0.32](https://github.com/sinclairzx81/typebox/blob/index/changelog/0.32.0.md) which introduces many new features including dedicated RegEx, Deref but most importantly the most requested feature in Elysia, **default** field support. Now defining a default field in Type Builder, Elysia will provide a default value if the value is not provided, supporting schema types from type to body.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ query: { name } }) => name, {\n        query: t.Object({\n            name: t.String({\n                default: 'Elysia'\n            })\n        })\n    })\n    .listen(3000)\n```\n\nThis allows us to provide a default value from schema directly, especially useful when using reference schema.\n\n## Default Header\n\nWe can set headers using **set.headers**, which Elysia always creates a default empty object for every request. Previously we could use **onRequest** to append desired values into set.headers, but this will always have some overhead because a function is called. Stacking functions to mutate an object can be a little slower than having the desired value set in the first hand if the value is always the same for every request like CORS or cache header. This is why we now support setting default headers out of the box instead of creating an empty object for every new request.\n\n```typescript\nnew Elysia()\n    .headers({\n        'X-Powered-By': 'Elysia'\n    })\n```\n\nElysia CORS plugin also has an update to use this new API to improve this performance.\n\n## Performance and notable improvement\n\nAs usual, we found a way to optimize Elysia even more to make sure you have the best performance out of the box.\n\n### Removable of bind\nWe found that **.bind** is slowing down the path lookup by around ~5%, with the removal of bind from our codebase we can speed up that process a little bit.\n\n### Static Query Analysis\nElysia Static Code Analysis is now able to infer a query if the query name is referenced in the code. This usually results in a speed-up of 15-20% by default.\n\n### Video Stream\nElysia now adds **content-range** header to File and Blob by default to fix problems with large files like videos that require to be sent by chunk. To fix this, Elysia now adds **content-range** header to by default. Elysia will not send the **content-range** if the status code is set to 206, 304, 412, 416, or if the headers explicitly provide the **content-range**. It's recommended to use [ETag plugin](https://github.com/bogeychan/elysia-etag) to handle the correct status code to avoid **content-range** collision from the cache. This is an initial support for **content-range** header, we have created a discussion to implement more accurate behavior based on [RPC-7233](https://datatracker.ietf.org/doc/html/rfc7233#section-4.2) in the future. Feels free to join the discussion to propose a new behavior for Elysia with **content-range** and **etag generation** at [Discussion 371](https://github.com/elysiajs/elysia/discussions/371).\n\n### Runtime Memory improvement\nElysia now reuses the return value of the life cycle event instead of declaring a new dedicated value. This reduces the memory usage of Elysia by a little bit better for peak concurrent requests a little better.\n\n### Plugins\nMost official plugins now take advantage of newer **Elysia.headers**, Static Content, **MapResponse** ,and revised code to comply with static code analysis even more to improve the overall performance. Plugins that are improved by this are the following: Static, HTML, and CORS.\n\n### Validation Error\nElysia now returns validation error as JSON instead of text. Showing current errors and all errors and expected values instead, to help you identify an error easier.\n\nExample:\n\n```json\n{\n  \"type\": \"query\",\n  \"at\": \"password\",\n  \"message\": \"Required property\",\n  \"expected\": {\n    \"email\": \"eden@elysiajs.com\",\n    \"password\": \"\"\n  },\n  \"found\": {\n    \"email\": \"eden@elysiajs.com\"\n  },\n  \"errors\": [\n    {\n      \"type\": 45,\n      \"schema\": {\n        \"type\": \"string\"\n      },\n      \"path\": \"/password\",\n      \"message\": \"Required property\"\n    },\n    {\n      \"type\": 54,\n      \"schema\": {\n        \"type\": \"string\"\n      },\n      \"path\": \"/password\",\n      \"message\": \"Expected string\"\n    }\n  ]\n}\n```\n\n**expect**, and **errors** fields are removed by default on the production environment to prevent an attacker from identifying a model for further attack.\n\n## Notable Improvement\n\n**Improvement**\n- lazy query reference\n- add content-range header to `Blob` by default\n- update TypeBox to 0.32\n- override lifecycle response of `be` and `af`\n\n**Breaking Change**\n- `afterHandle` no longer early return\n\n**Change**\n- change validation response to JSON\n- differentiate derive from `decorator['request']` as `decorator['derive']`\n- `derive` now don't show infer type in onRequest\n\n**Bug fix**\n- remove `headers`, `path` from `PreContext`\n- remove `derive` from `PreContext`\n- Elysia type doesn't output custom `error`.\n\n## Afterword\n\nIt has been a great journey since the first release. Elysia evolved from a generic REST API framework to an ergonomic framework to support End-to-end type safety, OpenAPI documentation generation, we we would like to keep introduce more exciting features in the future. We are happy to have you, and the developers to build amazing stuff with Elysia and your overwhelming continuous support for Elysia encourages us to keep going. It's exciting to see Elysia grow more as a community:\n- [Scalar's Elysia theme](https://x.com/saltyAom/status/1737468941696421908?s=20) for new documentation instead of Swagger UI.\n- [pkgx](https://pkgx.dev/) supports Elysia out of the box.\n- Community submitted Elysia to [TechEmpower](https://www.techempower.com/benchmarks/#section=data-r22&hw=ph&test=composite) ranking at 32 out of all frameworks in composite score, even surpassing Go's Gin and Echo.\n\nWe are now trying to provide more support for each runtime, plugin, and integration to return the kindness you have given us, starting with the rewrite of the documentation with more detailed and beginner-friendliness, [Integration with Nextjs](https://elysiajs.com/integrations/nextj.html), [Astro](https://elysiajs.com/integrations/astro.html) and more to come in the future. And since the release of 0.7, we have seen fewer issues compared to the previous releases. Now **we are preparing for the first stable release of Elysia**, Elysia 1.0 aiming to release **in Q1 2024** to repay your kindness. Elysia will now enter soft API lockdown mode, to prevent an API change and make sure that there will be no or less breaking change once the stable release arrives. So you can expect your Elysia app to work starting from 0.7 with no or minimal change to support the stable release of Elysia. We again thank your continuous support for Elysia, and we hope to see you again on the stable release day. _Keep fighting for all that is beautiful in this world_. Until then, _El Psy Congroo_. \n> A drop in the darkness 小さな命\n> Unique and precious forever\n> Bittersweet memories 夢幻の刹那\n> Make this moment last, last forever\n> We drift through the heavens 果てない想い\n> Filled with the love from up above\n> He guides my travels せまる刻限\n> Shed a tear and leap to a new world\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "overview", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I macro api in elysiajs?\n\nAssistant: To macro api in elysiajs, here's what you do:\nMacro allows us to define a custom field to hook and guard by exposing full control of the life cycle event stack. Allowing us to compose custom logic into a simple configuration with full type safety. Suppose we have an authentication plugin to restrict access based on role, we can define a custom **role** field.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { auth } from '@services/auth'\n\nconst app = new Elysia()\n    .use(auth)\n    .get('/', ({ user }) => user.profile, {\n        role: 'admin'\n    })\n```\n\nMacro has full access to the life cycle stack, allowing us to add, modify, or delete existing events directly for each route.\n\n```typescript\nconst plugin = new Elysia({ name: 'plugin' }).macro(({ beforeHandle }) => {\n    return {\n        role(type: 'admin' | 'user') {\n            beforeHandle(\n                { insert: 'before' },\n                async ({ cookie: { session } }) => {\n                  const user = await validateSession(session.value)\n                  await validateRole('admin', user)\n}\n            )\n        }\n    }\n})\n```\n\nWe hope that with this macro API, plugin maintainers will be able to customize Elysia to their heart's content opening a new way to interact better with Elysia, and Elysia users will be able to enjoy even more ergonomic API Elysia could provide. The documentation of [Macro API](https://elysiajs.com/patterns/macro.html) is now available in **pattern** section. The next generation of customizability is now only a reach away from your keyboard and imagination..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I new life cycle in elysiajs?\n\nAssistant: To new life cycle in elysiajs, here's what you do:\nElysia introduced a new life cycle to fix an existing problem and highly requested API including **Resolve** and **MapResponse**: resolve: a safe version of **derive**. Execute in the same queue as **beforeHandle** mapResponse: Execute just after **afterResponse** for providing transform function from primitive value to Web Standard Response.\n\n### Resolve\nA \"safe\" version of [derive](https://elysiajs.com/essential/context.html#derive). Designed to append new value to context after validation process storing in the same stack as **beforeHandle**. Resolve syntax is identical to [derive](https://elysiajs.com/life-cycle/before-handle.html#derive), below is an example of retrieving a bearer header from Authorization plugin.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .guard(\n        {\n            headers: t.Object({\n                authorization: t.TemplateLiteral('Bearer ${string}')\n            })\n        },\n        (app) =>\n            app\n                .resolve(({ headers: { authorization } }) => {\n                    return {\n                        bearer: authorization.split(' ')[1]\n                    }\n                })\n                .get('/', ({ bearer }) => bearer)\n    )\n    .listen(3000)\n```\n\n### MapResponse\nExecuted just after **\"afterHandle\"**, designed to provide custom response mapping from primitive value into a Web Standard Response. Below is an example of using mapResponse to provide Response compression.\n\n```typescript\nimport { Elysia, mapResponse } from 'elysia'\nimport { gzipSync } from 'bun'\n\nnew Elysia()\n    .mapResponse(({ response }) => {\n        return new Response(\n            gzipSync(\n                typeof response === 'object'\n                    ? JSON.stringify(response)\n                    : response.toString()\n            )\n        )\n    })\n    .listen(3000)\n```\n\nWhy not use **afterHandle** but introduce a new API? Because **afterHandle** is designed to read and modify a primitive value. Storing plugins like HTML, and Compression which depends on creating Web Standard Response. This means that plugins registered after this type of plugin will be unable to read a value or modify the value making the plugin behavior incorrect. This is why we introduce a new life-cycle run after **afterHandle** dedicated to providing a custom response mapping instead of mixing the response mapping and primitive value mutation in the same queue..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I error function in elysiajs?\n\nAssistant: To error function in elysiajs, here's what you do:\nWe can set the status code by using either **set.status** or returning a new Response.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.status = 418\n\n        return \"I'm a teapot\"\n    })\n    .listen(3000)\n```\n\nThis aligns with our goal, to just the literal value to the client instead of worrying about how the server should behave. However, this is proven to have a challenging integration with Eden. Since we return a literal value, we can't infer the status code from the response making Eden unable to differentiate the response from the status code. This results in Eden not being able to use its full potential, especially in error handling as it cannot infer type without declaring explicit response type for each status. Along with many requests from our users wanting to have a more explicit way to return the status code directly with the value, not wanting to rely on **set.status**, and **new Response** for verbosity or returning a response from utility function declared outside handler function. This is why we introduce an **error** function to return a status code alongside with value back to the client.\n\n```typescript\nimport { Elysia, error } from 'elysia'\n\nnew Elysia()\n    .get('/', () => error(418, \"I'm a teapot\"))\n    .listen(3000)\n```\n\nWhich is an equivalent to:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.status = 418\n\n        return \"I'm a teapot\"\n    })\n    .listen(3000)\n```\n\nThe difference is that using an **error** function, Elysia will automatically differentiate from the status code into a dedicated response type, helping Eden to infer a response based on status correctly. This means that by using **error**, we don't have to include the explicit response schema to make Eden infers type correctly for each status code.\n\n```typescript\nimport { Elysia, error, t } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ set }) => {\n        set.status = 418\n        return \"I'm a teapot\"\n    }, {\n        response: {\n            418: t.String()\n        }\n    })\n    .listen(3000)\n```\n\nWe recommended using `error` function to return a response with the status code for the correct type inference, however, we do not intend to remove the usage of **set.status** from Elysia to keep existing servers working..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I static content in elysiajs?\n\nAssistant: To static content in elysiajs, here's what you do:\nStatic Content refers to a response that almost always returns the same value regardless of the incoming request. This type of resource on the server is usually something like a public **File**, **video** or hardcode value that is rarely changed unless the server is updated. By far, most content in Elysia is static content. But we also found that many cases like serving a static file or serving an HTML page using a template engine are usually static content. This is why Elysia introduced a new API to optimize static content by determining the Response Ahead of Time.\n\n```typescript\nnew Elysia()\n    .get('/', () => Bun.file('video/kyuukurarin.mp4'))\n    .get('/', Bun.file('video/kyuukurarin.mp4'))\n    .listen(3000)\n```\n\nNotice that the handler now isn't a function but is an inline value instead. This will improve the performance by around 20-25% by compiling the response ahead of time..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I default property in elysiajs?\n\nAssistant: To default property in elysiajs, here's what you do:\nElysia 0.8 updates to [TypeBox to 0.32](https://github.com/sinclairzx81/typebox/blob/index/changelog/0.32.0.md) which introduces many new features including dedicated RegEx, Deref but most importantly the most requested feature in Elysia, **default** field support. Now defining a default field in Type Builder, Elysia will provide a default value if the value is not provided, supporting schema types from type to body.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ query: { name } }) => name, {\n        query: t.Object({\n            name: t.String({\n                default: 'Elysia'\n            })\n        })\n    })\n    .listen(3000)\n```\n\nThis allows us to provide a default value from schema directly, especially useful when using reference schema..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I default header in elysiajs?\n\nAssistant: To default header in elysiajs, here's what you do:\nWe can set headers using **set.headers**, which Elysia always creates a default empty object for every request. Previously we could use **onRequest** to append desired values into set.headers, but this will always have some overhead because a function is called. Stacking functions to mutate an object can be a little slower than having the desired value set in the first hand if the value is always the same for every request like CORS or cache header. This is why we now support setting default headers out of the box instead of creating an empty object for every new request.\n\n```typescript\nnew Elysia()\n    .headers({\n        'X-Powered-By': 'Elysia'\n    })\n```\n\nElysia CORS plugin also has an update to use this new API to improve this performance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I performance and notable improvement in elysiajs?\n\nAssistant: To performance and notable improvement in elysiajs, here's what you do:\nAs usual, we found a way to optimize Elysia even more to make sure you have the best performance out of the box.\n\n### Removable of bind\nWe found that **.bind** is slowing down the path lookup by around ~5%, with the removal of bind from our codebase we can speed up that process a little bit.\n\n### Static Query Analysis\nElysia Static Code Analysis is now able to infer a query if the query name is referenced in the code. This usually results in a speed-up of 15-20% by default.\n\n### Video Stream\nElysia now adds **content-range** header to File and Blob by default to fix problems with large files like videos that require to be sent by chunk. To fix this, Elysia now adds **content-range** header to by default. Elysia will not send the **content-range** if the status code is set to 206, 304, 412, 416, or if the headers explicitly provide the **content-range**. It's recommended to use [ETag plugin](https://github.com/bogeychan/elysia-etag) to handle the correct status code to avoid **content-range** collision from the cache. This is an initial support for **content-range** header, we have created a discussion to implement more accurate behavior based on [RPC-7233](https://datatracker.ietf.org/doc/html/rfc7233#section-4.2) in the future. Feels free to join the discussion to propose a new behavior for Elysia with **content-range** and **etag generation** at [Discussion 371](https://github.com/elysiajs/elysia/discussions/371).\n\n### Runtime Memory improvement\nElysia now reuses the return value of the life cycle event instead of declaring a new dedicated value. This reduces the memory usage of Elysia by a little bit better for peak concurrent requests a little better.\n\n### Plugins\nMost official plugins now take advantage of newer **Elysia.headers**, Static Content, **MapResponse** ,and revised code to comply with static code analysis even more to improve the overall performance. Plugins that are improved by this are the following: Static, HTML, and CORS.\n\n### Validation Error\nElysia now returns validation error as JSON instead of text. Showing current errors and all errors and expected values instead, to help you identify an error easier.\n\nExample:\n\n```json\n{\n  \"type\": \"query\",\n  \"at\": \"password\",\n  \"message\": \"Required property\",\n  \"expected\": {\n    \"email\": \"eden@elysiajs.com\",\n    \"password\": \"\"\n  },\n  \"found\": {\n    \"email\": \"eden@elysiajs.com\"\n  },\n  \"errors\": [\n    {\n      \"type\": 45,\n      \"schema\": {\n        \"type\": \"string\"\n      },\n      \"path\": \"/password\",\n      \"message\": \"Required property\"\n    },\n    {\n      \"type\": 54,\n      \"schema\": {\n        \"type\": \"string\"\n      },\n      \"path\": \"/password\",\n      \"message\": \"Expected string\"\n    }\n  ]\n}\n```\n\n**expect**, and **errors** fields are removed by default on the production environment to prevent an attacker from identifying a model for further attack..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable improvement in elysiajs?\n\nAssistant: To notable improvement in elysiajs, here's what you do:\n**Improvement**\n- lazy query reference\n- add content-range header to `Blob` by default\n- update TypeBox to 0.32\n- override lifecycle response of `be` and `af`\n\n**Breaking Change**\n- `afterHandle` no longer early return\n\n**Change**\n- change validation response to JSON\n- differentiate derive from `decorator['request']` as `decorator['derive']`\n- `derive` now don't show infer type in onRequest\n\n**Bug fix**\n- remove `headers`, `path` from `PreContext`\n- remove `derive` from `PreContext`\n- Elysia type doesn't output custom `error`..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I afterword in elysiajs?\n\nAssistant: To afterword in elysiajs, here's what you do:\nIt has been a great journey since the first release. Elysia evolved from a generic REST API framework to an ergonomic framework to support End-to-end type safety, OpenAPI documentation generation, we we would like to keep introduce more exciting features in the future. We are happy to have you, and the developers to build amazing stuff with Elysia and your overwhelming continuous support for Elysia encourages us to keep going. It's exciting to see Elysia grow more as a community:\n- [Scalar's Elysia theme](https://x.com/saltyAom/status/1737468941696421908?s=20) for new documentation instead of Swagger UI.\n- [pkgx](https://pkgx.dev/) supports Elysia out of the box.\n- Community submitted Elysia to [TechEmpower](https://www.techempower.com/benchmarks/#section=data-r22&hw=ph&test=composite) ranking at 32 out of all frameworks in composite score, even surpassing Go's Gin and Echo.\n\nWe are now trying to provide more support for each runtime, plugin, and integration to return the kindness you have given us, starting with the rewrite of the documentation with more detailed and beginner-friendliness, [Integration with Nextjs](https://elysiajs.com/integrations/nextj.html), [Astro](https://elysiajs.com/integrations/astro.html) and more to come in the future. And since the release of 0.7, we have seen fewer issues compared to the previous releases. Now **we are preparing for the first stable release of Elysia**, Elysia 1.0 aiming to release **in Q1 2024** to repay your kindness. Elysia will now enter soft API lockdown mode, to prevent an API change and make sure that there will be no or less breaking change once the stable release arrives. So you can expect your Elysia app to work starting from 0.7 with no or minimal change to support the stable release of Elysia. We again thank your continuous support for Elysia, and we hope to see you again on the stable release day. _Keep fighting for all that is beautiful in this world_. Until then, _El Psy Congroo_. \n> A drop in the darkness 小さな命\n> Unique and precious forever\n> Bittersweet memories 夢幻の刹那\n> Make this moment last, last forever\n> We drift through the heavens 果てない想い\n> Filled with the love from up above\n> He guides my travels せまる刻限\n> Shed a tear and leap to a new world.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "section_detail", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 0.8 - Gate of Steiner in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Macro API Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\nimport { auth } from '@services/auth'\n\nconst app = new Elysia()\n    .use(auth)\n    .get('/', ({ user }) => user.profile, {\n        role: 'admin'\n    })\n```\n```\n\nThis snippet shows you how to macro api example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n**Macro Plugin Example**:\n\n```yaml\n```typescript\nconst plugin = new Elysia({ name: 'plugin' }).macro(({ beforeHandle }) => {\n    return {\n        role(type: 'admin' | 'user') {\n            beforeHandle(\n                { insert: 'before' },\n                async ({ cookie: { session } }) => {\n                  const user = await validateSession(session.value)\n                  await validateRole('admin', user)\n}\n            )\n        }\n    }\n})\n```\n```\n\nThis snippet shows you how to macro plugin example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n**Resolve Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .guard(\n        {\n            headers: t.Object({\n                authorization: t.TemplateLiteral('Bearer ${string}')\n            })\n        },\n        (app) =>\n            app\n                .resolve(({ headers: { authorization } }) => {\n                    return {\n                        bearer: authorization.split(' ')[1]\n                    }\n                })\n                .get('/', ({ bearer }) => bearer)\n    )\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to resolve example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n**MapResponse Example**:\n\n```yaml\n```typescript\nimport { Elysia, mapResponse } from 'elysia'\nimport { gzipSync } from 'bun'\n\nnew Elysia()\n    .mapResponse(({ response }) => {\n        return new Response(\n            gzipSync(\n                typeof response === 'object'\n                    ? JSON.stringify(response)\n                    : response.toString()\n            )\n        )\n    })\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to mapresponse example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n**Error Function Example**:\n\n```yaml\n```typescript\nimport { Elysia, error } from 'elysia'\n\nnew Elysia()\n    .get('/', () => error(418, \"I'm a teapot\"))\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to error function example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n**Static Content Example**:\n\n```yaml\n```typescript\nnew Elysia()\n    .get('/', () => Bun.file('video/kyuukurarin.mp4'))\n    .get('/', Bun.file('video/kyuukurarin.mp4'))\n    .listen(3000)\n```\n```\n\nThis snippet shows you how to static content example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n**Default Property Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', ({ query: { name } }) => name, {\n        query: t.Object({\n            name: t.String({\n                default: 'Elysia'\n            })\n        })\n    })\n    .listen(3000)\n```},{\n```\n\nThis snippet shows you how to default property example, which is an important aspect of elysia 0.8 - gate of steiner.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "code_examples", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.8 - Gate of Steiner in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nWe recommended using `error` function to return a response with the status code for the correct type inference, however, we do not intend to remove the usage of **set.status** from Elysia to keep existing servers working.\n\nIt's recommended to use [ETag plugin](https://github.com/bogeychan/elysia-etag) to handle the correct status code to avoid **content-range** collision from the cache.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-08", "title": "Elysia 0.8 - Gate of Steiner", "description": "Elysia 0.8 focuses on API stability and a solid foundation while introducing improvements and new features.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:22:38", "type": "best_practices", "page_metadata": {"ogDescription": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "generator": "VitePress v1.6.3", "language": "en-US", "favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Introducing Elysia 0.8 - Gate of Steiner", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:image:width": "1920", "og:description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "twitter:card": "summary_large_image", "ogImage": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "description": "Introducing Macro API, a new way to interact with Elysia. New Lifecycle, resolve, and mapResponse to interact with Elysia even more. Static Content to compile static resource ahead of time. Default Property, Default Header and several improvement.", "title": "Elysia 0.8 - Gate of Steiner | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-08/gate-of-steiner.webp", "og:title": "Introducing Elysia 0.8 - Gate of Steiner", "og:image:height": "1080", "scrapeId": "5c553cf7-d96d-4254-8a17-28bb8ab05437", "sourceURL": "https://elysiajs.com/blog/elysia-08", "url": "https://elysiajs.com/blog/elysia-08", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] in elysiajs.\n\n# Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]\n\nThis page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.Here's a quick rundown of what this is about:\n\n## Elysia Fn\n\nIntroducing Elysia Fn, run any backend function on the frontend with full auto-completion and full type support. For rapid development, Elysia Fn allows you to \"expose\" backend code to call from the frontend with full type-safety, autocompletion, original code comment, and \"click-to-definition\", allowing you to speed up the development. You can use Elysia Fn with Eden for full-type safety via Eden Fn.\n\n## Permission\n\nYou can limit allow or deny scopes of the function, check for authorization header and other headers' fields, validate parameters, or limit keys access programmatically. Keys checking supports type-safety and auto-completion of all possible functions, so you're not missing out on some function or accidentally typing down the wrong name. And narrowing the scope of property programmatically also narrow down the type of parameters, or in other words, full type-safety.\n\n## Technical detail\n\nIn technical detail, Elysia Fn uses JavaScript's Proxy to capture object property, and parameters to create batched requests to the server to handle and returns the value across the network. Elysia Fn extends superjson, allowing native type in JavaScript like Error, Map, Set, and undefined to parse across JSON data. Elysia Fn supports multiple use-cases, for example accessing Prisma on the client-side Nextjs app. Theoretically, it's possible to use Redis, Sequelize, RabbitMQ, and more. As Elysia is running on Bun, Elysia Fn can run over 1.2 million operation/second concurrently (tested on M1 Max). Learn more about Elysia Fn at Eden Fn.\n\n## Type Rework\n\nOver 6.5-9x faster for type checking, and uncountable type's LoC reduction. Elysia 0.3, over 80% of Elysia, and Eden types have been rewritten to focus on performance, type-inference, and fast auto-completion. Testing for over 350 routes with complex types, Elysia uses only 0.22 seconds to generate a type declaration to use with Eden. As the Elysia route now compile directly to literal object instead of Typebox reference, Elysia type declaration is much smaller than it used to be on 0.2 and is easier to be consumed by Eden. And by much smaller, it means 50-99% smaller. Not only Elysia integration with TypeScript is significantly faster, but Elysia is better at understanding TypeScript and your code better.\n\n## File Upload\n\nThanks to Bun 0.5.7, Form Data is implemented and enabled by default in Elysia 0.3 with multipart/formdata. To define type completion and validation for uploading a file, Elysia.t now extends TypeBox with File and Files for file validation. The validation includes checking for file type with auto-completion of standard file size, the minimum and maximum size of the file, and the total of files per field. Elysia 0.3 also features schema.contentType to explicitly validate incoming request type to strictly check headers before validating the data.\n\n## OpenAPI Schema 3.0.x\n\nWith Elysia 0.3, Elysia now uses OpenAPI schema 3.0.x by default for better stating API definitions, and better support for multiple types based on content-type. schema.details are now updated to OpenAPI 3.0.x, and Elysia also updates the Swagger plugin to match the OpenAPI 3.0.x to take advantage of new features in OpenAPI 3 and Swagger, especially with file uploading.\n\n## Eden Rework\n\nTo support more demand for Elysia, supporting Elysia Fn, Rest all together, Eden has been reworked to scale with the new architecture. Eden now exports 3 types of function: Eden Treaty, Eden Fn, and Eden Fetch. With the rework of type definitions and support for Elysia Eden, Eden is now much faster and better at inference type from the server. Auto-completion and faster and use fewer resources than it used to, in fact, Eden's type declaration has been almost 100% reworked to reduce the size and inference time, making it support over 350 routes of auto-completion in a blink of an eye (~0.26 seconds). To make Elysia Eden, fully type-safe, with Elysia's better understanding of TypeScript, Eden can now narrow down the type based on response status, allowing you to capture the type correctly in any matter of condition.\n\n## Notable Improvement\n\n- Add string format: 'email', 'uuid', 'date', 'date-time' - Update @sinclair/typebox to 0.25.24 - Update Raikiri to 0.2.0-beta.0 (ei) - Add file upload test thanks to #21 (@amirrezamahyari) - Pre compile lowercase method for Eden - Reduce complex instruction for most Elysia types - Compile ElysiaRoute type to literal - Optimize type compliation, type inference and auto-completion - Improve type compilation speed - Improve TypeScript inference between plugin registration - Optimize TypeScript inference size - Context creation optimization - Use Raikiri router by default - Remove unused function - Refactor registerSchemaPath to support OpenAPI 3.0.3 - Add error inference for Eden - Mark @sinclair/typebox as optional peerDenpendencies.\n\n## Fix\n\n- Raikiri 0.2 thrown error on not found - Union response with t.File is not working - Definitions isn't defined on Swagger - details are missing on group plugin - group plugin, isn't unable to compile schema - group is not exportable because EXPOSED is a private property - Multiple cookies doesn't set content-type to application/json - EXPOSED is not export when using fn.permission - Missing merged return type for .ws - Missing nanoid - context side-effects - t.Files in swagger is referring to single file - Eden response type is unknown - Unable to type setModel inference definition via Eden - Handle error thrown in non permission function - Exported variable has or is using name 'SCHEMA' from external module - Exported variable has or is using name 'DEFS' from external module - Possible errors for building Elysia app with declaration: true in tsconfig.json.\n\n## Breaking Change\n\n- Rename inject to derive - Depreacate ElysiaRoute, changed to inline - Remove derive - Update from OpenAPI 2.x to OpenAPI 3.0.3 - Move context.store[SYMBOL] to meta[SYMBOL].\n\n## Afterward\n\nWith the introduction of Elysia Fn, I'm personally excited to see how it will be adopted in frontend development, removing the line between frontend and backend. And Type Rework of Elysia, making type-checking and auto-completion much faster. I'm excited to see how you will use Elysia to create the wonderful things you are going to build. We have Discord server dedicated to Elysia. Feel free to say hi or just chill and hang out.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia fn in elysiajs?\n\nAssistant: To elysia fn in elysiajs, here's what you do:\nIntroducing Elysia Fn, run any backend function on the frontend with full auto-completion and full type support. For rapid development, Elysia Fn allows you to \"expose\" backend code to call from the frontend with full type-safety, autocompletion, original code comment, and \"click-to-definition\", allowing you to speed up the development. You can use Elysia Fn with Eden for full-type safety via Eden Fn..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I permission in elysiajs?\n\nAssistant: To permission in elysiajs, here's what you do:\nYou can limit allow or deny scopes of the function, check for authorization header and other headers' fields, validate parameters, or limit keys access programmatically. Keys checking supports type-safety and auto-completion of all possible functions, so you're not missing out on some function or accidentally typing down the wrong name. And narrowing the scope of property programmatically also narrow down the type of parameters, or in other words, full type-safety..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I technical detail in elysiajs?\n\nAssistant: To technical detail in elysiajs, here's what you do:\nIn technical detail, Elysia Fn uses JavaScript's Proxy to capture object property, and parameters to create batched requests to the server to handle and returns the value across the network. Elysia Fn extends superjson, allowing native type in JavaScript like Error, Map, Set, and undefined to parse across JSON data. Elysia Fn supports multiple use-cases, for example accessing Prisma on the client-side Nextjs app. Theoretically, it's possible to use Redis, Sequelize, RabbitMQ, and more. As Elysia is running on Bun, Elysia Fn can run over 1.2 million operation/second concurrently (tested on M1 Max). Learn more about Elysia Fn at Eden Fn..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type rework in elysiajs?\n\nAssistant: To type rework in elysiajs, here's what you do:\nOver 6.5-9x faster for type checking, and uncountable type's LoC reduction. Elysia 0.3, over 80% of Elysia, and Eden types have been rewritten to focus on performance, type-inference, and fast auto-completion. Testing for over 350 routes with complex types, Elysia uses only 0.22 seconds to generate a type declaration to use with Eden. As the Elysia route now compile directly to literal object instead of Typebox reference, Elysia type declaration is much smaller than it used to be on 0.2 and is easier to be consumed by Eden. And by much smaller, it means 50-99% smaller. Not only Elysia integration with TypeScript is significantly faster, but Elysia is better at understanding TypeScript and your code better..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I file upload in elysiajs?\n\nAssistant: To file upload in elysiajs, here's what you do:\nThanks to Bun 0.5.7, Form Data is implemented and enabled by default in Elysia 0.3 with multipart/formdata. To define type completion and validation for uploading a file, Elysia.t now extends TypeBox with File and Files for file validation. The validation includes checking for file type with auto-completion of standard file size, the minimum and maximum size of the file, and the total of files per field. Elysia 0.3 also features schema.contentType to explicitly validate incoming request type to strictly check headers before validating the data..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I openapi schema 3.0.x in elysiajs?\n\nAssistant: To openapi schema 3.0.x in elysiajs, here's what you do:\nWith Elysia 0.3, Elysia now uses OpenAPI schema 3.0.x by default for better stating API definitions, and better support for multiple types based on content-type. schema.details are now updated to OpenAPI 3.0.x, and Elysia also updates the Swagger plugin to match the OpenAPI 3.0.x to take advantage of new features in OpenAPI 3 and Swagger, especially with file uploading..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden rework in elysiajs?\n\nAssistant: To eden rework in elysiajs, here's what you do:\nTo support more demand for Elysia, supporting Elysia Fn, Rest all together, Eden has been reworked to scale with the new architecture. Eden now exports 3 types of function: Eden Treaty, Eden Fn, and Eden Fetch. With the rework of type definitions and support for Elysia Eden, Eden is now much faster and better at inference type from the server. Auto-completion and faster and use fewer resources than it used to, in fact, Eden's type declaration has been almost 100% reworked to reduce the size and inference time, making it support over 350 routes of auto-completion in a blink of an eye (~0.26 seconds). To make Elysia Eden, fully type-safe, with Elysia's better understanding of TypeScript, Eden can now narrow down the type based on response status, allowing you to capture the type correctly in any matter of condition..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable improvement in elysiajs?\n\nAssistant: To notable improvement in elysiajs, here's what you do:\n- Add string format: 'email', 'uuid', 'date', 'date-time' - Update @sinclair/typebox to 0.25.24 - Update Raikiri to 0.2.0-beta.0 (ei) - Add file upload test thanks to #21 (@amirrezamahyari) - Pre compile lowercase method for Eden - Reduce complex instruction for most Elysia types - Compile ElysiaRoute type to literal - Optimize type compliation, type inference and auto-completion - Improve type compilation speed - Improve TypeScript inference between plugin registration - Optimize TypeScript inference size - Context creation optimization - Use Raikiri router by default - Remove unused function - Refactor registerSchemaPath to support OpenAPI 3.0.3 - Add error inference for Eden - Mark @sinclair/typebox as optional peerDenpendencies..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I fix in elysiajs?\n\nAssistant: To fix in elysiajs, here's what you do:\n- Raikiri 0.2 thrown error on not found - Union response with t.File is not working - Definitions isn't defined on Swagger - details are missing on group plugin - group plugin, isn't unable to compile schema - group is not exportable because EXPOSED is a private property - Multiple cookies doesn't set content-type to application/json - EXPOSED is not export when using fn.permission - Missing merged return type for .ws - Missing nanoid - context side-effects - t.Files in swagger is referring to single file - Eden response type is unknown - Unable to type setModel inference definition via Eden - Handle error thrown in non permission function - Exported variable has or is using name 'SCHEMA' from external module - Exported variable has or is using name 'DEFS' from external module - Possible errors for building Elysia app with declaration: true in tsconfig.json..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I breaking change in elysiajs?\n\nAssistant: To breaking change in elysiajs, here's what you do:\n- Rename inject to derive - Depreacate ElysiaRoute, changed to inline - Remove derive - Update from OpenAPI 2.x to OpenAPI 3.0.3 - Move context.store[SYMBOL] to meta[SYMBOL]..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I afterward in elysiajs?\n\nAssistant: To afterward in elysiajs, here's what you do:\nWith the introduction of Elysia Fn, I'm personally excited to see how it will be adopted in frontend development, removing the line between frontend and backend. And Type Rework of Elysia, making type-checking and auto-completion much faster. I'm excited to see how you will use Elysia to create the wonderful things you are going to build. We have Discord server dedicated to Elysia. Feel free to say hi or just chill and hang out..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Elysia Fn for rapid development with full type safety and auto-completion.\n\nLeverage the new file upload features for better validation and type completion.\n\nUtilize the OpenAPI schema for improved API definitions and support for multiple content types.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-03", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "description": "This page covers the release candidate of Elysia 0.3, detailing new features, improvements, and technical details of the update.", "has_code_examples": false, "has_best_practices": true, "section_count": 11, "timestamp": "2025-03-01 03:22:58", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "og:image:width": "1920", "title": "Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground] | ElysiaJS", "og:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "language": "en-US", "og:description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:image:height": "1080", "ogDescription": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "og:title": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "ogTitle": "Introducing Elysia 0.3 - 大地の閾を探して [Looking for Edge of Ground]", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/elysia-03/edge-of-ground.webp", "description": "Introducing Elysia Fn, Type Rework for highly scalable TypeScript performance, File Upload support and validation, Reworked Eden Treaty.", "scrapeId": "b13a693b-f0f8-4eea-8b66-47ab18dadd05", "sourceURL": "https://elysiajs.com/blog/elysia-03", "url": "https://elysiajs.com/blog/elysia-03", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 1.1 - Grown-up's Paradise is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 1.1 - Grown-up's Paradise in elysiajs.\n\n# Elysia 1.1 - Grown-up's Paradise\n\nElysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.Here's a quick rundown of what this is about:\n\n## OpenTelemetry\n\nObservability is one of an important aspect for production. It allows us to understand how our server works on production, identifying problems and bottlenecks. One of the most popular tools for observability is OpenTelemetry. However, we acknowledge that it's hard and take time to setup and instrument your server correctly. It's hard to integrate OpenTelemetry to most existing framework and library. Most revolve around hacky solution, monkey patching, prototype pollution, or manual instrumentation as the framework is not designed for observability from the start. That's why we introduce first party support for OpenTelemetry on Elysia. To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance.\n\n## Trace v2\n\nElysia OpenTelemetry is built on Trace v2, replacing Trace v1. Trace v2 allows us to trace any part of our server with 100% synchronous behavior, instead of relying on parallel event listener bridge (goodbye dead lock). It's entirely rewritten to not only be faster, but also reliable, and accurate down to microsecond by relying on Elysia's ahead of time compilation and code injection.\n\n## Normalization\n\nElysia 1.1 now normalize data before it's being processed. To ensure that data is consistent and safe, Elysia will try to coerce data into an exact data shape defined in schema, removing additional fields, and normalizing data into a consistent format.\n\n## Data type coercion\n\nPreviously Elysia is using an exact data type without coercion unless explicitly specified to. For example, to parse a query parameter as a number, you need to explicitly cast it as `t.Numeric` instead of `t.Number`. However, in Elysia 1.1, we introduce data type coercion, which will automatically coerce data into the correct data type if possible.\n\n## Guard as\n\nPreviously, `guard` will only apply to the current instance only. In Elysia 1.1, we add `as` property to `guard` allowing us to apply guard as `scoped` or `global` as same as adding event listener.\n\n## Bulk cast\n\nContinue from code above, sometimes we want to reapply plugin to parent instance as well but as it's limited by `scoped` mechanism, it's limited to 1 parent only. To apply to the parent instance, we need to \"lift the scope up to the parent instance.\"\n\n## Response reconciliation\n\nIn Elysia 1.0, Elysia will prefers either one of the schema from the scope, and will not merge them together. However, on Elysia 1.1, Elysia will try to reconcile response schema from all scope from each status code and merge them together.\n\n## Optional Path Parameter\n\nElysia now support optional path parameter by adding `?` to the end of path parameter.\n\n## Generator response stream\n\nPreviously, you can stream a response by using `@elysiajs/stream` package. However, there's a limitation. Now, Elysia support response streaming out of the box by using a generator function.\n\n## Breaking Change\n\n- Parse value as string for all validators unless explicitly specified. - See [50a5d92](https://github.com/elysiajs/elysia/commit/50a5d92ea3212c5f95f94552e4cb7d31b2c253ad), [44bf279](https://github.com/elysiajs/elysia/commit/44bf279c3752c6909533d19c83b24413d19d27fa). - Remove objects auto-parsing in query unless explicitly specified via query.\n\n## Notable Change\n\n- Add auto-complete for `set.headers`. - Remove prototype poluation from hook.\n\n## Bug fix\n\n- Normalize headers accidentally use query validator check instead. - `onError` missing trace symbol.\n\n## Afterword\n\nHi, SaltyAom here again and thanks you for supporting Elysia for the past 2 years. It has been a lovely journey, and to see so many overwhelming support for Elysia make me feels so happy so much that I don't know how to express it.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "overview", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I opentelemetry in elysiajs?\n\nAssistant: To opentelemetry in elysiajs, here's what you do:\nObservability is one of an important aspect for production. It allows us to understand how our server works on production, identifying problems and bottlenecks. One of the most popular tools for observability is OpenTelemetry. However, we acknowledge that it's hard and take time to setup and instrument your server correctly. It's hard to integrate OpenTelemetry to most existing framework and library. Most revolve around hacky solution, monkey patching, prototype pollution, or manual instrumentation as the framework is not designed for observability from the start. That's why we introduce first party support for OpenTelemetry on Elysia. To start using OpenTelemetry, install `@elysiajs/opentelemetry` and apply plugin to any instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trace v2 in elysiajs?\n\nAssistant: To trace v2 in elysiajs, here's what you do:\nElysia OpenTelemetry is built on Trace v2, replacing Trace v1. Trace v2 allows us to trace any part of our server with 100% synchronous behavior, instead of relying on parallel event listener bridge (goodbye dead lock). It's entirely rewritten to not only be faster, but also reliable, and accurate down to microsecond by relying on Elysia's ahead of time compilation and code injection..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I normalization in elysiajs?\n\nAssistant: To normalization in elysiajs, here's what you do:\nElysia 1.1 now normalize data before it's being processed. To ensure that data is consistent and safe, Elysia will try to coerce data into an exact data shape defined in schema, removing additional fields, and normalizing data into a consistent format..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I data type coercion in elysiajs?\n\nAssistant: To data type coercion in elysiajs, here's what you do:\nPreviously Elysia is using an exact data type without coercion unless explicitly specified to. For example, to parse a query parameter as a number, you need to explicitly cast it as `t.Numeric` instead of `t.Number`. However, in Elysia 1.1, we introduce data type coercion, which will automatically coerce data into the correct data type if possible..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I guard as in elysiajs?\n\nAssistant: To guard as in elysiajs, here's what you do:\nPreviously, `guard` will only apply to the current instance only. In Elysia 1.1, we add `as` property to `guard` allowing us to apply guard as `scoped` or `global` as same as adding event listener..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bulk cast in elysiajs?\n\nAssistant: To bulk cast in elysiajs, here's what you do:\nContinue from code above, sometimes we want to reapply plugin to parent instance as well but as it's limited by `scoped` mechanism, it's limited to 1 parent only. To apply to the parent instance, we need to \"lift the scope up to the parent instance.\".\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I response reconciliation in elysiajs?\n\nAssistant: To response reconciliation in elysiajs, here's what you do:\nIn Elysia 1.0, Elysia will prefers either one of the schema from the scope, and will not merge them together. However, on Elysia 1.1, Elysia will try to reconcile response schema from all scope from each status code and merge them together..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I optional path parameter in elysiajs?\n\nAssistant: To optional path parameter in elysiajs, here's what you do:\nElysia now support optional path parameter by adding `?` to the end of path parameter..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I generator response stream in elysiajs?\n\nAssistant: To generator response stream in elysiajs, here's what you do:\nPreviously, you can stream a response by using `@elysiajs/stream` package. However, there's a limitation. Now, Elysia support response streaming out of the box by using a generator function..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I breaking change in elysiajs?\n\nAssistant: To breaking change in elysiajs, here's what you do:\n- Parse value as string for all validators unless explicitly specified. - See [50a5d92](https://github.com/elysiajs/elysia/commit/50a5d92ea3212c5f95f94552e4cb7d31b2c253ad), [44bf279](https://github.com/elysiajs/elysia/commit/44bf279c3752c6909533d19c83b24413d19d27fa). - Remove objects auto-parsing in query unless explicitly specified via query..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable change in elysiajs?\n\nAssistant: To notable change in elysiajs, here's what you do:\n- Add auto-complete for `set.headers`. - Remove prototype poluation from hook..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bug fix in elysiajs?\n\nAssistant: To bug fix in elysiajs, here's what you do:\n- Normalize headers accidentally use query validator check instead. - `onError` missing trace symbol..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I afterword in elysiajs?\n\nAssistant: To afterword in elysiajs, here's what you do:\nHi, SaltyAom here again and thanks you for supporting Elysia for the past 2 years. It has been a lovely journey, and to see so many overwhelming support for Elysia make me feels so happy so much that I don't know how to express it..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "section_detail", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 1.1 - Grown-up's Paradise in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**OpenTelemetry Setup**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { opentelemetry } from '@elysiajs/opentelemetry'\n\nimport { BatchSpanProcessor } from '@opentelemetry/sdk-trace-node'\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-proto'\n\nnew Elysia()\n\t.use(\n\t\topentelemetry({\n\t\t\tspanProcessors: [\n\t\t\t\tnew BatchSpanProcessor(\n\t\t\t\t\tnew OTLPTraceExporter()\n\t\t\t\t)\n\t\t\t]\n\t\t})\n\t)\n```\n\nThis snippet shows you how to opentelemetry setup, which is an important aspect of elysia 1.1 - grown-up's paradise.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "code_examples", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 1.1 - Grown-up's Paradise in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nName your function to improve trace readability.\n\nUse generator functions for response streaming for better type inference.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-11", "title": "Elysia 1.1 - Grown-up's Paradise", "description": "Elysia 1.1 focuses on several improvements to Developer Experience, including OpenTelemetry support, Trace v2, data normalization, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:23:16", "type": "best_practices", "page_metadata": {"title": "Elysia 1.1 - Grown-up's Paradise | ElysiaJS", "og:description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "twitter:card": "summary_large_image", "og:image:height": "1080", "og:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "generator": "VitePress v1.6.3", "ogImage": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "description": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "ogTitle": "Elysia 1.1 - Grown-up's Paradise", "og:title": "Elysia 1.1 - Grown-up's Paradise", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/blog/elysia-11/elysia-11.webp", "language": "en-US", "ogDescription": "Introducing OpenTelemetry, and Trace v2. Data coercion and normalization. Guard plugin and bulk cast. Optional path parameter. Decorator and Response status reconcilation. Generator response stream.", "og:image:width": "1920", "scrapeId": "83aa598b-472f-4a47-8339-f82fbe552c3f", "sourceURL": "https://elysiajs.com/blog/elysia-11", "url": "https://elysiajs.com/blog/elysia-11", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.5 - Radiant is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.5 - Radiant in elysiajs.\n\n# Elysia 0.5 - Radiant\n\nNamed after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.Here's a quick rundown of what this is about:\n\n## Static Code Analysis\n\nWith Elysia 0.4 introducing Ahead of Time compilation, allowing Elysia to optimize function calls, and eliminate many overhead we previously had. Today we are expanding Ahead of Time compilation to be even faster with Static Code Analysis, to be the fastest Bun web framework. Static Code Analysis allows Elysia to read your function, handlers, life-cycle and schema, then try to adjust fetch handler compile the handler ahead of time, and eliminating any unused code and optimize where possible. For example, if you're using `schema` with body type of Object, Elysia expects that this route is JSON first, and will parse the body as JSON instead of relying on dynamic checking with Content-Type header:\n\napp.post('/sign-in', ({ body }) => signIn(body), {\n    schema: {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    }\n})\n\nThis allows us to improve performance of body parsing by almost 2.5x. With Static Code Analysis, instead of relying on betting if you will use expensive properties or not. Elysia can read your code and detect what you will be using, and adjust itself ahead of time to fit your need. This means that if you're not using expensive property like `query`, or `body`, Elysia will skip the parsing entirely to improve the performance.\n\n// Body is not used, skip body parsing\napp.post('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    }\n})\n\nWith Static Code Analysis, and Ahead of Time compilation, you can rest assured that Elysia is very good at reading your code and adjust itself to maximize the performance automatically. Static Code Analysis allows us to improve Elysia performance beyond we have imagined, here's a notable mention:\n- overall improvement by ~15%\n- static router fast ~33%\n- empty query parsing ~50%\n- strict type body parsing faster by ~100%\n- empty body parsing faster by ~150%\n\nWith this improvement, we are able to surpass **Stricjs** in terms of performance, compared using Elysia 0.5.0-beta.0 and Stricjs 2.0.4. We intend to explain this in more detail with our research paper to explain this topic and how we improve the performance with Static Code Analysis to be published in the future.\n\n## New Router, \"Memoirist\"\n\nSince 0.2, we have been building our own Router, \"Raikiri\". Raikiri served its purpose, it's built on the ground up to be fast with our custom Radix Tree implementation. But as we progress, we found that Raikiri doesn't perform well complex reconciliation with Radix Tree, which caused developers to report many bugs especially with dynamic routes which usually solved by re-ordering routes. We understand, and patched many areas in Raikiri's Radix Tree reconciliation algorithm, however our algorithm is complex, and getting more expensive as we patch the router until it doesn't fit our purpose anymore. That's why we introduce a new router, \"Memoirist\". Memoirist is a stable Raix Tree router to fastly handle dynamic path based on Medley Router's algorithm, while on the static side take advantage of Ahead of Time compilation. With this release, we will be migrating from Raikiri to Memoirist for stability improvement and even faster path mapping than Raikiri. We hope that any problems you have encountered with Raikiri will be solved with Memoirist and we encourage you to give it a try.\n\n## TypeBox 0.28\n\nTypeBox is a core library that powered Elysia's strict type system known as **Elysia.t**. In this update, we update TypeBox from 0.26 to 0.28 to make even more fine-grained Type System near strictly typed language. We update TypeBox to improve Elysia typing system to match new TypeBox feature with newer version of TypeScript like **Constant Generic**.\n\nnew Elysia()\n    .decorate('version', 'Elysia Radiant')\n    .model(\n        'name',\n        Type.TemplateLiteral([\n            Type.Literal('Elysia '),\n            Type.Union([\n                Type.Literal('The Blessing'),\n                Type.Literal('Radiant')\n            ])\n        ])\n    )\n    // Strictly check for template literal\n    .get('/', ({ version }) => version)\n\nThis allows us to strictly check for template literal, or a pattern of string/number to validate for your on both runtime and development process all at once.\n\n## Ahead of Time & Type System\n\nAnd with Ahead of Time compilation, Elysia can adjust itself to optimize and match schema defined type to reduce overhead. That's why we introduced a new Type, **URLEncoded**. As we previously mentioned before, Elysia now can take an advantage of schema and optimize itself Ahead of Time, body parsing is one of more expensive area in Elysia, that's why we introduce a dedicated type for parsing body like URLEncoded. By default, Elysia will parse body based on body's schema type as the following:\n- t.URLEncoded -> `application/x-www-form-urlencoded`\n- t.Object -> `application/json`\n- t.File -> `multipart/form-data`\n- the rest -> `text/plain`\n\nHowever, you can explicitly tell Elysia to parse body with the specific method using `type` as the following:\n\napp.post('/', ({ body }) => body, {\n    type: 'json'\n})\n\n`type` may be one of the following:\n\n```\ntype ContentType = |\n    // Shorthand for 'text/plain'\n    | 'text'\n    // Shorthand for 'application/json'\n    | 'json'\n    // Shorthand for 'multipart/form-data'\n    | 'formdata'\n    // Shorthand for 'application/x-www-form-urlencoded'\n    | 'urlencoded'\n    | 'text/plain'\n    | 'application/json'\n    | 'multipart/form-data'\n    | 'application/x-www-form-urlencoded'\n```\n\nYou can find more detail at the [explicit body](https://elysiajs.com/life-cycle/parse.html#explicit-body) page in concept.\n\n## Numeric Type\n\nWe found that one of the redundant tasks our developers found using Elysia is to parse numeric string. That's we introduce a new **Numeric** Type. Previously on Elysia 0.4, to parse numeric string, we need to use `transform` to manually parse the string ourselves.\n\napp.get('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        params: t.Object({\n            id: t.Number()\n        })\n    },\n    transform({ params }) {\n        const id = +params.id\n\n        if(!Number.isNaN(id))\n            params.id = id\n    }\n})\n\nWe found that this step is redundant, and full of boilerplate, we want to tap into this problem and solve it in a declarative way. Thanks to Static Code Analysis, Numeric type allows you to define a numeric string and parse it to number automatically. Once validated, a numeric type will be parsed as number automatically both on runtime and type level to fit our need.\n\napp.get('/id/:id', ({ params: { id } }) => id, {\n    params: t.Object({\n        id: t.Numeric()\n    })\n})\n\nYou can use numeric type on any property that supports schema typing, including:\n- params\n- query\n- headers\n- body\n- response\n\nWe hope that you will find this new Numeric type useful in your server. You can find more detail at [numeric type](https://elysiajs.com/validation/elysia-type.html#numeric) page in concept. With TypeBox 0.28, we are making Elysia type system more complete, and we excited to see how it plays out on your end.\n\n## Inline Schema\n\nYou might have noticed already that our examples are not using a `schema.type` to create a type anymore, because we are making a **breaking change** to move schema and inline it to hook statement instead.\n\n// ? From\napp.get('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        params: t.Object({\n            id: t.Number()\n        })\n    },\n})\n\n// ? To\napp.get('/id/:id', ({ params: { id } }) => id, {\n    params: t.Object({\n        id: t.Number()\n    })\n})\n\nWe think a lot when making a breaking change especially to one of the most important part of Elysia. Based on a lot of tinkering and real-world usage, we try to suggest this new change for our community with a vote, and found that around 60% of Elysia developers are happy with migrating to the inline schema.\n\n## \"headers\" fields\n\nPreviously, you can get headers field by accessing `request.headers.get`, and you might wonder why we don't ship headers by default.\n\napp.post('/headers', ({ request: { headers } }) => {\n    return headers.get('content-type')\n})\n\nBecause parsing headers has its own overhead, and we found that many developers don't access headers often, so we decided to leave headers un-implemented. But that has changed with Static Code Analysis, Elysia can read your code if you intend to use a header or, and then dynamically parse headers based on your code. Static Code Analysis allows us to more new features without any overhead.\n\napp.post('/headers', ({ headers }) => headers['content-type'])\n\nParsed headers will be available as plain object with a lower-case key of the header name.\n\n## State, Decorate, Model rework\n\nOne of the main features of Elysia is able to customize Elysia to your need. We revisited `state`, `decorate`, and `setModel`, and we saw that API is not consistent, and can be improved. We found that many have been using `state`, and `decorate` repeatedly for when setting multiple values, and want to set them all at once as same as `setModel`, and we want to unify API specification of `setModel` to be used the same way as `state` and `decorate` to be more predictable. So we renamed `setModel` to `model`, and add support for setting single and multiple values for `state`, `decorate`, and `model` with function overloading.\n\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    // ? set model using label\n    .model('string', t.String())\n    .model({\n        number: t.Number()\n    })\n    .state('visitor', 1)\n    // ? set model using object\n    .state({\n        multiple: 'value',\n        are: 'now supported!'\n    })\n    .decorate('visitor', 1)\n    // ? set model using object\n    .decorate({\n        name: 'world',\n        number: 2\n    })\n\nAnd as we raised minimum support of TypeScript to 5.0 to improve strictly typed with **Constant Generic**. `state`, `decorate`, and `model` now support literal type, and template string to strictly validate type both runtime and type-level.\n\n// ? state, decorate, now support literal\napp.get('/', ({ body }) => number, {\n    body: t.Literal(1),\n    response: t.Literal(2)\n})\n\n## Group and Guard\n\nWe found that many developers often use `group` with `guard`, we found that nesting them can be later redundant and maybe boilerplate full. Starting with Elysia 0.5, we add a guard scope for `.group` as an optional second parameter.\n\n// ✅ previously, you need to nest guard inside a group\napp.group('/v1', (app) =>\n    app.guard(\n        {\n            body: t.Literal()\n        },\n        (app) => app.get('/student', () => 'Rikuhachima Aru')\n    )\n)\n\n// ✅ new, compatible with old syntax\napp.group(\n    '/v1', {\n        body: t.Literal('Rikuhachima Aru')\n    },\n    app => app.get('/student', () => 'Rikuhachima Aru')\n)\n\n// ✅ compatible with function overload\napp.group('/v1', app => app.get('/student', () => 'Rikuhachima Aru'))\n\nWe hope that you will find all these new revisited API more useful and fits more to your use-case.\n\n## Type Stability\n\nElysia Type System is complex. We can declare variable on type-level, reference type by name, apply multiple Elysia instance, and even have support for closure-like at type level, which is really complex to make you have the best developer experience especially with Eden. But sometimes type isn't working as intent when we update Elysia version, because we have to manually check it before every release, and can cause human error. With Elysia 0.5, we add unit-test for testing at type-level to prevent possible bugs in the future, these tests will run before every release and if error happens will prevent us from publishing the package, forcing us to fix the type problem. Which means that you can now rely on us to check for type integrity for every release, and confident that there will be less bug in regard of type reference.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "overview", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I static code analysis in elysiajs?\n\nAssistant: To static code analysis in elysiajs, here's what you do:\nWith Elysia 0.4 introducing Ahead of Time compilation, allowing Elysia to optimize function calls, and eliminate many overhead we previously had. Today we are expanding Ahead of Time compilation to be even faster with Static Code Analysis, to be the fastest Bun web framework. Static Code Analysis allows Elysia to read your function, handlers, life-cycle and schema, then try to adjust fetch handler compile the handler ahead of time, and eliminating any unused code and optimize where possible. For example, if you're using `schema` with body type of Object, Elysia expects that this route is JSON first, and will parse the body as JSON instead of relying on dynamic checking with Content-Type header:\n\napp.post('/sign-in', ({ body }) => signIn(body), {\n    schema: {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    }\n})\n\nThis allows us to improve performance of body parsing by almost 2.5x. With Static Code Analysis, instead of relying on betting if you will use expensive properties or not. Elysia can read your code and detect what you will be using, and adjust itself ahead of time to fit your need. This means that if you're not using expensive property like `query`, or `body`, Elysia will skip the parsing entirely to improve the performance.\n\n// Body is not used, skip body parsing\napp.post('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    }\n})\n\nWith Static Code Analysis, and Ahead of Time compilation, you can rest assured that Elysia is very good at reading your code and adjust itself to maximize the performance automatically. Static Code Analysis allows us to improve Elysia performance beyond we have imagined, here's a notable mention:\n- overall improvement by ~15%\n- static router fast ~33%\n- empty query parsing ~50%\n- strict type body parsing faster by ~100%\n- empty body parsing faster by ~150%\n\nWith this improvement, we are able to surpass **Stricjs** in terms of performance, compared using Elysia 0.5.0-beta.0 and Stricjs 2.0.4. We intend to explain this in more detail with our research paper to explain this topic and how we improve the performance with Static Code Analysis to be published in the future..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I new router, \"memoirist\" in elysiajs?\n\nAssistant: To new router, \"memoirist\" in elysiajs, here's what you do:\nSince 0.2, we have been building our own Router, \"Raikiri\". Raikiri served its purpose, it's built on the ground up to be fast with our custom Radix Tree implementation. But as we progress, we found that Raikiri doesn't perform well complex reconciliation with Radix Tree, which caused developers to report many bugs especially with dynamic routes which usually solved by re-ordering routes. We understand, and patched many areas in Raikiri's Radix Tree reconciliation algorithm, however our algorithm is complex, and getting more expensive as we patch the router until it doesn't fit our purpose anymore. That's why we introduce a new router, \"Memoirist\". Memoirist is a stable Raix Tree router to fastly handle dynamic path based on Medley Router's algorithm, while on the static side take advantage of Ahead of Time compilation. With this release, we will be migrating from Raikiri to Memoirist for stability improvement and even faster path mapping than Raikiri. We hope that any problems you have encountered with Raikiri will be solved with Memoirist and we encourage you to give it a try..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typebox 0.28 in elysiajs?\n\nAssistant: To typebox 0.28 in elysiajs, here's what you do:\nTypeBox is a core library that powered Elysia's strict type system known as **Elysia.t**. In this update, we update TypeBox from 0.26 to 0.28 to make even more fine-grained Type System near strictly typed language. We update TypeBox to improve Elysia typing system to match new TypeBox feature with newer version of TypeScript like **Constant Generic**.\n\nnew Elysia()\n    .decorate('version', 'Elysia Radiant')\n    .model(\n        'name',\n        Type.TemplateLiteral([\n            Type.Literal('Elysia '),\n            Type.Union([\n                Type.Literal('The Blessing'),\n                Type.Literal('Radiant')\n            ])\n        ])\n    )\n    // Strictly check for template literal\n    .get('/', ({ version }) => version)\n\nThis allows us to strictly check for template literal, or a pattern of string/number to validate for your on both runtime and development process all at once..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ahead of time & type system in elysiajs?\n\nAssistant: To ahead of time & type system in elysiajs, here's what you do:\nAnd with Ahead of Time compilation, Elysia can adjust itself to optimize and match schema defined type to reduce overhead. That's why we introduced a new Type, **URLEncoded**. As we previously mentioned before, Elysia now can take an advantage of schema and optimize itself Ahead of Time, body parsing is one of more expensive area in Elysia, that's why we introduce a dedicated type for parsing body like URLEncoded. By default, Elysia will parse body based on body's schema type as the following:\n- t.URLEncoded -> `application/x-www-form-urlencoded`\n- t.Object -> `application/json`\n- t.File -> `multipart/form-data`\n- the rest -> `text/plain`\n\nHowever, you can explicitly tell Elysia to parse body with the specific method using `type` as the following:\n\napp.post('/', ({ body }) => body, {\n    type: 'json'\n})\n\n`type` may be one of the following:\n\n```\ntype ContentType = |\n    // Shorthand for 'text/plain'\n    | 'text'\n    // Shorthand for 'application/json'\n    | 'json'\n    // Shorthand for 'multipart/form-data'\n    | 'formdata'\n    // Shorthand for 'application/x-www-form-urlencoded'\n    | 'urlencoded'\n    | 'text/plain'\n    | 'application/json'\n    | 'multipart/form-data'\n    | 'application/x-www-form-urlencoded'\n```\n\nYou can find more detail at the [explicit body](https://elysiajs.com/life-cycle/parse.html#explicit-body) page in concept..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I numeric type in elysiajs?\n\nAssistant: To numeric type in elysiajs, here's what you do:\nWe found that one of the redundant tasks our developers found using Elysia is to parse numeric string. That's we introduce a new **Numeric** Type. Previously on Elysia 0.4, to parse numeric string, we need to use `transform` to manually parse the string ourselves.\n\napp.get('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        params: t.Object({\n            id: t.Number()\n        })\n    },\n    transform({ params }) {\n        const id = +params.id\n\n        if(!Number.isNaN(id))\n            params.id = id\n    }\n})\n\nWe found that this step is redundant, and full of boilerplate, we want to tap into this problem and solve it in a declarative way. Thanks to Static Code Analysis, Numeric type allows you to define a numeric string and parse it to number automatically. Once validated, a numeric type will be parsed as number automatically both on runtime and type level to fit our need.\n\napp.get('/id/:id', ({ params: { id } }) => id, {\n    params: t.Object({\n        id: t.Numeric()\n    })\n})\n\nYou can use numeric type on any property that supports schema typing, including:\n- params\n- query\n- headers\n- body\n- response\n\nWe hope that you will find this new Numeric type useful in your server. You can find more detail at [numeric type](https://elysiajs.com/validation/elysia-type.html#numeric) page in concept. With TypeBox 0.28, we are making Elysia type system more complete, and we excited to see how it plays out on your end..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I inline schema in elysiajs?\n\nAssistant: To inline schema in elysiajs, here's what you do:\nYou might have noticed already that our examples are not using a `schema.type` to create a type anymore, because we are making a **breaking change** to move schema and inline it to hook statement instead.\n\n// ? From\napp.get('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        params: t.Object({\n            id: t.Number()\n        })\n    },\n})\n\n// ? To\napp.get('/id/:id', ({ params: { id } }) => id, {\n    params: t.Object({\n        id: t.Number()\n    })\n})\n\nWe think a lot when making a breaking change especially to one of the most important part of Elysia. Based on a lot of tinkering and real-world usage, we try to suggest this new change for our community with a vote, and found that around 60% of Elysia developers are happy with migrating to the inline schema..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I \"headers\" fields in elysiajs?\n\nAssistant: To \"headers\" fields in elysiajs, here's what you do:\nPreviously, you can get headers field by accessing `request.headers.get`, and you might wonder why we don't ship headers by default.\n\napp.post('/headers', ({ request: { headers } }) => {\n    return headers.get('content-type')\n})\n\nBecause parsing headers has its own overhead, and we found that many developers don't access headers often, so we decided to leave headers un-implemented. But that has changed with Static Code Analysis, Elysia can read your code if you intend to use a header or, and then dynamically parse headers based on your code. Static Code Analysis allows us to more new features without any overhead.\n\napp.post('/headers', ({ headers }) => headers['content-type'])\n\nParsed headers will be available as plain object with a lower-case key of the header name..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I state, decorate, model rework in elysiajs?\n\nAssistant: To state, decorate, model rework in elysiajs, here's what you do:\nOne of the main features of Elysia is able to customize Elysia to your need. We revisited `state`, `decorate`, and `setModel`, and we saw that API is not consistent, and can be improved. We found that many have been using `state`, and `decorate` repeatedly for when setting multiple values, and want to set them all at once as same as `setModel`, and we want to unify API specification of `setModel` to be used the same way as `state` and `decorate` to be more predictable. So we renamed `setModel` to `model`, and add support for setting single and multiple values for `state`, `decorate`, and `model` with function overloading.\n\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    // ? set model using label\n    .model('string', t.String())\n    .model({\n        number: t.Number()\n    })\n    .state('visitor', 1)\n    // ? set model using object\n    .state({\n        multiple: 'value',\n        are: 'now supported!'\n    })\n    .decorate('visitor', 1)\n    // ? set model using object\n    .decorate({\n        name: 'world',\n        number: 2\n    })\n\nAnd as we raised minimum support of TypeScript to 5.0 to improve strictly typed with **Constant Generic**. `state`, `decorate`, and `model` now support literal type, and template string to strictly validate type both runtime and type-level.\n\n// ? state, decorate, now support literal\napp.get('/', ({ body }) => number, {\n    body: t.Literal(1),\n    response: t.Literal(2)\n}).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I group and guard in elysiajs?\n\nAssistant: To group and guard in elysiajs, here's what you do:\nWe found that many developers often use `group` with `guard`, we found that nesting them can be later redundant and maybe boilerplate full. Starting with Elysia 0.5, we add a guard scope for `.group` as an optional second parameter.\n\n// ✅ previously, you need to nest guard inside a group\napp.group('/v1', (app) =>\n    app.guard(\n        {\n            body: t.Literal()\n        },\n        (app) => app.get('/student', () => 'Rikuhachima Aru')\n    )\n)\n\n// ✅ new, compatible with old syntax\napp.group(\n    '/v1', {\n        body: t.Literal('Rikuhachima Aru')\n    },\n    app => app.get('/student', () => 'Rikuhachima Aru')\n)\n\n// ✅ compatible with function overload\napp.group('/v1', app => app.get('/student', () => 'Rikuhachima Aru'))\n\nWe hope that you will find all these new revisited API more useful and fits more to your use-case..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type stability in elysiajs?\n\nAssistant: To type stability in elysiajs, here's what you do:\nElysia Type System is complex. We can declare variable on type-level, reference type by name, apply multiple Elysia instance, and even have support for closure-like at type level, which is really complex to make you have the best developer experience especially with Eden. But sometimes type isn't working as intent when we update Elysia version, because we have to manually check it before every release, and can cause human error. With Elysia 0.5, we add unit-test for testing at type-level to prevent possible bugs in the future, these tests will run before every release and if error happens will prevent us from publishing the package, forcing us to fix the type problem. Which means that you can now rely on us to check for type integrity for every release, and confident that there will be less bug in regard of type reference..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "section_detail", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 0.5 - Radiant in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Static Code Analysis Example 1**:\n\n```yaml\napp.post('/sign-in', ({ body }) => signIn(body), {\n    schema: {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    }\n})\n```\n\nThis snippet shows you how to static code analysis example 1, which is an important aspect of elysia 0.5 - radiant.\n\n**Static Code Analysis Example 2**:\n\n```yaml\n// Body is not used, skip body parsing\napp.post('/id/:id', ({ params: { id } }) => id, {\n    schema: {\n        body: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    }\n})\n```\n\nThis snippet shows you how to static code analysis example 2, which is an important aspect of elysia 0.5 - radiant.\n\n**TypeBox Example**:\n\n```yaml\nnew Elysia()\n    .decorate('version', 'Elysia Radiant')\n    .model(\n        'name',\n        Type.TemplateLiteral([\n            Type.Literal('Elysia '),\n            Type.Union([\n                Type.Literal('The Blessing'),\n                Type.Literal('Radiant')\n            ])\n        ])\n    )\n    // Strictly check for template literal\n    .get('/', ({ version }) => version)\n```\n\nThis snippet shows you how to typebox example, which is an important aspect of elysia 0.5 - radiant.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "code_examples", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.5 - Radiant in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nElysia can read your code and detect what you will be using, and adjust itself ahead of time to fit your need.\n\nWith Static Code Analysis, you can improve performance by skipping unnecessary parsing.\n\nUse the new Numeric type to automatically parse numeric strings to numbers without boilerplate code.\n\nMigrate to inline schema for better readability and consistency in your code.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-05", "title": "Elysia 0.5 - Radiant", "description": "Named after Arknights' original music, 「Radiant」 composed by Monster Sirent Records. Radiant pushes the boundary of performance with more stability improvement especially types, and dynamic routes.", "has_code_examples": true, "has_best_practices": true, "section_count": 10, "timestamp": "2025-03-01 03:24:12", "type": "best_practices", "page_metadata": {"og:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "twitter:image": "https://elysiajs.com/blog/elysia-05/radiant.webp", "generator": "VitePress v1.6.3", "og:title": "Introducing Elysia 0.5 - Radiant", "description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate/model/group rework, and type stability.", "ogImage": "https://elysiajs.com/blog/elysia-05/radiant.webp", "title": "Elysia 0.5 - Radiant | ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "ogDescription": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "og:description": "Introducing Static Code Analysis, New router \"Memoirist\", TypeBox 0.28, Numeric type, inline schema, state/decorate rework, and type stability.", "ogTitle": "Introducing Elysia 0.5 - Radiant", "og:image:height": "1080", "twitter:card": "summary_large_image", "scrapeId": "05a09a28-40d5-4560-8498-cc3bf5f1096f", "sourceURL": "https://elysiajs.com/blog/elysia-05", "url": "https://elysiajs.com/blog/elysia-05", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Better Auth is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Better Auth in elysiajs.\n\n# Better Auth\n\nBetter Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.Here's a quick rundown of what this is about:\n\n## Better Auth CLI\n\nBetter Auth has a cli tool to generate auth schema with the following core tables in our database: `user`, `session`, `account`, and `verification`. More information about the core schema can be found in [Better Auth Core Schema](https://www.better-auth.com/docs/concepts/database#core-schema).\n\nTo read more on configuring your database, please refer to [Better Auth Database](https://www.better-auth.com/docs/concepts/database).\n\nTo read more on how to use the cli, please refer to [Better Auth CLI](https://www.better-auth.com/docs/concepts/cli).\n\n## Installation\n\nTo install Better Auth, run the following command:\n\nbash\n\n```\nbun add better-auth\n```\n\nMake sure to set your environment variables for better auth secret `BETTER_AUTH_SECRET=` and other enviroment variables such as Github and Google client id and secret.\n\nIn your project inside the `src` folder, create a `libs/auth` or `utils/auth` folder, and create a `auth.ts` file inside it and copy the following code.\n\n## Better Auth Instance\n\n```ts\nimport { betterAuth } from \"better-auth\";\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\nimport db from \"../../database\";\nimport { account, session, user, verification } from \"../../database/schema\";\nexport const auth = betterAuth({\n  database: drizzleAdapter(db, { // We're using Drizzle as our database\n    provider: \"pg\",\n    /*\n    * Map your schema into a better-auth schema\n    */\n    schema: {\n      user,\n      session,\n      verification,\n      account,\n    },\n  }),\n  emailAndPassword: {\n    enabled: true // If you want to use email and password auth\n  },\n  socialProviders: {\n    /*\n    * We're using Google and Github as our social provider,\n    * make sure you have set your environment variables\n    */\n    github: {\n      clientId: process.env.GITHUB_CLIENT_ID!,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET!,\n    },\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    },\n  },\n});\n```\n\nNow just run to generate an auth schema with the necessary tables.\n\n## Better Auth View\n\nWe need to setup a view to handle contexts for better auth. Create a file inside `src/utils/auth-view.ts` or `src/libs/auth/auth-view.ts` and copy the following code:\n\n```ts\nimport { Context } from \"elysia\";\nimport { auth } from \"./auth\";\n\nconst betterAuthView = (context: Context) => {\n    const BETTER_AUTH_ACCEPT_METHODS = [\"POST\", \"GET\"]\n    if(BETTER_AUTH_ACCEPT_METHODS.includes(context.request.method)) {\n      console.log(context.request)\n      return auth.handler(context.request);\n    }\n    else {\n      context.error(405)\n    }\n  }\n\nexport default betterAuthView;\n```\n\n## Better Auth Middleware\n\nWe can setup a simple middleware to handle better auth. Create a file inside `src/middlewares/auth-middleware.ts` and copy the following code:\n\n```ts\nimport { Session, User } from \"better-auth/types\";\nimport { auth } from \"../../utils/auth/auth\";\nimport { Context } from \"elysia\";\n\nexport const userMiddleware = async (c: Context) => {\n  const session = await auth.api.getSession({ headers: c.request.headers });\n\n  if (!session) {\n    c.set.status = 401;\n    return { success: 'error', message: \"Unauthorized Access: Token is missing\" };\n  }\n\n  return {\n    user: session.user,\n    session: session.session\n  }\n}\n\nexport const userInfo = (user: User | null, session: Session | null) => {\n  return {\n    user: user,\n    session: session\n  }\n}\n```\n\n## Attaching Better Auth Into Our Elysia App\n\nInside our index.ts file, we can attach the auth view so that it listens to our auth routes and add the following code:\n\n```ts\nconst app = new Elysia()\n.use(cors()).use(swagger()).all(\"/api/auth/*\", betterAuthView);\n\napp.listen(process.env.BACKEND_PORT || 8000);\n\nconsole.log(\n  `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n);\n```\n\nOur Auth Should now be working as expected! We can then just access our auth routes from our frontend as such:\n\n```ts\nimport { createAuthClient } from \"better-auth/client\"\nexport const authClient = createAuthClient({\n    baseURL: process.env.BETTER_AUTH_URL!\n})\n\nexport const signinGoogle = async () => {\n  const data = await authClient.signIn.social({\n    provider: \"google\",\n  });\n\n  return data;\n};\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "overview", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I better auth cli in elysiajs?\n\nAssistant: To better auth cli in elysiajs, here's what you do:\nBetter Auth has a cli tool to generate auth schema with the following core tables in our database: `user`, `session`, `account`, and `verification`. More information about the core schema can be found in [Better Auth Core Schema](https://www.better-auth.com/docs/concepts/database#core-schema).\n\nTo read more on configuring your database, please refer to [Better Auth Database](https://www.better-auth.com/docs/concepts/database).\n\nTo read more on how to use the cli, please refer to [Better Auth CLI](https://www.better-auth.com/docs/concepts/cli)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "section_detail", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I installation in elysiajs?\n\nAssistant: To installation in elysiajs, here's what you do:\nTo install Better Auth, run the following command:\n\nbash\n\n```\nbun add better-auth\n```\n\nMake sure to set your environment variables for better auth secret `BETTER_AUTH_SECRET=` and other enviroment variables such as Github and Google client id and secret.\n\nIn your project inside the `src` folder, create a `libs/auth` or `utils/auth` folder, and create a `auth.ts` file inside it and copy the following code..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "section_detail", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I better auth instance in elysiajs?\n\nAssistant: To better auth instance in elysiajs, here's what you do:\n```ts\nimport { betterAuth } from \"better-auth\";\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\nimport db from \"../../database\";\nimport { account, session, user, verification } from \"../../database/schema\";\nexport const auth = betterAuth({\n  database: drizzleAdapter(db, { // We're using Drizzle as our database\n    provider: \"pg\",\n    /*\n    * Map your schema into a better-auth schema\n    */\n    schema: {\n      user,\n      session,\n      verification,\n      account,\n    },\n  }),\n  emailAndPassword: {\n    enabled: true // If you want to use email and password auth\n  },\n  socialProviders: {\n    /*\n    * We're using Google and Github as our social provider,\n    * make sure you have set your environment variables\n    */\n    github: {\n      clientId: process.env.GITHUB_CLIENT_ID!,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET!,\n    },\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    },\n  },\n});\n```\n\nNow just run to generate an auth schema with the necessary tables..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "section_detail", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I better auth view in elysiajs?\n\nAssistant: To better auth view in elysiajs, here's what you do:\nWe need to setup a view to handle contexts for better auth. Create a file inside `src/utils/auth-view.ts` or `src/libs/auth/auth-view.ts` and copy the following code:\n\n```ts\nimport { Context } from \"elysia\";\nimport { auth } from \"./auth\";\n\nconst betterAuthView = (context: Context) => {\n    const BETTER_AUTH_ACCEPT_METHODS = [\"POST\", \"GET\"]\n    if(BETTER_AUTH_ACCEPT_METHODS.includes(context.request.method)) {\n      console.log(context.request)\n      return auth.handler(context.request);\n    }\n    else {\n      context.error(405)\n    }\n  }\n\nexport default betterAuthView;\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "section_detail", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I better auth middleware in elysiajs?\n\nAssistant: To better auth middleware in elysiajs, here's what you do:\nWe can setup a simple middleware to handle better auth. Create a file inside `src/middlewares/auth-middleware.ts` and copy the following code:\n\n```ts\nimport { Session, User } from \"better-auth/types\";\nimport { auth } from \"../../utils/auth/auth\";\nimport { Context } from \"elysia\";\n\nexport const userMiddleware = async (c: Context) => {\n  const session = await auth.api.getSession({ headers: c.request.headers });\n\n  if (!session) {\n    c.set.status = 401;\n    return { success: 'error', message: \"Unauthorized Access: Token is missing\" };\n  }\n\n  return {\n    user: session.user,\n    session: session.session\n  }\n}\n\nexport const userInfo = (user: User | null, session: Session | null) => {\n  return {\n    user: user,\n    session: session\n  }\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "section_detail", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I attaching better auth into our elysia app in elysiajs?\n\nAssistant: To attaching better auth into our elysia app in elysiajs, here's what you do:\nInside our index.ts file, we can attach the auth view so that it listens to our auth routes and add the following code:\n\n```ts\nconst app = new Elysia()\n.use(cors()).use(swagger()).all(\"/api/auth/*\", betterAuthView);\n\napp.listen(process.env.BACKEND_PORT || 8000);\n\nconsole.log(\n  `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n);\n```\n\nOur Auth Should now be working as expected! We can then just access our auth routes from our frontend as such:\n\n```ts\nimport { createAuthClient } from \"better-auth/client\"\nexport const authClient = createAuthClient({\n    baseURL: process.env.BETTER_AUTH_URL!\n})\n\nexport const signinGoogle = async () => {\n  const data = await authClient.signIn.social({\n    provider: \"google\",\n  });\n\n  return data;\n};\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "section_detail", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Better Auth in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Installation Command**:\n\n```yaml\nbun add better-auth\n```\n\nThis snippet shows you how to installation command, which is an important aspect of better auth.\n\n**Better Auth Instance Code**:\n\n```yaml\nimport { betterAuth } from \"better-auth\";\nimport { drizzleAdapter } from \"better-auth/adapters/drizzle\";\nimport db from \"../../database\";\nimport { account, session, user, verification } from \"../../database/schema\";\nexport const auth = betterAuth({\n  database: drizzleAdapter(db, { // We're using Drizzle as our database\n    provider: \"pg\",\n    /*\n    * Map your schema into a better-auth schema\n    */\n    schema: {\n      user,\n      session,\n      verification,\n      account,\n    },\n  }),\n  emailAndPassword: {\n    enabled: true // If you want to use email and password auth\n  },\n  socialProviders: {\n    /*\n    * We're using Google and Github as our social provider,\n    * make sure you have set your environment variables\n    */\n    github: {\n      clientId: process.env.GITHUB_CLIENT_ID!,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET!,\n    },\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    },\n  },\n});\n```\n\nThis snippet shows you how to better auth instance code, which is an important aspect of better auth.\n\n**Better Auth View Code**:\n\n```yaml\nimport { Context } from \"elysia\";\nimport { auth } from \"./auth\";\n\nconst betterAuthView = (context: Context) => {\n    const BETTER_AUTH_ACCEPT_METHODS = [\"POST\", \"GET\"]\n    if(BETTER_AUTH_ACCEPT_METHODS.includes(context.request.method)) {\n      console.log(context.request)\n      return auth.handler(context.request);\n    }\n    else {\n      context.error(405)\n    }\n  }\n\nexport default betterAuthView;\n```\n\nThis snippet shows you how to better auth view code, which is an important aspect of better auth.\n\n", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "code_examples", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Better Auth in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nMake sure to set your environment variables for better auth secret `BETTER_AUTH_SECRET=` and other environment variables such as Github and Google client id and secret.\n\nUse the `--output` option to specify the output directory for the generated files.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/recipe/better-auth", "title": "Better Auth", "description": "Better Auth is framework-agnostic authentication (and authorization) framework for TypeScript. It provides a comprehensive set of features out of the box and includes a plugin ecosystem that simplifies adding advanced functionalities.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:24:41", "type": "best_practices", "page_metadata": {"og:title": "Better Auth - ElysiaJS", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "We may use @better-auth/cli to generate auth schema and migrate our database as well."], "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "ogTitle": "Better Auth - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "We may use @better-auth/cli to generate auth schema and migrate our database as well.", "title": "Better Auth - ElysiaJS | ElysiaJS", "language": "en-US", "og:image:width": "1920", "scrapeId": "2b9cec2d-638b-4144-b9c9-ecf2aca12fbb", "sourceURL": "https://elysiajs.com/recipe/better-auth", "url": "https://elysiajs.com/recipe/better-auth", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Table of Content is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Table of Content in elysiajs.\n\n# Table of Content\n\nAn outline of the recommended chapters for learning Elysia, emphasizing the importance of completing the essential chapter first.Here's a quick rundown of what this is about:\n\n## Outline\n\nThere's no correct way to learn Elysia, but we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. We have organized a recommended chapter in order as it may reference to previous chapter.\n\n## Prerequisite Knowledge\n\nAlthough Elysia's documentation is designed to be beginner-friendly, we need to establish a baseline so that the docs can stay focused on Elysia's functionality. We will provide links to relevant documentation whenever we introduce a new concept. To get the most out of our documentation, it's recommended that you have a basic understanding of Node.js and basic HTTP.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/table-of-content", "title": "Table of Content", "description": "An outline of the recommended chapters for learning Elysia, emphasizing the importance of completing the essential chapter first.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:24:45", "type": "overview", "page_metadata": {"ogTitle": "Table of Content - ElysiaJS", "description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:card": "summary_large_image", "ogDescription": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:width": "1920", "language": "en-US", "title": "Table of Content - ElysiaJS | ElysiaJS", "og:title": "Table of Content - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "d592b863-3d26-4108-987b-38a09b159094", "sourceURL": "https://elysiajs.com/table-of-content", "url": "https://elysiajs.com/table-of-content", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I outline in elysiajs?\n\nAssistant: To outline in elysiajs, here's what you do:\nThere's no correct way to learn Elysia, but we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. We have organized a recommended chapter in order as it may reference to previous chapter..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/table-of-content", "title": "Table of Content", "description": "An outline of the recommended chapters for learning Elysia, emphasizing the importance of completing the essential chapter first.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:24:45", "type": "section_detail", "page_metadata": {"ogTitle": "Table of Content - ElysiaJS", "description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:card": "summary_large_image", "ogDescription": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:width": "1920", "language": "en-US", "title": "Table of Content - ElysiaJS | ElysiaJS", "og:title": "Table of Content - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "d592b863-3d26-4108-987b-38a09b159094", "sourceURL": "https://elysiajs.com/table-of-content", "url": "https://elysiajs.com/table-of-content", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I prerequisite knowledge in elysiajs?\n\nAssistant: To prerequisite knowledge in elysiajs, here's what you do:\nAlthough Elysia's documentation is designed to be beginner-friendly, we need to establish a baseline so that the docs can stay focused on Elysia's functionality. We will provide links to relevant documentation whenever we introduce a new concept. To get the most out of our documentation, it's recommended that you have a basic understanding of Node.js and basic HTTP..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/table-of-content", "title": "Table of Content", "description": "An outline of the recommended chapters for learning Elysia, emphasizing the importance of completing the essential chapter first.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:24:45", "type": "section_detail", "page_metadata": {"ogTitle": "Table of Content - ElysiaJS", "description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:card": "summary_large_image", "ogDescription": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:width": "1920", "language": "en-US", "title": "Table of Content - ElysiaJS | ElysiaJS", "og:title": "Table of Content - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "d592b863-3d26-4108-987b-38a09b159094", "sourceURL": "https://elysiajs.com/table-of-content", "url": "https://elysiajs.com/table-of-content", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Table of Content in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nComplete the essential chapter first to understand Elysia's features and foundation.\n\nHave a basic understanding of Node.js and basic HTTP to get the most out of the documentation.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/table-of-content", "title": "Table of Content", "description": "An outline of the recommended chapters for learning Elysia, emphasizing the importance of completing the essential chapter first.", "has_code_examples": false, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:24:45", "type": "best_practices", "page_metadata": {"ogTitle": "Table of Content - ElysiaJS", "description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:card": "summary_large_image", "ogDescription": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:width": "1920", "language": "en-US", "title": "Table of Content - ElysiaJS | ElysiaJS", "og:title": "Table of Content - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:description": "There's no correct or organized way to learn Elysia, however, we recommended completing the essential chapter first as the chapter briefly covers most of Elysia's features and foundation before jumping to other topics that interest you. Once you've completed the essential chapter, you may jump to any topic that interests you. However, we recommended following the order of the chapter as it may reference to previous chapter.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "d592b863-3d26-4108-987b-38a09b159094", "sourceURL": "https://elysiajs.com/table-of-content", "url": "https://elysiajs.com/table-of-content", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.7 - Stellar Stellar is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.7 - Stellar Stellar in elysiajs.\n\n# Elysia 0.7 - Stellar Stellar\n\nElysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.Here's a quick rundown of what this is about:\n\n## Rewritten Type\n\nCore feature of Elysia about developer experience.\n\nType is one of the most important aspect of Elysia, as it allows us to do many amazing thing like unified type, syncing your business logic, typing, documentation and frontend.\n\nWe want you to have an outstanding experience with Elysia, focusing on your business logic part, and let's Elysia handle the rest whether it's type-inference with unified type, and Eden connector for syncing type with backend.\n\nTo achieve that, we put our effort on creating a unified type system for to synchronize all of the type, but as the feature grow, we found that our type inference might not be fast enough from our lack of TypeScript experience we have year ago.\n\nWith our experience we made along the way of handling complex type system, various optimization and many project like Mobius. We challenge our self to speed up our type system once again, making this a second type rewrite for Elysia.\n\nWe delete and rewrite every Elysia type from ground up to make Elysia type to be magnitude faster.\n\nHere's a comparison between 0.6 and 0.7 on a simple Elysia.get code:\n\nWith our new found experience, and newer TypeScript feature like const generic, we are able to simplify a lot of our code, reducing our codebase over a thousand line in type.\n\nAllowing us to refine our type system to be even faster, and even more stable.\n\nUsing Perfetto and TypeScript CLI to generate trace on a large-scale and complex app, we measure up to 13x inference speed.\n\nAnd if you might wonder if we might break type inference with 0.6 or not, we do have a unit test in type-level to make sure most of the case, there's no breaking change for type.\n\nWe hope this improvement will help you with even faster type inference like faster auto-completion, and load time from your IDE to be near instant to help your development to be even more faster and more fluent than ever before.\n\n## Trace\n\nPerformance is another one of important aspect for Elysia.\n\nWe don't want to be fast for benchmarking purpose, we want you to have a real fast server in real-world scenario, not just benchmarking.\n\nThere are many factor that can slow down your app, and it's hard to identifying one, that's why we introduce \"Trace\".\n\nTrace allow us to take tap into a life-cycle event and identifying performance bottleneck for our app.\n\nThis example code allow us tap into all beforeHandle event, and extract the execution time one-by-one before setting the Server-Timing API to inspect the performance bottleneck.\n\nAnd this is not limited to only beforeHandle, and event can be trace even the handler itself. The naming convention is name after life-cycle event you are already familiar with.\n\nThis API allows us to effortlessly auditing performance bottleneck of your Elysia server and integrate with the report tools of your choice.\n\nBy default, Trace use AoT compilation and Dynamic Code injection to conditionally report and even that you actually use automatically, which means there's no performance impact at all.\n\n## Reactive Cookie\n\nWe merged our cookie plugin into Elysia core.\n\nSame as Trace, Reactive Cookie use AoT compilation and Dynamic Code injection to conditionally inject the cookie usage code, leading to no performance impact if you don't use one.\n\nReactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API.\n\nThere's no getCookie, setCookie, everything is just a cookie object.\n\nWhen you want to use cookie, you just extract the name get/set its value like:\n\nThen cookie will be automatically sync the value with headers, and the cookie jar, making the cookie object a single source of truth for handling cookie.\n\nThe Cookie Jar is reactive, which means that if you don't set the new value for the cookie, the Set-Cookie header will not be send to keep the same cookie value and reduce performance bottleneck.\n\n## Cookie Schema\n\nWith the merge of cookie into the core of Elysia, we introduce a new Cookie Schema for validating cookie value.\n\nThis is useful when you have to strictly validate cookie session or want to have a strict type or type inference for handling cookie.\n\nElysia encode and decode cookie value for you automatically, so if you want to store JSON in a cookie like decoded JWT value, or just want to make sure if the value is a numeric string, you can do that effortlessly.\n\n## Cookie Signature\n\nAnd lastly, with an introduction of Cookie Schema, and t.Cookie type. We are able to create a unified type for handling sign/verify cookie signature automatically.\n\nCookie signature is a cryptographic hash appended to a cookie's value, generated using a secret key and the content of the cookie to enhance security by adding a signature to the cookie.\n\nThis make sure that the cookie value is not modified by malicious actor, helps in verifying the authenticity and integrity of the cookie data.\n\n## TypeBox 0.31\n\nWith the release of 0.7, we are updating to TypeBox 0.31 to brings even more feature to Elysia.\n\nThis brings new exciting feature like support for TypeBox's Decode in Elysia natively.\n\n## New Type\n\nWith an introduction Transform, we have add a new type like t.ObjectString to automatically decode a value of Object in request.\n\n## Rewritten Web Socket\n\nAside from entirely rewritten type, we also entirely rewritten Web Socket as well.\n\n## Definitions Remap\n\nProposed on #83 by Bogeychan\n\nTo summarize, Elysia allows us to decorate and request and store with any value we desire, however some plugin might a duplicate name with the value we have, and sometime plugin has a name collision but we can't rename the property at all.\n\n## Affix\n\nTo provide a smoother experience, some plugins might have a lot of property value which can be overwhelming to remap one-by-one.\n\n## True Encapsulation Scope\n\nWith the introduction of Elysia 0.7, Elysia can now truly encapsulate an instance by treating a scoped instance as another instance.\n\n## Text based status\n\nThere are over 64 standard HTTP status codes to remember, and I admit that sometime we also forget the status we want to use.\n\n## Notable Improvement\n\nImprovement:\n\n- onRequest can now be async\n- add Context to onError\n- lifecycle hook now accept array function\n- static Code Analysis now support rest parameter\n- breakdown dynamic router into single pipeline instead of inlining to static router to reduce memory usage\n- set t.File and t.Files to File instead of Blob\n- skip class instance merging\n- handle UnknownContextPassToFunction\n- WebSocket - added unit tests and fixed example & api by @bogeychan\n- add github action to run bun test by @arthurfiorette\n\nBreaking Change:\n\n- remove ws plugin, migrate to core\n- rename addError to error\n\nChange:\n\n- using single findDynamicRoute instead of inlining to static map\n- remove mergician\n- remove array routes due to problem with TypeScript\n- rewrite Type.ElysiaMeta to use TypeBox.Transform\n\nBug fix:\n\n- strictly validate response by default\n- t.Numeric not working on headers / query / params\n- t.Optional(t.Object({ [name]: t.Numeric })) causing error\n- add null check before converting Numeric\n- inherits store to instance plugin\n- handle class overlapping\n- InternalServerError message fixed to \"INTERNAL_SERVER_ERROR\" instead of \"NOT_FOUND\" by @bogeychan\n- mapEarlyResponse with aot on after handle.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "overview", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I rewritten type in elysiajs?\n\nAssistant: To rewritten type in elysiajs, here's what you do:\nCore feature of Elysia about developer experience.\n\nType is one of the most important aspect of Elysia, as it allows us to do many amazing thing like unified type, syncing your business logic, typing, documentation and frontend.\n\nWe want you to have an outstanding experience with Elysia, focusing on your business logic part, and let's Elysia handle the rest whether it's type-inference with unified type, and Eden connector for syncing type with backend.\n\nTo achieve that, we put our effort on creating a unified type system for to synchronize all of the type, but as the feature grow, we found that our type inference might not be fast enough from our lack of TypeScript experience we have year ago.\n\nWith our experience we made along the way of handling complex type system, various optimization and many project like Mobius. We challenge our self to speed up our type system once again, making this a second type rewrite for Elysia.\n\nWe delete and rewrite every Elysia type from ground up to make Elysia type to be magnitude faster.\n\nHere's a comparison between 0.6 and 0.7 on a simple Elysia.get code:\n\nWith our new found experience, and newer TypeScript feature like const generic, we are able to simplify a lot of our code, reducing our codebase over a thousand line in type.\n\nAllowing us to refine our type system to be even faster, and even more stable.\n\nUsing Perfetto and TypeScript CLI to generate trace on a large-scale and complex app, we measure up to 13x inference speed.\n\nAnd if you might wonder if we might break type inference with 0.6 or not, we do have a unit test in type-level to make sure most of the case, there's no breaking change for type.\n\nWe hope this improvement will help you with even faster type inference like faster auto-completion, and load time from your IDE to be near instant to help your development to be even more faster and more fluent than ever before..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trace in elysiajs?\n\nAssistant: To trace in elysiajs, here's what you do:\nPerformance is another one of important aspect for Elysia.\n\nWe don't want to be fast for benchmarking purpose, we want you to have a real fast server in real-world scenario, not just benchmarking.\n\nThere are many factor that can slow down your app, and it's hard to identifying one, that's why we introduce \"Trace\".\n\nTrace allow us to take tap into a life-cycle event and identifying performance bottleneck for our app.\n\nThis example code allow us tap into all beforeHandle event, and extract the execution time one-by-one before setting the Server-Timing API to inspect the performance bottleneck.\n\nAnd this is not limited to only beforeHandle, and event can be trace even the handler itself. The naming convention is name after life-cycle event you are already familiar with.\n\nThis API allows us to effortlessly auditing performance bottleneck of your Elysia server and integrate with the report tools of your choice.\n\nBy default, Trace use AoT compilation and Dynamic Code injection to conditionally report and even that you actually use automatically, which means there's no performance impact at all..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I reactive cookie in elysiajs?\n\nAssistant: To reactive cookie in elysiajs, here's what you do:\nWe merged our cookie plugin into Elysia core.\n\nSame as Trace, Reactive Cookie use AoT compilation and Dynamic Code injection to conditionally inject the cookie usage code, leading to no performance impact if you don't use one.\n\nReactive Cookie take a more modern approach like signal to handle cookie with an ergonomic API.\n\nThere's no getCookie, setCookie, everything is just a cookie object.\n\nWhen you want to use cookie, you just extract the name get/set its value like:\n\nThen cookie will be automatically sync the value with headers, and the cookie jar, making the cookie object a single source of truth for handling cookie.\n\nThe Cookie Jar is reactive, which means that if you don't set the new value for the cookie, the Set-Cookie header will not be send to keep the same cookie value and reduce performance bottleneck..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie schema in elysiajs?\n\nAssistant: To cookie schema in elysiajs, here's what you do:\nWith the merge of cookie into the core of Elysia, we introduce a new Cookie Schema for validating cookie value.\n\nThis is useful when you have to strictly validate cookie session or want to have a strict type or type inference for handling cookie.\n\nElysia encode and decode cookie value for you automatically, so if you want to store JSON in a cookie like decoded JWT value, or just want to make sure if the value is a numeric string, you can do that effortlessly..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I cookie signature in elysiajs?\n\nAssistant: To cookie signature in elysiajs, here's what you do:\nAnd lastly, with an introduction of Cookie Schema, and t.Cookie type. We are able to create a unified type for handling sign/verify cookie signature automatically.\n\nCookie signature is a cryptographic hash appended to a cookie's value, generated using a secret key and the content of the cookie to enhance security by adding a signature to the cookie.\n\nThis make sure that the cookie value is not modified by malicious actor, helps in verifying the authenticity and integrity of the cookie data..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typebox 0.31 in elysiajs?\n\nAssistant: To typebox 0.31 in elysiajs, here's what you do:\nWith the release of 0.7, we are updating to TypeBox 0.31 to brings even more feature to Elysia.\n\nThis brings new exciting feature like support for TypeBox's Decode in Elysia natively..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I new type in elysiajs?\n\nAssistant: To new type in elysiajs, here's what you do:\nWith an introduction Transform, we have add a new type like t.ObjectString to automatically decode a value of Object in request..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I rewritten web socket in elysiajs?\n\nAssistant: To rewritten web socket in elysiajs, here's what you do:\nAside from entirely rewritten type, we also entirely rewritten Web Socket as well..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I definitions remap in elysiajs?\n\nAssistant: To definitions remap in elysiajs, here's what you do:\nProposed on #83 by Bogeychan\n\nTo summarize, Elysia allows us to decorate and request and store with any value we desire, however some plugin might a duplicate name with the value we have, and sometime plugin has a name collision but we can't rename the property at all..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I affix in elysiajs?\n\nAssistant: To affix in elysiajs, here's what you do:\nTo provide a smoother experience, some plugins might have a lot of property value which can be overwhelming to remap one-by-one..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I true encapsulation scope in elysiajs?\n\nAssistant: To true encapsulation scope in elysiajs, here's what you do:\nWith the introduction of Elysia 0.7, Elysia can now truly encapsulate an instance by treating a scoped instance as another instance..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I text based status in elysiajs?\n\nAssistant: To text based status in elysiajs, here's what you do:\nThere are over 64 standard HTTP status codes to remember, and I admit that sometime we also forget the status we want to use..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I notable improvement in elysiajs?\n\nAssistant: To notable improvement in elysiajs, here's what you do:\nImprovement:\n\n- onRequest can now be async\n- add Context to onError\n- lifecycle hook now accept array function\n- static Code Analysis now support rest parameter\n- breakdown dynamic router into single pipeline instead of inlining to static router to reduce memory usage\n- set t.File and t.Files to File instead of Blob\n- skip class instance merging\n- handle UnknownContextPassToFunction\n- WebSocket - added unit tests and fixed example & api by @bogeychan\n- add github action to run bun test by @arthurfiorette\n\nBreaking Change:\n\n- remove ws plugin, migrate to core\n- rename addError to error\n\nChange:\n\n- using single findDynamicRoute instead of inlining to static map\n- remove mergician\n- remove array routes due to problem with TypeScript\n- rewrite Type.ElysiaMeta to use TypeBox.Transform\n\nBug fix:\n\n- strictly validate response by default\n- t.Numeric not working on headers / query / params\n- t.Optional(t.Object({ [name]: t.Numeric })) causing error\n- add null check before converting Numeric\n- inherits store to instance plugin\n- handle class overlapping\n- InternalServerError message fixed to \"INTERNAL_SERVER_ERROR\" instead of \"NOT_FOUND\" by @bogeychan\n- mapEarlyResponse with aot on after handle..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "section_detail", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 0.7 - Stellar Stellar in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Reactive Cookie Example**:\n\n```yaml\napp.get('/', ({ cookie: { name } }) => {\n    // Get\n    name.value\n\n    // Set\n    name.value = \"New Value\"\n})\n```\n\nThis snippet shows you how to reactive cookie example, which is an important aspect of elysia 0.7 - stellar stellar.\n\n**Cookie Schema Example**:\n\n```yaml\napp.get('/', ({ cookie: { name } }) => {\n    // Set\n    name.value = {\n        id: 617,\n        name: 'Summoning 101'\n    }\n}, {\n    cookie: t.Cookie({\n        value: t.Object({\n            id: t.Numeric(),\n            name: t.String()\n        })\n    })\n})\n```\n\nThis snippet shows you how to cookie schema example, which is an important aspect of elysia 0.7 - stellar stellar.\n\n**Cookie Signature Example**:\n\n```yaml\nnew Elysia({\n    cookie: {\n        secret: 'Fischl von Luftschloss Narfidort'\n    }\n})\n    .get('/', ({ cookie: { profile } }) => {\n        profile.value = {\n            id: 617,\n            name: 'Summoning 101'\n        }\n    }, {\n        cookie: t.Cookie({\n            profile: t.Object({\n                id: t.Numeric(),\n                name: t.String()\n            })\n        }, {\n            sign: ['profile']\n        })\n    })\n```\n\nThis snippet shows you how to cookie signature example, which is an important aspect of elysia 0.7 - stellar stellar.\n\n**TypeBox Example**:\n\n```yaml\nNumeric: (property?: NumericOptions<number>) =>\n    Type.Transform(Type.Union([Type.String(), Type.Number(property)]))\n        .Decode((value) => {\n            const number = +value\n            if (isNaN(number)) return value\n\n            return number\n        })\n        .Encode((value) => value) as any as TNumber,\n```\n\nThis snippet shows you how to typebox example, which is an important aspect of elysia 0.7 - stellar stellar.\n\n**New Type Example**:\n\n```yaml\nnew Elysia({\n    cookie: {\n        secret: 'Fischl von Luftschloss Narfidort'\n    }\n})\n    .post('/', ({ body: { data: { name } } }) => name, {\n        body: t.Object({\n            image: t.File(),\n            data: t.ObjectString({\n                name: t.String()\n            })\n        })\n    })\n```\n\nThis snippet shows you how to new type example, which is an important aspect of elysia 0.7 - stellar stellar.\n\n**Remapping Example**:\n\n```yaml\nnew Elysia()\n    .state({\n        a: \"a\",\n        b: \"b\"\n    })\n    // Exclude b state\n    .state(({ b, ...rest }) => rest)\n```\n\nThis snippet shows you how to remapping example, which is an important aspect of elysia 0.7 - stellar stellar.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "code_examples", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.7 - Stellar Stellar in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the new Trace feature to identify performance bottlenecks in your application.\n\nUtilize the Reactive Cookie API for a more ergonomic cookie handling experience.\n\nTake advantage of the new TypeBox features for better type management.\n\nImplement Cookie Schema for strict validation of cookie values.\n\nUse the remapping and affix functions to prevent name collisions in your application.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-07", "title": "Elysia 0.7 - Stellar Stellar", "description": "Elysia 0.7 introduces exciting updates to enhance developer experience, performance, and cookie handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 13, "timestamp": "2025-03-01 03:25:18", "type": "best_practices", "page_metadata": {"title": "Elysia 0.7 - Stellar Stellar | ElysiaJS", "description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:title": "Introducing Elysia 0.7 - Stellar Stellar", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "ogImage": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "twitter:card": "summary_large_image", "og:image:height": "1080", "ogTitle": "Introducing Elysia 0.7 - Stellar Stellar", "generator": "VitePress v1.6.3", "og:description": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "language": "en-US", "ogDescription": "Introducing up to 13x faster type inference. Declarative telemetry with trace. Reactive cookie model, and cookie validation. TypeBox 0.31 and custom decoder support. Rewritten Web Socket. Definitions remapping and custom affix. Leading more solid foundation for Elysia for a brighter future.", "og:image": "https://elysiajs.com/blog/elysia-07/stellar-stellar.webp", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "scrapeId": "7958134e-cb65-4374-b4ac-d7b4c7fa05a0", "sourceURL": "https://elysiajs.com/blog/elysia-07", "url": "https://elysiajs.com/blog/elysia-07", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) in elysiajs.\n\n# Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)\n\nThis version doesn't introduce an exciting new feature, later but a foundation for more solid ground, and internal improvement for the future of Elysia.Here's a quick rundown of what this is about:\n\n## Ahead of Time Complie\n\nBy default, Elysia has to deal with conditional checking in various situations, for example, checking if the life-cycle of the route existed before performing, or unwrapping validation schema if provided.\n\nThis introduces a minimal overhead to Elysia and overall because even if the route doesn't have a life-cycle event attached to it, it needs to be runtime checked.\n\nSince every function is checked on compile time, it's not possible to have a conditional async, for example, a simple route that returns a file should be synced, but since it's compile-time checking, some routes might be async thus making the same simple route async too.\n\nAn async function introduces an additional tick to the function, making it a bit slower. But since Elysia is a foundation for web servers, we want to optimize every part to make sure that you don't run into performance problems.\n\nWe fix this small overhead by introducing Ahead Time Compilation.\n\nAs the name suggests, instead of checking dynamic life-cycle and validation on the runtime, Elysia checks life-cycle, validation, and the possibility of an async function and generates a compact function, removing an unnecessary part like an un-used life-cycle and validation.\n\nMaking conditional async function possible, since instead of using a centralized function for handling, we compose a new function especially created for each route instead. Elysia then checks all life-cycle functions and handlers to see if there's an async, and if not, the function will be synced to reduce additional overhead.\n\n## TypeBox 0.26\n\nTypeBox is a library that powered Elysia's validation and type provider to create a type-level single source of truth, re-exported as **Elysia.t**.\n\nIn this update, we update TypeBox from 0.25.4 to 0.26.\n\nThis brings a lot of improvement and new features, for example, a `Not` type and `Convert` for `coercion` value which we might support in some next version of Elysia.\n\nBut the one benefit for Elysia would be, `Error.First()` which allows us to get the first error of type instead of using Iterator, this reduces overhead in creating a new Error to send back to the client.\n\nThere are some changes to **TypeBox** and **Elysia.t** that normally wouldn't have much effect on your end, but you can see what's a new feature in [TypeBox release here.](https://github.com/sinclairzx81/typebox/blob/master/changelog/0.26.0.md)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-04", "title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "description": "This version doesn't introduce an exciting new feature, later but a foundation for more solid ground, and internal improvement for the future of Elysia.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:25:29", "type": "overview", "page_metadata": {"title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) | ElysiaJS", "language": "en-US", "ogDescription": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "og:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "og:title": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "og:description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "generator": "VitePress v1.6.3", "ogTitle": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "ogImage": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn.", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "9ae7ce56-0186-4daa-a10c-a4bf11ab31ef", "sourceURL": "https://elysiajs.com/blog/elysia-04", "url": "https://elysiajs.com/blog/elysia-04", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I ahead of time complie in elysiajs?\n\nAssistant: To ahead of time complie in elysiajs, here's what you do:\nBy default, Elysia has to deal with conditional checking in various situations, for example, checking if the life-cycle of the route existed before performing, or unwrapping validation schema if provided.\n\nThis introduces a minimal overhead to Elysia and overall because even if the route doesn't have a life-cycle event attached to it, it needs to be runtime checked.\n\nSince every function is checked on compile time, it's not possible to have a conditional async, for example, a simple route that returns a file should be synced, but since it's compile-time checking, some routes might be async thus making the same simple route async too.\n\nAn async function introduces an additional tick to the function, making it a bit slower. But since Elysia is a foundation for web servers, we want to optimize every part to make sure that you don't run into performance problems.\n\nWe fix this small overhead by introducing Ahead Time Compilation.\n\nAs the name suggests, instead of checking dynamic life-cycle and validation on the runtime, Elysia checks life-cycle, validation, and the possibility of an async function and generates a compact function, removing an unnecessary part like an un-used life-cycle and validation.\n\nMaking conditional async function possible, since instead of using a centralized function for handling, we compose a new function especially created for each route instead. Elysia then checks all life-cycle functions and handlers to see if there's an async, and if not, the function will be synced to reduce additional overhead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-04", "title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "description": "This version doesn't introduce an exciting new feature, later but a foundation for more solid ground, and internal improvement for the future of Elysia.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:25:29", "type": "section_detail", "page_metadata": {"title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) | ElysiaJS", "language": "en-US", "ogDescription": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "og:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "og:title": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "og:description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "generator": "VitePress v1.6.3", "ogTitle": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "ogImage": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn.", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "9ae7ce56-0186-4daa-a10c-a4bf11ab31ef", "sourceURL": "https://elysiajs.com/blog/elysia-04", "url": "https://elysiajs.com/blog/elysia-04", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typebox 0.26 in elysiajs?\n\nAssistant: To typebox 0.26 in elysiajs, here's what you do:\nTypeBox is a library that powered Elysia's validation and type provider to create a type-level single source of truth, re-exported as **Elysia.t**.\n\nIn this update, we update TypeBox from 0.25.4 to 0.26.\n\nThis brings a lot of improvement and new features, for example, a `Not` type and `Convert` for `coercion` value which we might support in some next version of Elysia.\n\nBut the one benefit for Elysia would be, `Error.First()` which allows us to get the first error of type instead of using Iterator, this reduces overhead in creating a new Error to send back to the client.\n\nThere are some changes to **TypeBox** and **Elysia.t** that normally wouldn't have much effect on your end, but you can see what's a new feature in [TypeBox release here.](https://github.com/sinclairzx81/typebox/blob/master/changelog/0.26.0.md).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-04", "title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "description": "This version doesn't introduce an exciting new feature, later but a foundation for more solid ground, and internal improvement for the future of Elysia.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:25:29", "type": "section_detail", "page_metadata": {"title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) | ElysiaJS", "language": "en-US", "ogDescription": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "og:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "og:title": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "og:description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "generator": "VitePress v1.6.3", "ogTitle": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "ogImage": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn.", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "9ae7ce56-0186-4daa-a10c-a4bf11ab31ef", "sourceURL": "https://elysiajs.com/blog/elysia-04", "url": "https://elysiajs.com/blog/elysia-04", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Validate response per status**:\n\n```yaml\napp.post('/strict-status', process, {\n    schema: {\n        response: {\n            200: t.String(),\n            400: t.Number()\n        }\n    }\n})\n```\n\nThis snippet shows you how to validate response per status, which is an important aspect of elysia 0.4 - 月夜の音楽会 (moonlit night concert).\n\n**Conditional Route Example**:\n\n```yaml\nconst isProduction = process.env.NODE_ENV === 'production'\n\nconst app = new Elysia().if(!isProduction, (app) =>\n    app.use(swagger())\n)\n```\n\nThis snippet shows you how to conditional route example, which is an important aspect of elysia 0.4 - 月夜の音楽会 (moonlit night concert).\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-04", "title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "description": "This version doesn't introduce an exciting new feature, later but a foundation for more solid ground, and internal improvement for the future of Elysia.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:25:29", "type": "code_examples", "page_metadata": {"title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) | ElysiaJS", "language": "en-US", "ogDescription": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "og:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "og:title": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "og:description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "generator": "VitePress v1.6.3", "ogTitle": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "ogImage": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn.", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "9ae7ce56-0186-4daa-a10c-a4bf11ab31ef", "sourceURL": "https://elysiajs.com/blog/elysia-04", "url": "https://elysiajs.com/blog/elysia-04", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nTo ensure that you have what you actually need, explicitly install features like Elysia Fn to keep the server lightweight.\n\nUse Ahead Time Compilation to optimize performance by reducing runtime checks.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-04", "title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "description": "This version doesn't introduce an exciting new feature, later but a foundation for more solid ground, and internal improvement for the future of Elysia.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:25:29", "type": "best_practices", "page_metadata": {"title": "Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert) | ElysiaJS", "language": "en-US", "ogDescription": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "og:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "og:title": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "og:description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn", "generator": "VitePress v1.6.3", "ogTitle": "Introducing Elysia 0.4 - 月夜の音楽会 (Moonlit Night Concert)", "ogImage": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "description": "Introducing Ahead of Time Compilation, TypeBox 0.26, Response validation per status, and Separation of Elysia Fn.", "twitter:card": "summary_large_image", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "twitter:image": "https://elysiajs.com/blog/elysia-04/moonlit-night-concert.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "scrapeId": "9ae7ce56-0186-4daa-a10c-a4bf11ab31ef", "sourceURL": "https://elysiajs.com/blog/elysia-04", "url": "https://elysiajs.com/blog/elysia-04", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia 0.6 - This Game is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia 0.6 - This Game in elysiajs.\n\n# Elysia 0.6 - This Game\n\nNamed after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.Here's a quick rundown of what this is about:\n\n## New Plugin Model\n\nThis Game introduces a new syntax for plugin registration, and comes up with a new plugin model internally.\n\nPreviously you could register a plugin by defining a callback function for the Elysia instance like this:\n\n```ts\nconst plugin = (app: Elysia) => app.get('/', () => 'hello')\n```\n\nWith the new plugin, you can now turn an Elysia instance into a plugin:\n\n```ts\nconst plugin = new Elysia()\n    .get('/', () => 'hello')\n```\n\nThis allows any Elysia instance and even existing ones to be used across applications, removing any possible addition callback and tab spacing.\n\nThis improved Developer Experience significantly when working with nested groups.\n\n```ts\n// < 0.6\nconst group = (app: Elysia) => app\n    .group('/v1', (app) => app\n        .get('/hello', () => 'Hello World')\n    )\n\n// >= 0.6\nconst group = new Elysia({ prefix: '/v1' })\n    .get('/hello', () => 'Hello World')\n```\n\nWe encourage you to use the new model of Elysia plugin instance, as we can take advantage of Plugin Checksum and new possible features in the future.\n\nHowever, we are **NOT deprecating** the callback function method as there are some cases where the function model is useful like:\n\n- Inline function\n- Plugins that require information from the main instance (for example accessing OpenAPI schema)\n\nWith this new plugin model, we hope that you can make your codebase even easier to maintain.\n\n## Plugin Checksum\n\nBy default, Elysia plugins use function callbacks to register plugins.\n\nThis means that if you register a plugin for type declaration, it will duplicate itself just to provide type support, leading to duplication of plugins used in production.\n\nThis is why Plugin Checksum is introduced, to de-duplicate plugins registered for type declaration.\n\nTo opt-in to Plugin Checksum, you need to use a new plugin model and provide a `name` property to tell Elysia to prevent the plugin from being deduplicated:\n\n```ts\nconst plugin = new Elysia({\n    name: 'plugin'\n})\n```\n\nThis allows Elysia to identify the plugin and deduplicate based on name.\n\nAny duplicated name will be registered only once but type-safety will be provided after registration even if the plugin is deduplicated.\n\nIn case your plugin needs configuration, you can provide the configuration into a **seed** property to generate a checksum for deduplicating the plugin:\n\n```ts\nconst plugin = (config) => new Elysia({\n    name: 'plugin',\n    seed: config\n})\n```\n\nName and seed will be used to generate a checksum to de-duplicate registration, which leads to even better performance improvement.\n\n## Mount and WinterCG Compliance\n\nWinterCG is a standard for web-interoperable runtimes supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various more.\n\nWinterCG is a standard that allows web servers to run interoperable across runtimes, which use Web Standard definitions like Fetch, Request, and Response.\n\nBy this, Elysia is partially following WinterCG compliance as we are optimized for Bun but also openly support other runtimes if possible.\n\nThis allows any framework and code that is WinterCG compliant to run together in theory, an implementation is proved by [Hono](https://honojs.dev/) which introduces the **.mount** method to [run multiple frameworks together in one codebase](https://twitter.com/honojs/status/1684839623355490304), including Remix, Elysia, Itty Router, and Hono itself in a simple function.\n\nBy this, we implemented the same logic for Elysia by introducing the `.mount` method to run any framework or code that is WinterCG compliant.\n\nTo use `.mount`, [simply pass a `fetch` function](https://twitter.com/saltyAom/status/1684786233594290176):\n\n```ts\nconst app = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n```\n\nA **fetch** function is a function that accepts Web Standard Request and returns Web Standard Response as the definition of:\n\n```ts\n// Web Standard Request-like object\n// Web Standard Response\ntype fetch = (request: RequestLike) => Response\n```\n\nBy default, this declaration is used by:\n\n- Bun\n- Deno\n- Vercel Edge Runtime\n- Cloudflare Worker\n- Netlify Edge Function\n- Remix Function Handler\n\nWhich means you can run all of the above code to interoperate with Elysia all in a single server, or reuse existing functions all in one deployment, no need to set up Reverse Proxy for handling multiple servers.\n\nIf the framework also supports a **.mount** function, you can deeply nest a framework that supports it infinitely.\n\n```ts\nconst elysia = new Elysia()\n    .get('/Hello from Elysia inside Hono inside Elysia')\n\nconst hono = new Hono()\n    .get('/', (c) => c.text('Hello from Hono!'))\n    .mount('/elysia', elysia.fetch)\n\nconst main = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n    .listen(3000)\n```\n\nYou can even reuse multiple existing Elysia projects in your server.\n\n```ts\nimport A from 'project-a/elysia'\nimport B from 'project-b/elysia'\nimport C from 'project-c/elysia'\n\nnew Elysia()\n    .mount(A)\n    .mount(B)\n    .mount(C)\n```\n\nIf an instance passed to mount is an Elysia instance, it will resolve to `use` automatically, providing type-safety and support for Eden by default.\n\n## Improved Startup Time\n\nStartup time is an important metric in a serverless environment which Elysia excels at incredibly, but we have taken it even further.\n\nBy default, Elysia generates OpenAPI schema for every route automatically and stores it internally when not used.\n\nIn this version, Elysia defers the compilation and moves to `@elysiajs/swagger` instead, allowing Elysia's startup time to be even faster.\n\nAnd with various micro-optimizations, and made possible by the new Plugin model, startup time is now up to 35% faster.\n\n## Dynamic Mode\n\nElysia introduces Static Code Analysis and Ahead of Time compilation to push the boundary of performance.\n\nStatic Code Analysis allows Elysia to read your code then produce the most optimized version code, allowing Elysia to push performance to its limit.\n\nEven if Elysia is WinterCG compliant, environments like Cloudflare worker don't support function composition.\n\nThis means that Ahead of Time Compilation isn't possible, leading us to create a dynamic mode which uses JIT compilation instead of AoT, allowing Elysia to run in Cloudflare Worker as well.\n\nTo enable dynamic mode, set `aot` to false:\n\n```ts\nnew Elysia({\n    aot: false\n})\n```\n\nDynamic Mode is enabled by default in Cloudflare worker.\n\nIt's worth noting that enabling Dynamic Mode will disable some features like dynamic injected code like `t.Numeric` which parses strings to numbers automatically.\n\nAhead of Time compilation can read, detect, and optimize your code in exchange for startup time in exchange for extra performance gain, while dynamic mode uses JIT compilation, allowing startup time to be even faster up to 6x.\n\nBut it should be noted that startup time in Elysia is fast enough by default.\n\nElysia is able to register 10,000 routes in just 78ms which means an average of 0.0079 ms/route.\n\nThat being said, we are leaving a choice for you to decide yourself.\n\n## Declarative Custom Error\n\nThis update adds support for adding type support for handling custom errors.\n\n```ts\nclass CustomError extends Error {\n    constructor(public message: string) {\n        super(message)\n    }\n}\n\nnew Elysia()\n    .addError({\n        MyError: CustomError\n    })\n    .onError(({ code, error }) => {\n        switch(code) {\n            // With auto-completion\n            case 'MyError':\n                // With type narrowing\n                // Error is typed as CustomError\n                return error\n        }\n    })\n```\n\nThis allows us to handle custom types with type narrowing for handling custom errors and auto-completion for error codes to narrow down the correct types, fully type-safe declaratively.\n\n## TypeBox 0.30\n\nTypeBox is a core library that powers Elysia's strict type system known as **Elysia.t**.\n\nIn this update, we update TypeBox from 0.28 to 0.30 to make an even more fine-grained Type System nearly strictly typed language.\n\nThese updates introduce new features and many interesting changes, for example **Iterator** type, reducing package size, TypeScript code generation.\n\nAnd with support for Utility Types like:\n\n- `t.Awaited`\n- `t.Uppercase`\n- `t.Capitalized`\n\n## Strict Path\n\nWe got a lot of requests for handling loose paths.\n\nBy default, Elysia handles paths strictly, which means that if you have to support paths with or without optional `/`, it will not be resolved and you have to duplicate the pathname twice.\n\n```ts\nnew Elysia()\n    .group('/v1', (app) => app\n        // Handle /v1\n        .get('', handle)\n        // Handle /v1/\n        .get('/', handle)\n    )\n```\n\nBy this, many have been requesting that `/v1/` should also resolve `/v1` as well.\n\nWith this update, we add support for loose path matching by default, to opt-in into this feature automatically:\n\n```ts\nnew Elysia()\n    .group('/v1', (app) => app\n        // Handle /v1 and /v1/\n        .get('/', handle)\n    )\n```\n\nTo disable loosePath mapping, you can set `strictPath` to true to use the previous behavior:\n\n```ts\nnew Elysia({\n    strictPath: false\n})\n```\n\nWe hope that this will clear any questions regarding path matching and its expected behavior.\n\n## onResponse\n\nThis update introduces a new lifecycle hook called `onResponse`.\n\nThis is a proposal proposed by [elysia#67](https://github.com/elysiajs/elysia/issues/67)\n\nPreviously Elysia life-cycle works as illustrated in this diagram. ![Elysia life-cycle diagram](https://elysiajs.com/blog/elysia-06/lifecycle-05.webp)\n\nFor any metric, data-collection, or logging purpose, you can use `onAfterHandle` to run the function to collect metrics; however, this lifecycle isn't executed when the handler runs into an error, whether it's a routing error or a custom error provided.\n\nWhich is why we introduced `onResponse` to handle all cases of Response.\n\nYou can use `onRequest` and `onResponse` together to measure a metric of performance or any required logging.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "overview", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I new plugin model in elysiajs?\n\nAssistant: To new plugin model in elysiajs, here's what you do:\nThis Game introduces a new syntax for plugin registration, and comes up with a new plugin model internally.\n\nPreviously you could register a plugin by defining a callback function for the Elysia instance like this:\n\n```ts\nconst plugin = (app: Elysia) => app.get('/', () => 'hello')\n```\n\nWith the new plugin, you can now turn an Elysia instance into a plugin:\n\n```ts\nconst plugin = new Elysia()\n    .get('/', () => 'hello')\n```\n\nThis allows any Elysia instance and even existing ones to be used across applications, removing any possible addition callback and tab spacing.\n\nThis improved Developer Experience significantly when working with nested groups.\n\n```ts\n// < 0.6\nconst group = (app: Elysia) => app\n    .group('/v1', (app) => app\n        .get('/hello', () => 'Hello World')\n    )\n\n// >= 0.6\nconst group = new Elysia({ prefix: '/v1' })\n    .get('/hello', () => 'Hello World')\n```\n\nWe encourage you to use the new model of Elysia plugin instance, as we can take advantage of Plugin Checksum and new possible features in the future.\n\nHowever, we are **NOT deprecating** the callback function method as there are some cases where the function model is useful like:\n\n- Inline function\n- Plugins that require information from the main instance (for example accessing OpenAPI schema)\n\nWith this new plugin model, we hope that you can make your codebase even easier to maintain..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I plugin checksum in elysiajs?\n\nAssistant: To plugin checksum in elysiajs, here's what you do:\nBy default, Elysia plugins use function callbacks to register plugins.\n\nThis means that if you register a plugin for type declaration, it will duplicate itself just to provide type support, leading to duplication of plugins used in production.\n\nThis is why Plugin Checksum is introduced, to de-duplicate plugins registered for type declaration.\n\nTo opt-in to Plugin Checksum, you need to use a new plugin model and provide a `name` property to tell Elysia to prevent the plugin from being deduplicated:\n\n```ts\nconst plugin = new Elysia({\n    name: 'plugin'\n})\n```\n\nThis allows Elysia to identify the plugin and deduplicate based on name.\n\nAny duplicated name will be registered only once but type-safety will be provided after registration even if the plugin is deduplicated.\n\nIn case your plugin needs configuration, you can provide the configuration into a **seed** property to generate a checksum for deduplicating the plugin:\n\n```ts\nconst plugin = (config) => new Elysia({\n    name: 'plugin',\n    seed: config\n})\n```\n\nName and seed will be used to generate a checksum to de-duplicate registration, which leads to even better performance improvement..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I mount and wintercg compliance in elysiajs?\n\nAssistant: To mount and wintercg compliance in elysiajs, here's what you do:\nWinterCG is a standard for web-interoperable runtimes supported by Cloudflare, Deno, Vercel Edge Runtime, Netlify Function, and various more.\n\nWinterCG is a standard that allows web servers to run interoperable across runtimes, which use Web Standard definitions like Fetch, Request, and Response.\n\nBy this, Elysia is partially following WinterCG compliance as we are optimized for Bun but also openly support other runtimes if possible.\n\nThis allows any framework and code that is WinterCG compliant to run together in theory, an implementation is proved by [Hono](https://honojs.dev/) which introduces the **.mount** method to [run multiple frameworks together in one codebase](https://twitter.com/honojs/status/1684839623355490304), including Remix, Elysia, Itty Router, and Hono itself in a simple function.\n\nBy this, we implemented the same logic for Elysia by introducing the `.mount` method to run any framework or code that is WinterCG compliant.\n\nTo use `.mount`, [simply pass a `fetch` function](https://twitter.com/saltyAom/status/1684786233594290176):\n\n```ts\nconst app = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n```\n\nA **fetch** function is a function that accepts Web Standard Request and returns Web Standard Response as the definition of:\n\n```ts\n// Web Standard Request-like object\n// Web Standard Response\ntype fetch = (request: RequestLike) => Response\n```\n\nBy default, this declaration is used by:\n\n- Bun\n- Deno\n- Vercel Edge Runtime\n- Cloudflare Worker\n- Netlify Edge Function\n- Remix Function Handler\n\nWhich means you can run all of the above code to interoperate with Elysia all in a single server, or reuse existing functions all in one deployment, no need to set up Reverse Proxy for handling multiple servers.\n\nIf the framework also supports a **.mount** function, you can deeply nest a framework that supports it infinitely.\n\n```ts\nconst elysia = new Elysia()\n    .get('/Hello from Elysia inside Hono inside Elysia')\n\nconst hono = new Hono()\n    .get('/', (c) => c.text('Hello from Hono!'))\n    .mount('/elysia', elysia.fetch)\n\nconst main = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n    .listen(3000)\n```\n\nYou can even reuse multiple existing Elysia projects in your server.\n\n```ts\nimport A from 'project-a/elysia'\nimport B from 'project-b/elysia'\nimport C from 'project-c/elysia'\n\nnew Elysia()\n    .mount(A)\n    .mount(B)\n    .mount(C)\n```\n\nIf an instance passed to mount is an Elysia instance, it will resolve to `use` automatically, providing type-safety and support for Eden by default..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I improved startup time in elysiajs?\n\nAssistant: To improved startup time in elysiajs, here's what you do:\nStartup time is an important metric in a serverless environment which Elysia excels at incredibly, but we have taken it even further.\n\nBy default, Elysia generates OpenAPI schema for every route automatically and stores it internally when not used.\n\nIn this version, Elysia defers the compilation and moves to `@elysiajs/swagger` instead, allowing Elysia's startup time to be even faster.\n\nAnd with various micro-optimizations, and made possible by the new Plugin model, startup time is now up to 35% faster..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I dynamic mode in elysiajs?\n\nAssistant: To dynamic mode in elysiajs, here's what you do:\nElysia introduces Static Code Analysis and Ahead of Time compilation to push the boundary of performance.\n\nStatic Code Analysis allows Elysia to read your code then produce the most optimized version code, allowing Elysia to push performance to its limit.\n\nEven if Elysia is WinterCG compliant, environments like Cloudflare worker don't support function composition.\n\nThis means that Ahead of Time Compilation isn't possible, leading us to create a dynamic mode which uses JIT compilation instead of AoT, allowing Elysia to run in Cloudflare Worker as well.\n\nTo enable dynamic mode, set `aot` to false:\n\n```ts\nnew Elysia({\n    aot: false\n})\n```\n\nDynamic Mode is enabled by default in Cloudflare worker.\n\nIt's worth noting that enabling Dynamic Mode will disable some features like dynamic injected code like `t.Numeric` which parses strings to numbers automatically.\n\nAhead of Time compilation can read, detect, and optimize your code in exchange for startup time in exchange for extra performance gain, while dynamic mode uses JIT compilation, allowing startup time to be even faster up to 6x.\n\nBut it should be noted that startup time in Elysia is fast enough by default.\n\nElysia is able to register 10,000 routes in just 78ms which means an average of 0.0079 ms/route.\n\nThat being said, we are leaving a choice for you to decide yourself..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I declarative custom error in elysiajs?\n\nAssistant: To declarative custom error in elysiajs, here's what you do:\nThis update adds support for adding type support for handling custom errors.\n\n```ts\nclass CustomError extends Error {\n    constructor(public message: string) {\n        super(message)\n    }\n}\n\nnew Elysia()\n    .addError({\n        MyError: CustomError\n    })\n    .onError(({ code, error }) => {\n        switch(code) {\n            // With auto-completion\n            case 'MyError':\n                // With type narrowing\n                // Error is typed as CustomError\n                return error\n        }\n    })\n```\n\nThis allows us to handle custom types with type narrowing for handling custom errors and auto-completion for error codes to narrow down the correct types, fully type-safe declaratively..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I typebox 0.30 in elysiajs?\n\nAssistant: To typebox 0.30 in elysiajs, here's what you do:\nTypeBox is a core library that powers Elysia's strict type system known as **Elysia.t**.\n\nIn this update, we update TypeBox from 0.28 to 0.30 to make an even more fine-grained Type System nearly strictly typed language.\n\nThese updates introduce new features and many interesting changes, for example **Iterator** type, reducing package size, TypeScript code generation.\n\nAnd with support for Utility Types like:\n\n- `t.Awaited`\n- `t.Uppercase`\n- `t.Capitalized`.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I strict path in elysiajs?\n\nAssistant: To strict path in elysiajs, here's what you do:\nWe got a lot of requests for handling loose paths.\n\nBy default, Elysia handles paths strictly, which means that if you have to support paths with or without optional `/`, it will not be resolved and you have to duplicate the pathname twice.\n\n```ts\nnew Elysia()\n    .group('/v1', (app) => app\n        // Handle /v1\n        .get('', handle)\n        // Handle /v1/\n        .get('/', handle)\n    )\n```\n\nBy this, many have been requesting that `/v1/` should also resolve `/v1` as well.\n\nWith this update, we add support for loose path matching by default, to opt-in into this feature automatically:\n\n```ts\nnew Elysia()\n    .group('/v1', (app) => app\n        // Handle /v1 and /v1/\n        .get('/', handle)\n    )\n```\n\nTo disable loosePath mapping, you can set `strictPath` to true to use the previous behavior:\n\n```ts\nnew Elysia({\n    strictPath: false\n})\n```\n\nWe hope that this will clear any questions regarding path matching and its expected behavior..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I onresponse in elysiajs?\n\nAssistant: To onresponse in elysiajs, here's what you do:\nThis update introduces a new lifecycle hook called `onResponse`.\n\nThis is a proposal proposed by [elysia#67](https://github.com/elysiajs/elysia/issues/67)\n\nPreviously Elysia life-cycle works as illustrated in this diagram. ![Elysia life-cycle diagram](https://elysiajs.com/blog/elysia-06/lifecycle-05.webp)\n\nFor any metric, data-collection, or logging purpose, you can use `onAfterHandle` to run the function to collect metrics; however, this lifecycle isn't executed when the handler runs into an error, whether it's a routing error or a custom error provided.\n\nWhich is why we introduced `onResponse` to handle all cases of Response.\n\nYou can use `onRequest` and `onResponse` together to measure a metric of performance or any required logging..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "section_detail", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia 0.6 - This Game in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Old Plugin Registration**:\n\n```yaml\nconst plugin = (app: Elysia) => app.get('/', () => 'hello')\n```\n\nThis snippet shows you how to old plugin registration, which is an important aspect of elysia 0.6 - this game.\n\n**New Plugin Registration**:\n\n```yaml\nconst plugin = new Elysia()\n    .get('/', () => 'hello')\n```\n\nThis snippet shows you how to new plugin registration, which is an important aspect of elysia 0.6 - this game.\n\n**Group Registration (Before 0.6)**:\n\n```yaml\nconst group = (app: Elysia) => app\n    .group('/v1', (app) => app\n        .get('/hello', () => 'Hello World')\n    )\n```\n\nThis snippet shows you how to group registration (before 0.6), which is an important aspect of elysia 0.6 - this game.\n\n**Group Registration (0.6 and After)**:\n\n```yaml\nconst group = new Elysia({ prefix: '/v1' })\n    .get('/hello', () => 'Hello World')\n```\n\nThis snippet shows you how to group registration (0.6 and after), which is an important aspect of elysia 0.6 - this game.\n\n**Opt-in to Plugin Checksum**:\n\n```yaml\nconst plugin = new Elysia({\n    name: 'plugin'\n})\n```\n\nThis snippet shows you how to opt-in to plugin checksum, which is an important aspect of elysia 0.6 - this game.\n\n**Plugin with Configuration Seed**:\n\n```yaml\nconst plugin = (config) => new Elysia({\n    name: 'plugin',\n    seed: config\n})\n```\n\nThis snippet shows you how to plugin with configuration seed, which is an important aspect of elysia 0.6 - this game.\n\n**Using .mount Method**:\n\n```yaml\nconst app = new Elysia()\n    .get('/', () => 'Hello from Elysia')\n    .mount('/hono', hono.fetch)\n```\n\nThis snippet shows you how to using .mount method, which is an important aspect of elysia 0.6 - this game.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "code_examples", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia 0.6 - This Game in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse the new plugin model for better developer experience and future features.\n\nConsider using Plugin Checksum to avoid plugin duplication and improve performance.\n\nEnable dynamic mode in environments like Cloudflare Worker for better compatibility.\n\nUtilize the onResponse lifecycle hook for comprehensive logging and metrics collection.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/elysia-06", "title": "Elysia 0.6 - This Game", "description": "Named after the opening of the legendary anime, 'No Game No Life', this documentation covers the new features and improvements in Elysia 0.6, including a new plugin model, plugin checksum, WinterCG compliance, improved startup time, dynamic mode, and more.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:26:10", "type": "best_practices", "page_metadata": {"title": "Elysia 0.6 - This Game | ElysiaJS", "ogImage": "https://elysiajs.com/blog/elysia-06/this-game.webp", "og:image:height": "1080", "twitter:card": "summary_large_image", "og:title": "Introducing Elysia 0.6 - This Game", "generator": "VitePress v1.6.3", "description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "ogTitle": "Introducing Elysia 0.6 - This Game", "ogDescription": "Introducing re-imagined plugin model, dynamic mode, better developer experience with declarative custom error, customizable loose and strict path mapping, TypeBox 0.30 and WinterCG framework interlop. Pushing the boundary of what is possible once again.", "og:image:width": "1920", "og:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "language": "en-US", "twitter:image": "https://elysiajs.com/blog/elysia-06/this-game.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "scrapeId": "9d6a6799-ab8f-4e7f-baaa-532c2b1782a8", "sourceURL": "https://elysiajs.com/blog/elysia-06", "url": "https://elysiajs.com/blog/elysia-06", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Accelerate your next Prisma server with Elysia is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Accelerate your next Prisma server with Elysia in elysiajs.\n\n# Accelerate your next Prisma server with Elysia\n\nPrisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.Here's a quick rundown of what this is about:\n\n## Elysia\n\nElysia is one of the answer that would come to mind when you asked what framework should I use with Bun. Although, you can use Express with Bun, but with Elysia is built specifically for Bun. Elysia can outperforms Express by nearly ~19x faster supercharged with declarative API for creating a unified type system and end-to-end type safety. Elysia also known for having a fluent Developer Experience especially as Elysia is designed to be used with Prisma since its early day. With Elysia's strict-type validation, we can integrate Elysia and Prisma with ease using declarative API. In other word, Elysia will ensure that runtime type and TypeScript's type will be always in sync, making it behave like Type Strict Language where you can completely trust the type system and looks ahead for any type error, and easier debugging errors relating to type.\n\n## Setting up\n\nAll we need to get start is to run `bun create` to setup an Elysia server\n\n```bash\nbun create elysia elysia-prisma\n```\n\nWhere `elysia-prisma` is our project name (folder destination), feels free to change the name to anything you like.\n\nNow in our folder, and let's install Prisma CLI as dev dependency.\n\n```ts\nbun add -d prisma\n```\n\nThen we can setup prisma project with `prisma init`\n\n```ts\nbunx prisma init\n```\n\n`bunx` is a bun command equivalent to `npx`, which allows us to execute package bin. Once setup, we can see that Prisma will update `.env` file and generate a folder named **prisma** with **schema.prisma** as a file inside. **schema.prisma** is an database model defined with Prisma's schema language. Let's update our **schema.prisma** file like this for a demonstration:\n\n```ts\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int     @id @default(autoincrement())\n  username  String  @unique\n  password  String\n}\n```\n\nTelling Prisma that we want to create a table name **User** with column as:\n\n| Column | Type | Constraint |\n| --- | --- | --- |\n| id | Number | Primary Key with auto increment |\n| username | String | Unique |\n| password | String | - |\n\nPrisma will then read the schema, and DATABASE_URL from an `.env` file, so before syncing our database we need to define the `DATABASE_URL` first. Since we don't have any database running, we can setup one using docker:\n\n```bash\ndocker run -p 5432:5432 -e POSTGRES_PASSWORD=12345678 -d postgres\n```\n\nNow go into `.env` file at the root of our project then edit:\n\n```\nDATABASE_URL=\"postgresql://postgres:12345678@localhost:5432/db?schema=public\"\n```\n\nThen we can run `prisma migrate` to sync our database with Prisma schema:\n\n```bash\nbunx prisma migrate dev --name init\n```\n\nPrisma then generate a strongly-typed Prisma Client code based on our schema. This means we get autocomplete and type checking in our code editor, catching potential errors at compile time rather than runtime.\n\n## Into the code\n\nIn our **src/index.ts**, let's update our Elysia server to create a simple user sign-up endpoint.\n\n```ts\nimport { Elysia } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/sign-up',\n        async ({ body }) => db.user.create({\n            data: body\n        })\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nWe have just created a simple endpoint to insert new user into our database using Elysia and Prisma.\n\nTIP\n\n**It's important** that when returning Prisma function, you should always marked a callback function as async. As Prisma function doesn't return native Promise, Elysia can not dynamically handle the custom promise type, but with Static Code Analysis, by marking callback function as async, Elysia will try to await the return type of a function thus allowing us to map Prisma result. Now the problem is that the body could be anything, not limited to our expected defined type. We can improve that by using Elysia's type system.\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/sign-up',\n        async ({ body }) => db.user.create({\n            data: body\n        }),\n        {\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nThis tells Elysia to validate the body of an incoming request to match the shape, and update TypeScript's type of the `body` inside the callback to match the exact same type:\n\n```ts\n// 'body' is now typed as the following:\n{\n    username: string\n    password: string\n}\n```\n\nThis means that if you the shape doesn't interlop with database table, it would warn you immediately. Which is effective when you need to edit a table or perform a migration, Elysia can log the error immediately line by line because of a type conflict before reaching the production.\n\n## Error Handling\n\nSince our `username` field is unique, sometime Prisma can throw an error there could be an accidental duplication of `username` when trying to sign up like this:\n\n```ts\nInvalid `prisma.user.create()` invocation:\n\nUnique constraint failed on the fields: (`username`)\n```\n\nDefault Elysia's error handler can handle the case automatically but we can improve that by specifying a custom error using Elysia's local `onError` hook:\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/',\n        async ({ body }) => db.user.create({\n            data: body\n        }),\n        {\n            error({ code }) {\n                switch (code) {\n                    // Prisma P2002: \"Unique constraint failed on the {constraint}\"\n                    case 'P2002':\n                        return {\n                            error: 'Username must be unique'\n                        }\n                }\n            },\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nUsing `error` hook, any error thown inside a callback will be populate to `error` hook, allowing us to define a custom error handler. According to [Prisma documentation](https://www.prisma.io/docs/reference/api-reference/error-reference#p2002), error code 'P2002' means that by performing the query, it will failed a unique constraint. Since this table only a single `username` field that is unique, we can imply that the error is caused because username is not unique, so we return a custom erorr message of:\n\n```ts\n{\n    error: 'Username must be unique'\n}\n```\n\nThis will return a JSON equivalent of our custom error message when a unique constraints failed. Allowing us to seemlessly define any custom error from Prisma error.\n\n## Bonus: Reference Schema\n\nWhen our server grow complex and type becoming more redundant and become a boilerplate, inlining an Elysia type can be improved by using **Reference Schema**. To put it simply, we can named our schema and reference the type by using the name.\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .model({\n        'user.sign': t.Object({\n            username: t.String(),\n            password: t.String({\n                minLength: 8\n            })\n        })\n    })\n    .post(\n        '/',\n        async ({ body }) => db.user.create({\n            data: body\n        }),\n        {\n            error({ code }) {\n                switch (code) {\n                    // Prisma P2002: \"Unique constraint failed on the {constraint}\"\n                    case 'P2002':\n                        return {\n                            error: 'Username must be unique'\n                        }\n                }\n            },\n            body: 'user.sign',\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nThis works as same as using an inline but instead you defined it once and refers to the schema by name to remove redundant validation codes. TypeScript and validation code will works as expected.\n\n## Bonus: Documentation\n\nAs a bonus, Elysia type system is also OpenAPI Schema 3.0 compliance, which means that it can generate documentation with tools that support OpenAPI Schema like Swagger. We can use Elysia Swagger plugin to generate an API documentation in a single line.\n\n```bash\nbun add @elysiajs/swagger\n```\n\nAnd then just add the plugin:\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\nimport { swagger } from '@elysiajs/swagger'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .use(swagger())\n    .post(\n        '/',\n        async ({ body }) =>\n            db.user.create({\n                data: body,\n                select: {\n                    id: true,\n                    username: true\n                }\n            }),\n        {\n            error({ code }) {\n                switch (code) {\n                    // Prisma P2002: \"Unique constraint failed on the {constraint}\"\n                    case 'P2002':\n                        return {\n                            error: 'Username must be unique'\n                        }\n                }\n            },\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            }),\n            response: t.Object({\n                id: t.Number(),\n                username: t.String()\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nAnd that's all it takes to create a well-defined documentation for our API. ![Swagger documentation generated by Elysia](https://elysiajs.com/blog/with-prisma/swagger.webp) And thanks to defining a strict type for the documentation, we found that we accidentally return `password` field from our API which is not a good idea to return a private information. Thanks to Elysia's type system, we define that response shouldn't contains `password` which automatically warn us that our Prisma query are returning a password allows us to fix that a head of time. And if anything more, we don't have to worry that we might forget a specification of OpenAPI Schema 3.0, as we have auto-completion and type safety too. We can define our route detail with `detail` that also follows OpenAPI Schema 3.0, so we can properly create documentation effortlessly.\n\n## What's next\n\nWith the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance. > It's an absolute joy to work with. Elysia is on a journey to create a new standard for a better developer experience with Bun for high performance TypeScript server that can match the performance of Go and Rust. If you're looking for a place to start learning about out Bun, consider take a look for what Elysia can offer especially with an [end-to-end type safety](https://elysiajs.com/eden/overview.html) like tRPC but built on REST standard without any code generation. If you're interested in Elysia, feel free to check out our [Discord server](https://discord.gg/eaFJ2KDJck) or see [Elysia on GitHub](https://github.com/elysiajs/elysia).\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "overview", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia in elysiajs?\n\nAssistant: To elysia in elysiajs, here's what you do:\nElysia is one of the answer that would come to mind when you asked what framework should I use with Bun. Although, you can use Express with Bun, but with Elysia is built specifically for Bun. Elysia can outperforms Express by nearly ~19x faster supercharged with declarative API for creating a unified type system and end-to-end type safety. Elysia also known for having a fluent Developer Experience especially as Elysia is designed to be used with Prisma since its early day. With Elysia's strict-type validation, we can integrate Elysia and Prisma with ease using declarative API. In other word, Elysia will ensure that runtime type and TypeScript's type will be always in sync, making it behave like Type Strict Language where you can completely trust the type system and looks ahead for any type error, and easier debugging errors relating to type..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I setting up in elysiajs?\n\nAssistant: To setting up in elysiajs, here's what you do:\nAll we need to get start is to run `bun create` to setup an Elysia server\n\n```bash\nbun create elysia elysia-prisma\n```\n\nWhere `elysia-prisma` is our project name (folder destination), feels free to change the name to anything you like.\n\nNow in our folder, and let's install Prisma CLI as dev dependency.\n\n```ts\nbun add -d prisma\n```\n\nThen we can setup prisma project with `prisma init`\n\n```ts\nbunx prisma init\n```\n\n`bunx` is a bun command equivalent to `npx`, which allows us to execute package bin. Once setup, we can see that Prisma will update `.env` file and generate a folder named **prisma** with **schema.prisma** as a file inside. **schema.prisma** is an database model defined with Prisma's schema language. Let's update our **schema.prisma** file like this for a demonstration:\n\n```ts\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int     @id @default(autoincrement())\n  username  String  @unique\n  password  String\n}\n```\n\nTelling Prisma that we want to create a table name **User** with column as:\n\n| Column | Type | Constraint |\n| --- | --- | --- |\n| id | Number | Primary Key with auto increment |\n| username | String | Unique |\n| password | String | - |\n\nPrisma will then read the schema, and DATABASE_URL from an `.env` file, so before syncing our database we need to define the `DATABASE_URL` first. Since we don't have any database running, we can setup one using docker:\n\n```bash\ndocker run -p 5432:5432 -e POSTGRES_PASSWORD=12345678 -d postgres\n```\n\nNow go into `.env` file at the root of our project then edit:\n\n```\nDATABASE_URL=\"postgresql://postgres:12345678@localhost:5432/db?schema=public\"\n```\n\nThen we can run `prisma migrate` to sync our database with Prisma schema:\n\n```bash\nbunx prisma migrate dev --name init\n```\n\nPrisma then generate a strongly-typed Prisma Client code based on our schema. This means we get autocomplete and type checking in our code editor, catching potential errors at compile time rather than runtime..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I into the code in elysiajs?\n\nAssistant: To into the code in elysiajs, here's what you do:\nIn our **src/index.ts**, let's update our Elysia server to create a simple user sign-up endpoint.\n\n```ts\nimport { Elysia } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/sign-up',\n        async ({ body }) => db.user.create({\n            data: body\n        })\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nWe have just created a simple endpoint to insert new user into our database using Elysia and Prisma.\n\nTIP\n\n**It's important** that when returning Prisma function, you should always marked a callback function as async. As Prisma function doesn't return native Promise, Elysia can not dynamically handle the custom promise type, but with Static Code Analysis, by marking callback function as async, Elysia will try to await the return type of a function thus allowing us to map Prisma result. Now the problem is that the body could be anything, not limited to our expected defined type. We can improve that by using Elysia's type system.\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/sign-up',\n        async ({ body }) => db.user.create({\n            data: body\n        }),\n        {\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nThis tells Elysia to validate the body of an incoming request to match the shape, and update TypeScript's type of the `body` inside the callback to match the exact same type:\n\n```ts\n// 'body' is now typed as the following:\n{\n    username: string\n    password: string\n}\n```\n\nThis means that if you the shape doesn't interlop with database table, it would warn you immediately. Which is effective when you need to edit a table or perform a migration, Elysia can log the error immediately line by line because of a type conflict before reaching the production..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I error handling in elysiajs?\n\nAssistant: To error handling in elysiajs, here's what you do:\nSince our `username` field is unique, sometime Prisma can throw an error there could be an accidental duplication of `username` when trying to sign up like this:\n\n```ts\nInvalid `prisma.user.create()` invocation:\n\nUnique constraint failed on the fields: (`username`)\n```\n\nDefault Elysia's error handler can handle the case automatically but we can improve that by specifying a custom error using Elysia's local `onError` hook:\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/',\n        async ({ body }) => db.user.create({\n            data: body\n        }),\n        {\n            error({ code }) {\n                switch (code) {\n                    // Prisma P2002: \"Unique constraint failed on the {constraint}\"\n                    case 'P2002':\n                        return {\n                            error: 'Username must be unique'\n                        }\n                }\n            },\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nUsing `error` hook, any error thown inside a callback will be populate to `error` hook, allowing us to define a custom error handler. According to [Prisma documentation](https://www.prisma.io/docs/reference/api-reference/error-reference#p2002), error code 'P2002' means that by performing the query, it will failed a unique constraint. Since this table only a single `username` field that is unique, we can imply that the error is caused because username is not unique, so we return a custom erorr message of:\n\n```ts\n{\n    error: 'Username must be unique'\n}\n```\n\nThis will return a JSON equivalent of our custom error message when a unique constraints failed. Allowing us to seemlessly define any custom error from Prisma error..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bonus: reference schema in elysiajs?\n\nAssistant: To bonus: reference schema in elysiajs, here's what you do:\nWhen our server grow complex and type becoming more redundant and become a boilerplate, inlining an Elysia type can be improved by using **Reference Schema**. To put it simply, we can named our schema and reference the type by using the name.\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .model({\n        'user.sign': t.Object({\n            username: t.String(),\n            password: t.String({\n                minLength: 8\n            })\n        })\n    })\n    .post(\n        '/',\n        async ({ body }) => db.user.create({\n            data: body\n        }),\n        {\n            error({ code }) {\n                switch (code) {\n                    // Prisma P2002: \"Unique constraint failed on the {constraint}\"\n                    case 'P2002':\n                        return {\n                            error: 'Username must be unique'\n                        }\n                }\n            },\n            body: 'user.sign',\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nThis works as same as using an inline but instead you defined it once and refers to the schema by name to remove redundant validation codes. TypeScript and validation code will works as expected..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bonus: documentation in elysiajs?\n\nAssistant: To bonus: documentation in elysiajs, here's what you do:\nAs a bonus, Elysia type system is also OpenAPI Schema 3.0 compliance, which means that it can generate documentation with tools that support OpenAPI Schema like Swagger. We can use Elysia Swagger plugin to generate an API documentation in a single line.\n\n```bash\nbun add @elysiajs/swagger\n```\n\nAnd then just add the plugin:\n\n```ts\nimport { Elysia, t } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\nimport { swagger } from '@elysiajs/swagger'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .use(swagger())\n    .post(\n        '/',\n        async ({ body }) =>\n            db.user.create({\n                data: body,\n                select: {\n                    id: true,\n                    username: true\n                }\n            }),\n        {\n            error({ code }) {\n                switch (code) {\n                    // Prisma P2002: \"Unique constraint failed on the {constraint}\"\n                    case 'P2002':\n                        return {\n                            error: 'Username must be unique'\n                        }\n                }\n            },\n            body: t.Object({\n                username: t.String(),\n                password: t.String({\n                    minLength: 8\n                })\n            }),\n            response: t.Object({\n                id: t.Number(),\n                username: t.String()\n            })\n        }\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nAnd that's all it takes to create a well-defined documentation for our API. ![Swagger documentation generated by Elysia](https://elysiajs.com/blog/with-prisma/swagger.webp) And thanks to defining a strict type for the documentation, we found that we accidentally return `password` field from our API which is not a good idea to return a private information. Thanks to Elysia's type system, we define that response shouldn't contains `password` which automatically warn us that our Prisma query are returning a password allows us to fix that a head of time. And if anything more, we don't have to worry that we might forget a specification of OpenAPI Schema 3.0, as we have auto-completion and type safety too. We can define our route detail with `detail` that also follows OpenAPI Schema 3.0, so we can properly create documentation effortlessly..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I what's next in elysiajs?\n\nAssistant: To what's next in elysiajs, here's what you do:\nWith the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance. > It's an absolute joy to work with. Elysia is on a journey to create a new standard for a better developer experience with Bun for high performance TypeScript server that can match the performance of Go and Rust. If you're looking for a place to start learning about out Bun, consider take a look for what Elysia can offer especially with an [end-to-end type safety](https://elysiajs.com/eden/overview.html) like tRPC but built on REST standard without any code generation. If you're interested in Elysia, feel free to check out our [Discord server](https://discord.gg/eaFJ2KDJck) or see [Elysia on GitHub](https://github.com/elysiajs/elysia)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "section_detail", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Accelerate your next Prisma server with Elysia in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Create Elysia Server**:\n\n```yaml\nbun create elysia elysia-prisma\n```\n\nThis snippet shows you how to create elysia server, which is an important aspect of accelerate your next prisma server with elysia.\n\n**Install Prisma CLI**:\n\n```yaml\nbun add -d prisma\n```\n\nThis snippet shows you how to install prisma cli, which is an important aspect of accelerate your next prisma server with elysia.\n\n**Setup Prisma Project**:\n\n```yaml\nbunx prisma init\n```\n\nThis snippet shows you how to setup prisma project, which is an important aspect of accelerate your next prisma server with elysia.\n\n**Docker Command to Run PostgreSQL**:\n\n```yaml\ndocker run -p 5432:5432 -e POSTGRES_PASSWORD=12345678 -d postgres\n```\n\nThis snippet shows you how to docker command to run postgresql, which is an important aspect of accelerate your next prisma server with elysia.\n\n**Prisma Migrate Command**:\n\n```yaml\nbunx prisma migrate dev --name init\n```\n\nThis snippet shows you how to prisma migrate command, which is an important aspect of accelerate your next prisma server with elysia.\n\n**Elysia User Sign-Up Endpoint**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { PrismaClient } from '@prisma/client'\n\nconst db = new PrismaClient()\n\nconst app = new Elysia()\n    .post(\n        '/sign-up',\n        async ({ body }) => db.user.create({\n            data: body\n        })\n    )\n    .listen(3000)\n\nconsole.log(\n    `🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`\n)\n```\n\nThis snippet shows you how to elysia user sign-up endpoint, which is an important aspect of accelerate your next prisma server with elysia.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "code_examples", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Accelerate your next Prisma server with Elysia in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nAlways mark a callback function as async when returning Prisma function to ensure proper handling of promises.\n\nUse Elysia's type system to validate incoming request bodies to match expected types and prevent errors.\n\nDefine custom error handlers for specific Prisma errors to provide meaningful feedback to users.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/with-prisma", "title": "Accelerate your next Prisma server with Elysia", "description": "Prisma is a renowned TypeScript ORM for its developer experience, allowing seamless integration with popular databases and a fluent API for building applications.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:27:52", "type": "best_practices", "page_metadata": {"ogTitle": "Accelerate your next Prisma server with Elysia", "description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "ogDescription": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "og:image:height": "1080", "language": "en-US", "og:title": "Accelerate your next Prisma server with Elysia", "ogImage": "https://elysiajs.com/blog/with-prisma/prism.webp", "favicon": "https://elysiajs.com/assets/elysia.png", "title": "Accelerate your next Prisma server with Elysia | ElysiaJS", "og:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "twitter:image": "https://elysiajs.com/blog/with-prisma/prism.webp", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:width": "1920", "og:description": "With the support of Prisma with Bun and Elysia, we are entering a new era of a new level of developer experience. For Prisma we can accelerate our interaction with database, Elysia accelerate our creation of backend web server in term of both developer experience and performance.", "twitter:card": "summary_large_image", "scrapeId": "3bd9afce-7225-4566-a014-ffd6a1ee7fea", "sourceURL": "https://elysiajs.com/blog/with-prisma", "url": "https://elysiajs.com/blog/with-prisma", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Unit Test is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Unit Test in elysiajs.\n\n# Unit Test\n\nBeing WinterCG compliant, we can use Request / Response classes to test an Elysia server.Here's a quick rundown of what this is about:\n\n## Unit Test\n\nElysia provides the **Elysia.handle** method, which accepts a Web Standard [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) and returns [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response), simulating an HTTP Request.\n\nBun includes a built-in [test runner](https://bun.sh/docs/cli/test) that offers a Jest-like API through the `bun:test` module, facilitating the creation of unit tests.\n\nCreate **test/index.test.ts** in the root of project directory with the following:\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const app = new Elysia().get('/', () => 'hi')\n\n        const response = await app\n            .handle(new Request('http://localhost/'))\n            .then((res) => res.text())\n\n        expect(response).toBe('hi')\n    })\n})\n```\n\nThen we can perform tests by running **bun test**\n\n```bash\nbun test\n```\n\nNew requests to an Elysia server must be a fully valid URL, **NOT** a part of a URL.\n\nThe request must provide URL as the following:\n\n| URL | Valid |\n| --- | --- |\n| [http://localhost/user](http://localhost/user) | ✅ |\n| /user | ❌ | \n\nWe can also use other testing libraries like Jest to create Elysia unit tests.\n\n## Eden Treaty test\n\nWe may use Eden Treaty to create an end-to-end type safety test for Elysia server as follows:\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia().get('/hello', 'hi')\n\nconst api = treaty(app)\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const { data, error } = await api.hello.get()\n\n        expect(data).toBe('hi')\n    })\n})\n```\n\nSee [Eden Treaty Unit Test](https://elysiajs.com/eden/treaty/unit-test.html) for setup and more information.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/unit-test", "title": "Unit Test", "description": "Being WinterCG compliant, we can use Request / Response classes to test an Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:28:10", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Testing - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "description": "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request.", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request."], "og:title": "Testing - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "ogTitle": "Testing - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d64a8874-4f95-410a-b9c0-da0f35578d61", "sourceURL": "https://elysiajs.com/patterns/unit-test", "url": "https://elysiajs.com/patterns/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I unit test in elysiajs?\n\nAssistant: To unit test in elysiajs, here's what you do:\nElysia provides the **Elysia.handle** method, which accepts a Web Standard [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) and returns [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response), simulating an HTTP Request.\n\nBun includes a built-in [test runner](https://bun.sh/docs/cli/test) that offers a Jest-like API through the `bun:test` module, facilitating the creation of unit tests.\n\nCreate **test/index.test.ts** in the root of project directory with the following:\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const app = new Elysia().get('/', () => 'hi')\n\n        const response = await app\n            .handle(new Request('http://localhost/'))\n            .then((res) => res.text())\n\n        expect(response).toBe('hi')\n    })\n})\n```\n\nThen we can perform tests by running **bun test**\n\n```bash\nbun test\n```\n\nNew requests to an Elysia server must be a fully valid URL, **NOT** a part of a URL.\n\nThe request must provide URL as the following:\n\n| URL | Valid |\n| --- | --- |\n| [http://localhost/user](http://localhost/user) | ✅ |\n| /user | ❌ | \n\nWe can also use other testing libraries like Jest to create Elysia unit tests..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/unit-test", "title": "Unit Test", "description": "Being WinterCG compliant, we can use Request / Response classes to test an Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:28:10", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Testing - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "description": "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request.", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request."], "og:title": "Testing - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "ogTitle": "Testing - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d64a8874-4f95-410a-b9c0-da0f35578d61", "sourceURL": "https://elysiajs.com/patterns/unit-test", "url": "https://elysiajs.com/patterns/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I eden treaty test in elysiajs?\n\nAssistant: To eden treaty test in elysiajs, here's what you do:\nWe may use Eden Treaty to create an end-to-end type safety test for Elysia server as follows:\n\n```typescript\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia().get('/hello', 'hi')\n\nconst api = treaty(app)\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const { data, error } = await api.hello.get()\n\n        expect(data).toBe('hi')\n    })\n})\n```\n\nSee [Eden Treaty Unit Test](https://elysiajs.com/eden/treaty/unit-test.html) for setup and more information..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/unit-test", "title": "Unit Test", "description": "Being WinterCG compliant, we can use Request / Response classes to test an Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:28:10", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Testing - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "description": "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request.", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request."], "og:title": "Testing - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "ogTitle": "Testing - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d64a8874-4f95-410a-b9c0-da0f35578d61", "sourceURL": "https://elysiajs.com/patterns/unit-test", "url": "https://elysiajs.com/patterns/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Unit Test in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Unit Test Example**:\n\n```yaml\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const app = new Elysia().get('/', () => 'hi')\n\n        const response = await app\n            .handle(new Request('http://localhost/'))\n            .then((res) => res.text())\n\n        expect(response).toBe('hi')\n    })\n})\n```\n\nThis snippet shows you how to unit test example, which is an important aspect of unit test.\n\n**Run Tests Command**:\n\n```yaml\nbun test\n```\n\nThis snippet shows you how to run tests command, which is an important aspect of unit test.\n\n**Eden Treaty Test Example**:\n\n```yaml\n// test/index.test.ts\nimport { describe, expect, it } from 'bun:test'\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia().get('/hello', 'hi')\n\nconst api = treaty(app)\n\ndescribe('Elysia', () => {\n    it('return a response', async () => {\n        const { data, error } = await api.hello.get()\n\n        expect(data).toBe('hi')\n    })\n})\n```\n\nThis snippet shows you how to eden treaty test example, which is an important aspect of unit test.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/unit-test", "title": "Unit Test", "description": "Being WinterCG compliant, we can use Request / Response classes to test an Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:28:10", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Testing - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "description": "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request.", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request."], "og:title": "Testing - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "ogTitle": "Testing - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d64a8874-4f95-410a-b9c0-da0f35578d61", "sourceURL": "https://elysiajs.com/patterns/unit-test", "url": "https://elysiajs.com/patterns/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Unit Test in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nNew requests to an Elysia server must be a fully valid URL, **NOT** a part of a URL.\n\nWe can also use other testing libraries like Jest to create Elysia unit tests.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/unit-test", "title": "Unit Test", "description": "Being WinterCG compliant, we can use Request / Response classes to test an Elysia server.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:28:10", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "title": "Testing - ElysiaJS | ElysiaJS", "twitter:card": "summary_large_image", "og:image:width": "1920", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "og:image:height": "1080", "description": "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request.", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "You can use `bun:test` to create a unit test with Elysia. Elysia instance has a `handle` method that accepts `Request` and will return a `Response`, the same as creating an HTTP request."], "og:title": "Testing - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "ogTitle": "Testing - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "d64a8874-4f95-410a-b9c0-da0f35578d61", "sourceURL": "https://elysiajs.com/patterns/unit-test", "url": "https://elysiajs.com/patterns/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Deploy to production is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Deploy to production in elysiajs.\n\n# Deploy to production\n\nThis page is a guide on how to deploy Elysia to production.Here's a quick rundown of what this is about:\n\n## Compile to binary\n\nWe recommended running a build command before deploying to production as it could potentially reduce memory usage and file size significantly.\n\nWe recommended compile Elysia into a single binary using the command as follows:\n\n```bash\nbun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n```\n\nThis will generate a portable binary `server` which we can run to start our server.\n\nCompiling server to binary usually significantly reduce memory usage by 2-3x compared to development environment.\n\nThis command is a bit long, so let's break it down:\n\n1. `--compile` - Compile TypeScript to binary\n2. `--minify-whitespace` - Remove unnecessary whitespace\n3. `--minify-syntax` - Minify JavaScript syntax to reduce file size\n4. `--target bun` - Target the `bun` platform, this can optimize the binary for the target platform\n5. `--outfile server` - Output the binary as `server`\n6. `./src/index.ts` - The entry file of our server (codebase)\n\nTo start our server, simply run the binary.\n\n```bash\n./server\n```\n\nOnce binary is compiled, you don't need `Bun` installed on the machine to run the server.\n\nThis is great as the deployment server doesn't need to install an extra runtime to run making binary portable.\n\n## Why not --minify\n\nBun does have `--minify` flag that will minify the binary.\n\nHowever if we are using [OpenTelemetry](https://elysiajs.com/plugin/opentelemetry.html), it's going to reduce a function name to a single character.\n\nThis make tracing harder than it should as OpenTelemetry rely on a function name.\n\nHowever, if you're not using OpenTelemetry, you may opt in for `--minify` instead\n\n```bash\nbun build \\\n\\t--compile \\\n\\t--minify \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n```\n\n## Permission\n\nSome Linux distro might not be able to run the binary, we suggest enable executable permission to a binary if you're on Linux:\n\n```bash\nchmod +x ./server\n\n./server\n```\n\n## Unknown random Chinese error\n\nIf you're trying to deploy a binary to your server but unable to run with random chinese character error.\n\nIt means that the machine you're running on **doesn't support AVX2**.\n\nUnfortunately, Bun require machine that has an `AVX2` hardware support.\n\nThere's no workaround as far as we know.\n\n## Compile to JavaScript\n\nIf you are unable to compile to binary or you are deploying on a Window server.\n\nYou may bundle your server to a JavaScript file instead.\n\n```bash\nbun build \\\n\\t--compile \\ // [!code --]\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile ./dist/index.js \\\n\\t./src/index.ts\n```\n\nThis will generate a single portable JavaScript file that you can deploy on your server.\n\n```bash\nNODE_ENV=production bun ./dist/index.js\n```\n\n## Docker\n\nOn Docker, we recommended to always compile to binary to reduce base image overhead.\n\nHere's an example image using Distroless image using binary.\n\n```dockerfile\nFROM oven/bun AS build\n\nWORKDIR /app\n\n# Cache packages installation\nCOPY package.json package.json\nCOPY bun.lock bun.lock\n\nRUN bun install\n\nCOPY ./src ./src\n\nENV NODE_ENV=production\n\nRUN bun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n\nFROM gcr.io/distroless/base\n\nWORKDIR /app\n\nCOPY --from=build /app/server server\n\nENV NODE_ENV=production\n\nCMD [\"./server\"]\n\nEXPOSE 3000\n```\n\n## Monorepo\n\nIf you are using Elysia with Monorepo, you may need to include dependent `packages`.\n\nIf you are using Turborepo, you may place a Dockerfile inside an your apps directory like **apps/server/Dockerfile**. This may apply to other monorepo manager such as Lerna, etc.\n\nAssume that our monorepo are using Turborepo with structure as follows:\n\n- apps\n  - server\n    - **Dockerfile (place a Dockerfile here)**\n- packages\n  - config\n\nThen we can build our Dockerfile on monorepo root (not app root):\n\n```bash\ndocker build -t elysia-mono .\n```\n\nWith Dockerfile as follows:\n\n```dockerfile\nFROM oven/bun:1 AS build\n\nWORKDIR /app\n\n# Cache packages\nCOPY package.json package.json\nCOPY bun.lock bun.lock\n\nCOPY /apps/server/package.json ./apps/server/package.json\nCOPY /packages/config/package.json ./packages/config/package.json\n\nRUN bun install\n\nCOPY /apps/server ./apps/server\nCOPY /packages/config ./packages/config\n\nENV NODE_ENV=production\n\nRUN bun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n\nFROM gcr.io/distroless/base\n\nWORKDIR /app\n\nCOPY --from=build /app/server server\n\nENV NODE_ENV=production\n\nCMD [\"./server\"]\n\nEXPOSE 3000\n```\n\n## Railway\n\n[Railway](https://railway.app/) is one of the popular deployment platform.\n\nRailway assign **random port** to expose for each deployment that can be access via `PORT` environment variable.\n\nWe need to modify our Elysia server to accept `PORT` environment to comply with Railway port.\nInstead of a fixed port, we may use `process.env.PORT` and provide a fallback on development instead.\n\n```ts\nnew Elysia()\n\\t.listen(3000)\n\\t.listen(process.env.PORT ?? 3000)\n```\n\nThis should allows Elysia to intercept port provided by Railway.\n\nTIP\n\nElysia assign hostname to `0.0.0.0` automatically, which works with Railway.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "overview", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I compile to binary in elysiajs?\n\nAssistant: To compile to binary in elysiajs, here's what you do:\nWe recommended running a build command before deploying to production as it could potentially reduce memory usage and file size significantly.\n\nWe recommended compile Elysia into a single binary using the command as follows:\n\n```bash\nbun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n```\n\nThis will generate a portable binary `server` which we can run to start our server.\n\nCompiling server to binary usually significantly reduce memory usage by 2-3x compared to development environment.\n\nThis command is a bit long, so let's break it down:\n\n1. `--compile` - Compile TypeScript to binary\n2. `--minify-whitespace` - Remove unnecessary whitespace\n3. `--minify-syntax` - Minify JavaScript syntax to reduce file size\n4. `--target bun` - Target the `bun` platform, this can optimize the binary for the target platform\n5. `--outfile server` - Output the binary as `server`\n6. `./src/index.ts` - The entry file of our server (codebase)\n\nTo start our server, simply run the binary.\n\n```bash\n./server\n```\n\nOnce binary is compiled, you don't need `Bun` installed on the machine to run the server.\n\nThis is great as the deployment server doesn't need to install an extra runtime to run making binary portable..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I why not --minify in elysiajs?\n\nAssistant: To why not --minify in elysiajs, here's what you do:\nBun does have `--minify` flag that will minify the binary.\n\nHowever if we are using [OpenTelemetry](https://elysiajs.com/plugin/opentelemetry.html), it's going to reduce a function name to a single character.\n\nThis make tracing harder than it should as OpenTelemetry rely on a function name.\n\nHowever, if you're not using OpenTelemetry, you may opt in for `--minify` instead\n\n```bash\nbun build \\\n\\t--compile \\\n\\t--minify \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I permission in elysiajs?\n\nAssistant: To permission in elysiajs, here's what you do:\nSome Linux distro might not be able to run the binary, we suggest enable executable permission to a binary if you're on Linux:\n\n```bash\nchmod +x ./server\n\n./server\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I unknown random chinese error in elysiajs?\n\nAssistant: To unknown random chinese error in elysiajs, here's what you do:\nIf you're trying to deploy a binary to your server but unable to run with random chinese character error.\n\nIt means that the machine you're running on **doesn't support AVX2**.\n\nUnfortunately, Bun require machine that has an `AVX2` hardware support.\n\nThere's no workaround as far as we know..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I compile to javascript in elysiajs?\n\nAssistant: To compile to javascript in elysiajs, here's what you do:\nIf you are unable to compile to binary or you are deploying on a Window server.\n\nYou may bundle your server to a JavaScript file instead.\n\n```bash\nbun build \\\n\\t--compile \\ // [!code --]\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile ./dist/index.js \\\n\\t./src/index.ts\n```\n\nThis will generate a single portable JavaScript file that you can deploy on your server.\n\n```bash\nNODE_ENV=production bun ./dist/index.js\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I docker in elysiajs?\n\nAssistant: To docker in elysiajs, here's what you do:\nOn Docker, we recommended to always compile to binary to reduce base image overhead.\n\nHere's an example image using Distroless image using binary.\n\n```dockerfile\nFROM oven/bun AS build\n\nWORKDIR /app\n\n# Cache packages installation\nCOPY package.json package.json\nCOPY bun.lock bun.lock\n\nRUN bun install\n\nCOPY ./src ./src\n\nENV NODE_ENV=production\n\nRUN bun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n\nFROM gcr.io/distroless/base\n\nWORKDIR /app\n\nCOPY --from=build /app/server server\n\nENV NODE_ENV=production\n\nCMD [\"./server\"]\n\nEXPOSE 3000\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I monorepo in elysiajs?\n\nAssistant: To monorepo in elysiajs, here's what you do:\nIf you are using Elysia with Monorepo, you may need to include dependent `packages`.\n\nIf you are using Turborepo, you may place a Dockerfile inside an your apps directory like **apps/server/Dockerfile**. This may apply to other monorepo manager such as Lerna, etc.\n\nAssume that our monorepo are using Turborepo with structure as follows:\n\n- apps\n  - server\n    - **Dockerfile (place a Dockerfile here)**\n- packages\n  - config\n\nThen we can build our Dockerfile on monorepo root (not app root):\n\n```bash\ndocker build -t elysia-mono .\n```\n\nWith Dockerfile as follows:\n\n```dockerfile\nFROM oven/bun:1 AS build\n\nWORKDIR /app\n\n# Cache packages\nCOPY package.json package.json\nCOPY bun.lock bun.lock\n\nCOPY /apps/server/package.json ./apps/server/package.json\nCOPY /packages/config/package.json ./packages/config/package.json\n\nRUN bun install\n\nCOPY /apps/server ./apps/server\nCOPY /packages/config ./packages/config\n\nENV NODE_ENV=production\n\nRUN bun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n\nFROM gcr.io/distroless/base\n\nWORKDIR /app\n\nCOPY --from=build /app/server server\n\nENV NODE_ENV=production\n\nCMD [\"./server\"]\n\nEXPOSE 3000\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I railway in elysiajs?\n\nAssistant: To railway in elysiajs, here's what you do:\n[Railway](https://railway.app/) is one of the popular deployment platform.\n\nRailway assign **random port** to expose for each deployment that can be access via `PORT` environment variable.\n\nWe need to modify our Elysia server to accept `PORT` environment to comply with Railway port.\nInstead of a fixed port, we may use `process.env.PORT` and provide a fallback on development instead.\n\n```ts\nnew Elysia()\n\\t.listen(3000)\n\\t.listen(process.env.PORT ?? 3000)\n```\n\nThis should allows Elysia to intercept port provided by Railway.\n\nTIP\n\nElysia assign hostname to `0.0.0.0` automatically, which works with Railway..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Deploy to production in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Compile to binary command**:\n\n```yaml\nbun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n```\n\nThis snippet shows you how to compile to binary command, which is an important aspect of deploy to production.\n\n**Start server binary**:\n\n```yaml\n./server\n```\n\nThis snippet shows you how to start server binary, which is an important aspect of deploy to production.\n\n**Minify command**:\n\n```yaml\nbun build \\\n\\t--compile \\\n\\t--minify \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n```\n\nThis snippet shows you how to minify command, which is an important aspect of deploy to production.\n\n**Set permission for binary**:\n\n```yaml\nchmod +x ./server\n\n./server\n```\n\nThis snippet shows you how to set permission for binary, which is an important aspect of deploy to production.\n\n**Compile to JavaScript command**:\n\n```yaml\nbun build \\\n\\t--compile \\ // [!code --]\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile ./dist/index.js \\\n\\t./src/index.ts\n```\n\nThis snippet shows you how to compile to javascript command, which is an important aspect of deploy to production.\n\n**Run JavaScript file**:\n\n```yaml\nNODE_ENV=production bun ./dist/index.js\n```\n\nThis snippet shows you how to run javascript file, which is an important aspect of deploy to production.\n\n**Dockerfile example**:\n\n```yaml\nFROM oven/bun AS build\n\nWORKDIR /app\n\n# Cache packages installation\nCOPY package.json package.json\nCOPY bun.lock bun.lock\n\nRUN bun install\n\nCOPY ./src ./src\n\nENV NODE_ENV=production\n\nRUN bun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n\nFROM gcr.io/distroless/base\n\nWORKDIR /app\n\nCOPY --from=build /app/server server\n\nENV NODE_ENV=production\n\nCMD [\"./server\"]\n\nEXPOSE 3000\n```\n\nThis snippet shows you how to dockerfile example, which is an important aspect of deploy to production.\n\n**Monorepo Dockerfile example**:\n\n```yaml\nFROM oven/bun:1 AS build\n\nWORKDIR /app\n\n# Cache packages\nCOPY package.json package.json\nCOPY bun.lock bun.lock\n\nCOPY /apps/server/package.json ./apps/server/package.json\nCOPY /packages/config/package.json ./packages/config/package.json\n\nRUN bun install\n\nCOPY /apps/server ./apps/server\nCOPY /packages/config ./packages/config\n\nENV NODE_ENV=production\n\nRUN bun build \\\n\\t--compile \\\n\\t--minify-whitespace \\\n\\t--minify-syntax \\\n\\t--target bun \\\n\\t--outfile server \\\n\\t./src/index.ts\n\nFROM gcr.io/distroless/base\n\nWORKDIR /app\n\nCOPY --from=build /app/server server\n\nENV NODE_ENV=production\n\nCMD [\"./server\"]\n\nEXPOSE 3000\n```\n\nThis snippet shows you how to monorepo dockerfile example, which is an important aspect of deploy to production.\n\n**Railway server modification**:\n\n```yaml\nnew Elysia()\n\\t.listen(3000)\n\\t.listen(process.env.PORT ?? 3000)\n```\n\nThis snippet shows you how to railway server modification, which is an important aspect of deploy to production.\n\n", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "code_examples", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Deploy to production in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nCompiling to binary can significantly reduce memory usage by 2-3x compared to the development environment.\n\nIf using OpenTelemetry, avoid using the --minify flag to maintain function names for tracing.\n\nAlways compile to binary on Docker to reduce base image overhead.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/patterns/deployment", "title": "Deploy to production", "description": "This page is a guide on how to deploy Elysia to production.", "has_code_examples": true, "has_best_practices": true, "section_count": 8, "timestamp": "2025-03-01 03:28:45", "type": "best_practices", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "title": "Production Deployment - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:description": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogTitle": "Production Deployment - ElysiaJS", "generator": "VitePress v1.6.3", "og:title": "Production Deployment - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "This page", "ogDescription": "Elysia can be configured by passing an object to the constructor. We can configure Elysia behavior by passing an object to the constructor.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "og:image:height": "1080", "scrapeId": "dfeb8a68-12bf-419c-b12f-ca20f098e2e2", "sourceURL": "https://elysiajs.com/patterns/deployment", "url": "https://elysiajs.com/patterns/deployment", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Integrate tRPC server to Bun with Elysia is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Integrate tRPC server to Bun with Elysia in elysiajs.\n\n# Integrate tRPC server to Bun with Elysia\n\nThis documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.Here's a quick rundown of what this is about:\n\n## Elysia\n\nElysia is a web framework optimized for Bun, inspired by many frameworks including tRPC. Elysia supports end-to-end type safety by default, but unlike tRPC, Elysia uses Express-like syntax that many already know, removing the learning curve of tRPC.\n\nWith Bun being the runtime for Elysia, the speed and throughput for Elysia server are fast and even outperforming Express up to 21x and Fastify up to 12x on mirroring JSON body (see benchmark).\n\nThe ability to combine the existing tRPC server into Elysia has been one of the very first objectives of Elysia since its start.\n\nThe reason why you might want to switch from tRPC to Bun:\n- Significantly faster, even outperform many popular web frameworks running in Nodejs without changing a single piece of code.\n- Extend tRPC with RESTful or GraphQL, both co-existing in the same server.\n- Elysia has end-to-end type-safety like tRPC but with almost no-learning curve for most developer.\n- Using Elysia is the great first start experimenting/investing in Bun runtime.\n\n## Creating Elysia Server\n\nTo get started, let's create a new Elysia server, make sure you have Bun installed first, then run this command to scaffold Elysia project.\n\n```\nbun create elysia elysia-trpc && cd elysia-trpc && bun add elysia\n```\n\nTIP\n\nSometimes Bun doesn't resolve the latest field correctly, so we are using `bun add elysia` to specify the latest version of Elysia instead.\n\nThis should create a folder name **\"elysia-trpc\"** with Elysia pre-configured.\n\nLet's start a development server by running the dev command:\n\n```\nbun run dev\n```\n\nThis command should start a development server on port :3000.\n\n## Elysia tRPC plugin\n\nBuilding on top of the tRPC Web Standard adapter, Elysia has a plugin for integrating the existing tRPC server into Elysia.\n\n```\nbun add @trpc/server zod @elysiajs/trpc @elysiajs/cors\n```\n\nSuppose that this is an existing tRPC server:\n\n```typescript\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\n\nimport { z } from 'zod'\n\nconst t = initTRPC.create()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => input),\n})\n\nexport type Router = typeof router\n```\n\nNormally all we need to use tRPC is to export the type of router, but to integrate tRPC with Elysia, we need to export the instance of router too.\n\nThen in the Elysia server, we import the router and register tRPC router with `.use(trpc)`:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router)\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nAnd that's it! 🎉 That's all it takes to integrate tRPC with Elysia, making tRPC run on Bun.\n\n## tRPC config and Context\n\nTo create context, `trpc` can accept 2nd parameters that can configure tRPC as same as `createHTTPServer`.\n\nFor example, adding `createContext` into tRPC server:\n\n```typescript\n// trpc.ts\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\nimport type { FetchCreateContextFnOptions } from '@trpc/server/adapters/fetch'\nimport { z } from 'zod'\n\nexport const createContext = async (opts: FetchCreateContextFnOptions) => {\n    return {\n        name: 'elysia'\n    }\n}\n\nconst t = initTRPC.context<Awaited<ReturnType<typeof createContext>>>().create()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => input),\n})\n\nexport type Router = typeof router\n```\n\nAnd in the Elysia server:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router, {\n            createContext\n        })\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nAnd we can specify a custom endpoint of tRPC by using `endpoint`:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router, {\n            createContext,\n            endpoint: '/v2/trpc'\n        })\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\n## Subscription\n\nBy default, tRPC uses WebSocketServer to support `subscription`, but unfortunately as Bun 0.5.4 doesn't support WebSocketServer yet, we can't directly use WebSocket Server.\n\nHowever, Bun does support Web Socket using `Bun.serve`, and with Elysia tRPC plugin has wired all the usage of tRPC's Web Socket into `Bun.serve`, you can directly use tRPC's `subscription` with Elysia Web Socket plugin directly:\n\nStart by installing the Web Socket plugin:\n\n```\nbun add @elysiajs/websocket\n```\n\nThen inside tRPC server:\n\n```typescript\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\nimport type { FetchCreateContextFnOptions } from '@trpc/server/adapters/fetch'\n\nimport { EventEmitter } from 'stream'\n\nimport { zod } from 'zod'\n\nexport const createContext = async (opts: FetchCreateContextFnOptions) => {\n    return {\n        name: 'elysia'\n    }\n}\n\nconst t = initTRPC.context<Awaited<ReturnType<typeof createContext>>>().create()\nconst ee = new EventEmitter()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => {\n        ee.emit('listen', input)\n\n        return input\n    }),\n    listen: t.procedure.subscription(() =>\n        observable<string>((emit) => {\n            ee.on('listen', (input) => {\n                emit.next(input)\n            })\n        })\n    )\n})\n\nexport type Router = typeof router\n```\n\nAnd then we register:\n\n```typescript\nimport { Elysia, ws } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .use(ws())\n    .get('/', () => 'Hello Elysia')\n    .trpc(router, {\n        createContext\n    })\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\n## Bonus: Type-Safe Elysia with Eden\n\nAs Elysia is inspired by tRPC, Elysia also supports end-to-end type-safety like tRPC by default using **\"Eden\"**.\n\nThis means that you can use Express-like syntax to create RESTful API with full-type support on a client like tRPC.\n\nTo get started, let's export the app type.\n\n```typescript\nimport { Elysia, ws } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .use(ws())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router, {\n            createContext\n        })\n    )\n    .listen(3000)\n\nexport type App = typeof app\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nAnd on the client side:\n\n```\nbun add @elysia/eden && bun add -d elysia\n```\n\nAnd in the code:\n\n```typescript\nimport { edenTreaty } from '@elysiajs/eden'\nimport type { App } from '../server'\n\n// This now has all type inference from the server\nconst app = edenTreaty<App>('http://localhost:3000')\n\n// data will have a value of 'Hello Elysia' and has a type of 'string'\nconst data = await app.index.get()\n```\n\n## Bonus: Extra tip for Elysia\n\nAn additional thing you can do with Elysia is not only that it has support for tRPC and end-to-end type-safety, but also has a variety of support for many essential plugins configured especially for Bun.\n\nFor example, you can generate documentation with Swagger only in 1 line using [Swagger plugin](https://elysiajs.com/plugins/swagger.html).\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .setModel({\n        sign: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .get('/', () => 'Hello Elysia')\n    .post('/typed-body', ({ body }) => body, {\n        schema: {\n            body: 'sign',\n            response: 'sign'\n        }\n    })\n    .listen(3000)\n\nexport type App = typeof app\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nOr when you want to use [GraphQL Apollo](https://elysiajs.com/plugins/graphql-apollo.html) on Bun.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { apollo, gql } from '@elysiajs/apollo'\n\nconst app = new Elysia()\n    .use(\n        apollo({\n            typeDefs: gql` // [!code ++]\n                type Book { // [!code ++]\n                    title: String // [!code ++]\n                    author: String // [!code ++]\n                } // [!code ++]\n                type Query { // [!code ++]\n                    books: [Book] // [!code ++]\n                } // [!code ++]\n            `,\n            resolvers: {\n                Query: {\n                    books: () => {\n                        return [\n                            {\n                                title: 'Elysia',\n                                author: 'saltyAom'\n                            }\n                        ]\n                    }\n                }\n            }\n        })\n    )\n    .get('/', () => 'Hello Elysia')\n    .listen(3000)\n\nexport type App = typeof app\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nOr supporting OAuth 2.0 with a [community OAuth plugin](https://github.com/bogeychan/elysia-oauth2).\n\nNonetheless, Elysia is a great place to start learning/using Bun and the ecosystem around Bun.\n\nIf you like to learn more about Elysia, [Elysia documentation](https://elysiajs.com/) is a great start to start exploring the concept and patterns, and if you are stuck or need help, feel free to reach out in [Elysia Discord](https://discord.gg/eaFJ2KDJck).\n\nThe repository for all of the code is available at [https://github.com/saltyaom/elysia-trpc-demo](https://github.com/saltyaom/elysia-trpc-demo), feels free to experiment and reach out.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "overview", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia in elysiajs?\n\nAssistant: To elysia in elysiajs, here's what you do:\nElysia is a web framework optimized for Bun, inspired by many frameworks including tRPC. Elysia supports end-to-end type safety by default, but unlike tRPC, Elysia uses Express-like syntax that many already know, removing the learning curve of tRPC.\n\nWith Bun being the runtime for Elysia, the speed and throughput for Elysia server are fast and even outperforming Express up to 21x and Fastify up to 12x on mirroring JSON body (see benchmark).\n\nThe ability to combine the existing tRPC server into Elysia has been one of the very first objectives of Elysia since its start.\n\nThe reason why you might want to switch from tRPC to Bun:\n- Significantly faster, even outperform many popular web frameworks running in Nodejs without changing a single piece of code.\n- Extend tRPC with RESTful or GraphQL, both co-existing in the same server.\n- Elysia has end-to-end type-safety like tRPC but with almost no-learning curve for most developer.\n- Using Elysia is the great first start experimenting/investing in Bun runtime..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I creating elysia server in elysiajs?\n\nAssistant: To creating elysia server in elysiajs, here's what you do:\nTo get started, let's create a new Elysia server, make sure you have Bun installed first, then run this command to scaffold Elysia project.\n\n```\nbun create elysia elysia-trpc && cd elysia-trpc && bun add elysia\n```\n\nTIP\n\nSometimes Bun doesn't resolve the latest field correctly, so we are using `bun add elysia` to specify the latest version of Elysia instead.\n\nThis should create a folder name **\"elysia-trpc\"** with Elysia pre-configured.\n\nLet's start a development server by running the dev command:\n\n```\nbun run dev\n```\n\nThis command should start a development server on port :3000..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia trpc plugin in elysiajs?\n\nAssistant: To elysia trpc plugin in elysiajs, here's what you do:\nBuilding on top of the tRPC Web Standard adapter, Elysia has a plugin for integrating the existing tRPC server into Elysia.\n\n```\nbun add @trpc/server zod @elysiajs/trpc @elysiajs/cors\n```\n\nSuppose that this is an existing tRPC server:\n\n```typescript\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\n\nimport { z } from 'zod'\n\nconst t = initTRPC.create()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => input),\n})\n\nexport type Router = typeof router\n```\n\nNormally all we need to use tRPC is to export the type of router, but to integrate tRPC with Elysia, we need to export the instance of router too.\n\nThen in the Elysia server, we import the router and register tRPC router with `.use(trpc)`:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router)\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nAnd that's it! 🎉 That's all it takes to integrate tRPC with Elysia, making tRPC run on Bun..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I trpc config and context in elysiajs?\n\nAssistant: To trpc config and context in elysiajs, here's what you do:\nTo create context, `trpc` can accept 2nd parameters that can configure tRPC as same as `createHTTPServer`.\n\nFor example, adding `createContext` into tRPC server:\n\n```typescript\n// trpc.ts\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\nimport type { FetchCreateContextFnOptions } from '@trpc/server/adapters/fetch'\nimport { z } from 'zod'\n\nexport const createContext = async (opts: FetchCreateContextFnOptions) => {\n    return {\n        name: 'elysia'\n    }\n}\n\nconst t = initTRPC.context<Awaited<ReturnType<typeof createContext>>>().create()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => input),\n})\n\nexport type Router = typeof router\n```\n\nAnd in the Elysia server:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router, {\n            createContext\n        })\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nAnd we can specify a custom endpoint of tRPC by using `endpoint`:\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router, {\n            createContext,\n            endpoint: '/v2/trpc'\n        })\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I subscription in elysiajs?\n\nAssistant: To subscription in elysiajs, here's what you do:\nBy default, tRPC uses WebSocketServer to support `subscription`, but unfortunately as Bun 0.5.4 doesn't support WebSocketServer yet, we can't directly use WebSocket Server.\n\nHowever, Bun does support Web Socket using `Bun.serve`, and with Elysia tRPC plugin has wired all the usage of tRPC's Web Socket into `Bun.serve`, you can directly use tRPC's `subscription` with Elysia Web Socket plugin directly:\n\nStart by installing the Web Socket plugin:\n\n```\nbun add @elysiajs/websocket\n```\n\nThen inside tRPC server:\n\n```typescript\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\nimport type { FetchCreateContextFnOptions } from '@trpc/server/adapters/fetch'\n\nimport { EventEmitter } from 'stream'\n\nimport { zod } from 'zod'\n\nexport const createContext = async (opts: FetchCreateContextFnOptions) => {\n    return {\n        name: 'elysia'\n    }\n}\n\nconst t = initTRPC.context<Awaited<ReturnType<typeof createContext>>>().create()\nconst ee = new EventEmitter()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => {\n        ee.emit('listen', input)\n\n        return input\n    }),\n    listen: t.procedure.subscription(() =>\n        observable<string>((emit) => {\n            ee.on('listen', (input) => {\n                emit.next(input)\n            })\n        })\n    )\n})\n\nexport type Router = typeof router\n```\n\nAnd then we register:\n\n```typescript\nimport { Elysia, ws } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .use(ws())\n    .get('/', () => 'Hello Elysia')\n    .trpc(router, {\n        createContext\n    })\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bonus: type-safe elysia with eden in elysiajs?\n\nAssistant: To bonus: type-safe elysia with eden in elysiajs, here's what you do:\nAs Elysia is inspired by tRPC, Elysia also supports end-to-end type-safety like tRPC by default using **\"Eden\"**.\n\nThis means that you can use Express-like syntax to create RESTful API with full-type support on a client like tRPC.\n\nTo get started, let's export the app type.\n\n```typescript\nimport { Elysia, ws } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router, createContext } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .use(ws())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router, {\n            createContext\n        })\n    )\n    .listen(3000)\n\nexport type App = typeof app\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nAnd on the client side:\n\n```\nbun add @elysia/eden && bun add -d elysia\n```\n\nAnd in the code:\n\n```typescript\nimport { edenTreaty } from '@elysiajs/eden'\nimport type { App } from '../server'\n\n// This now has all type inference from the server\nconst app = edenTreaty<App>('http://localhost:3000')\n\n// data will have a value of 'Hello Elysia' and has a type of 'string'\nconst data = await app.index.get()\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I bonus: extra tip for elysia in elysiajs?\n\nAssistant: To bonus: extra tip for elysia in elysiajs, here's what you do:\nAn additional thing you can do with Elysia is not only that it has support for tRPC and end-to-end type-safety, but also has a variety of support for many essential plugins configured especially for Bun.\n\nFor example, you can generate documentation with Swagger only in 1 line using [Swagger plugin](https://elysiajs.com/plugins/swagger.html).\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    .use(swagger())\n    .setModel({\n        sign: t.Object({\n            username: t.String(),\n            password: t.String()\n        })\n    })\n    .get('/', () => 'Hello Elysia')\n    .post('/typed-body', ({ body }) => body, {\n        schema: {\n            body: 'sign',\n            response: 'sign'\n        }\n    })\n    .listen(3000)\n\nexport type App = typeof app\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nOr when you want to use [GraphQL Apollo](https://elysiajs.com/plugins/graphql-apollo.html) on Bun.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { apollo, gql } from '@elysiajs/apollo'\n\nconst app = new Elysia()\n    .use(\n        apollo({\n            typeDefs: gql` // [!code ++]\n                type Book { // [!code ++]\n                    title: String // [!code ++]\n                    author: String // [!code ++]\n                } // [!code ++]\n                type Query { // [!code ++]\n                    books: [Book] // [!code ++]\n                } // [!code ++]\n            `,\n            resolvers: {\n                Query: {\n                    books: () => {\n                        return [\n                            {\n                                title: 'Elysia',\n                                author: 'saltyAom'\n                            }\n                        ]\n                    }\n                }\n            }\n        })\n    )\n    .get('/', () => 'Hello Elysia')\n    .listen(3000)\n\nexport type App = typeof app\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nOr supporting OAuth 2.0 with a [community OAuth plugin](https://github.com/bogeychan/elysia-oauth2).\n\nNonetheless, Elysia is a great place to start learning/using Bun and the ecosystem around Bun.\n\nIf you like to learn more about Elysia, [Elysia documentation](https://elysiajs.com/) is a great start to start exploring the concept and patterns, and if you are stuck or need help, feel free to reach out in [Elysia Discord](https://discord.gg/eaFJ2KDJck).\n\nThe repository for all of the code is available at [https://github.com/saltyaom/elysia-trpc-demo](https://github.com/saltyaom/elysia-trpc-demo), feels free to experiment and reach out..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "section_detail", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Integrate tRPC server to Bun with Elysia in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Creating Elysia Server**:\n\n```yaml\nbun create elysia elysia-trpc && cd elysia-trpc && bun add elysia\n```\n\nThis snippet shows you how to creating elysia server, which is an important aspect of integrate trpc server to bun with elysia.\n\n**Starting Development Server**:\n\n```yaml\nbun run dev\n```\n\nThis snippet shows you how to starting development server, which is an important aspect of integrate trpc server to bun with elysia.\n\n**Installing Elysia tRPC Plugin**:\n\n```yaml\nbun add @trpc/server zod @elysiajs/trpc @elysiajs/cors\n```\n\nThis snippet shows you how to installing elysia trpc plugin, which is an important aspect of integrate trpc server to bun with elysia.\n\n**Existing tRPC Server Example**:\n\n```yaml\nimport { initTRPC } from '@trpc/server'\nimport { observable } from '@trpc/server/observable'\n\nimport { z } from 'zod'\n\nconst t = initTRPC.create()\n\nexport const router = t.router({\n    mirror: t.procedure.input(z.string()).query(({ input }) => input),\n})\n\nexport type Router = typeof router\n```\n\nThis snippet shows you how to existing trpc server example, which is an important aspect of integrate trpc server to bun with elysia.\n\n**Elysia Server with tRPC**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport { trpc } from '@elysiajs/trpc'\n\nimport { router } from './trpc'\n\nconst app = new Elysia()\n    .use(cors())\n    .get('/', () => 'Hello Elysia')\n    .use(\n        trpc(router)\n    )\n    .listen(3000)\n\nconsole.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)\n```\n\nThis snippet shows you how to elysia server with trpc, which is an important aspect of integrate trpc server to bun with elysia.\n\n", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "code_examples", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Integrate tRPC server to Bun with Elysia in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nSometimes Bun doesn't resolve the latest field correctly, so we are using `bun add elysia` to specify the latest version of Elysia instead.\n\nElysia is excellent when you need both tRPC and REST API, as they can co-exist together in one server.\n\nElysia is a good start when you want end-to-end type-safety like tRPC but need to support more standard patterns like REST, and still have to support tRPC or need to migrate from one.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "title": "Integrate tRPC server to Bun with Elysia", "description": "This documentation covers how to integrate tRPC with the Elysia web framework optimized for Bun, including setup, configuration, and best practices.", "has_code_examples": true, "has_best_practices": true, "section_count": 7, "timestamp": "2025-03-01 03:29:36", "type": "best_practices", "page_metadata": {"title": "Integrate tRPC server to Bun with Elysia | ElysiaJS", "ogImage": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "language": "en-US", "generator": "VitePress v1.6.3", "og:description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/blog/integrate-trpc-with-elysia/elysia-trpc.webp", "ogDescription": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:height": "1080", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Integrate tRPC server to Bun with Elysia", "ogTitle": "Integrate tRPC server to Bun with Elysia", "description": "Learn how to integrate existing tRPC to Elysia and Bun with Elysia tRPC plugin and more about Eden end-to-end type-safety for Elysia.", "og:image:width": "1920", "scrapeId": "a6beebc7-e4d8-42d2-bf26-0d11940cf5cb", "sourceURL": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "url": "https://elysiajs.com/blog/integrate-trpc-with-elysia", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Treaty Parameters is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Treaty Parameters in elysiajs.\n\n# Eden Treaty Parameters\n\nThis page covers the parameters used in Eden Treaty methods for sending data to the server, including body, query, headers, and fetch options.Here's a quick rundown of what this is about:\n\n## Parameters\n\nWe need to send a payload to server eventually.\n\nTo handle this, Eden Treaty's methods accept 2 parameters to send data to server.\n\nBoth parameters is type safe and will be guided by TypeScript automatically:\n\n1. body\n2. additional parameters\n   - query\n   - headers\n   - fetch\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/parameters", "title": "Eden Treaty Parameters", "description": "This page covers the parameters used in Eden Treaty methods for sending data to the server, including body, query, headers, and fetch options.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:29:48", "type": "overview", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Eden Treaty Parameters - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A VitePress site", "og:image:width": "1920", "generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "title": "Eden Treaty Parameters - ElysiaJS | ElysiaJS", "og:title": "Eden Treaty Parameters - ElysiaJS", "scrapeId": "b40d4b89-428d-4d6c-b97b-161aebfc4f76", "sourceURL": "https://elysiajs.com/eden/treaty/parameters", "url": "https://elysiajs.com/eden/treaty/parameters", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I parameters in elysiajs?\n\nAssistant: To parameters in elysiajs, here's what you do:\nWe need to send a payload to server eventually.\n\nTo handle this, Eden Treaty's methods accept 2 parameters to send data to server.\n\nBoth parameters is type safe and will be guided by TypeScript automatically:\n\n1. body\n2. additional parameters\n   - query\n   - headers\n   - fetch.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/parameters", "title": "Eden Treaty Parameters", "description": "This page covers the parameters used in Eden Treaty methods for sending data to the server, including body, query, headers, and fetch options.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:29:48", "type": "section_detail", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Eden Treaty Parameters - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A VitePress site", "og:image:width": "1920", "generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "title": "Eden Treaty Parameters - ElysiaJS | ElysiaJS", "og:title": "Eden Treaty Parameters - ElysiaJS", "scrapeId": "b40d4b89-428d-4d6c-b97b-161aebfc4f76", "sourceURL": "https://elysiajs.com/eden/treaty/parameters", "url": "https://elysiajs.com/eden/treaty/parameters", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Treaty Parameters in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic POST Request with Body**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .post('/user', ({ body }) => body, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\n// ✅ works\napi.user.post({\n    name: 'Elysia'\n})\n\n// ✅ also works\napi.user.post({\n    name: 'Elysia'\n}, {\n    // This is optional as not specified in schema\n    headers: {\n        authorization: 'Bearer 12345'\n    },\n    query: {\n        id: 2\n    }\n})\n```\n\nThis snippet shows you how to basic post request with body, which is an important aspect of eden treaty parameters.\n\n**GET Request with Additional Parameters**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/hello', () => 'hi')\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\n// ✅ works\napi.hello.get({\n    // This is optional as not specified in schema\n    headers: {\n        hello: 'world'\n    }\n})\n```\n\nThis snippet shows you how to get request with additional parameters, which is an important aspect of eden treaty parameters.\n\n**Empty Body with Required Query**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .post('/user', () => 'hi', {\n        query: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\napi.user.post(null, {\n    query: {\n        name: 'Ely'\n    }\n})\n```\n\nThis snippet shows you how to empty body with required query, which is an important aspect of eden treaty parameters.\n\n**Fetch Parameters Example**:\n\n```yaml\nimport { Elysia, t } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/hello', () => 'hi')\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\nconst controller = new AbortController()\n\nconst cancelRequest = setTimeout(() => {\n    controller.abort()\n}, 5000)\n\nawait api.hello.get({\n    fetch: {\n        signal: controller.signal\n    }\n})\n\nclearTimeout(cancelRequest)\n```\n\nThis snippet shows you how to fetch parameters example, which is an important aspect of eden treaty parameters.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/parameters", "title": "Eden Treaty Parameters", "description": "This page covers the parameters used in Eden Treaty methods for sending data to the server, including body, query, headers, and fetch options.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:29:48", "type": "code_examples", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Eden Treaty Parameters - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A VitePress site", "og:image:width": "1920", "generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "title": "Eden Treaty Parameters - ElysiaJS | ElysiaJS", "og:title": "Eden Treaty Parameters - ElysiaJS", "scrapeId": "b40d4b89-428d-4d6c-b97b-161aebfc4f76", "sourceURL": "https://elysiajs.com/eden/treaty/parameters", "url": "https://elysiajs.com/eden/treaty/parameters", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Treaty Parameters in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf the method doesn't accept body, omit the body parameter and use only additional parameters.\n\nFor GET or HEAD methods, use additional parameters like query, headers, and fetch.\n\nWhen body is optional, pass it as null or undefined if query or headers are required.\n\nUse the fetch parameter to add valid Fetch API options, such as abort signals for request cancellation.\n\nTo upload files, use File, File[], FileList, or Blob and ensure the content-type is multipart/form-data.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/parameters", "title": "Eden Treaty Parameters", "description": "This page covers the parameters used in Eden Treaty methods for sending data to the server, including body, query, headers, and fetch options.", "has_code_examples": true, "has_best_practices": true, "section_count": 1, "timestamp": "2025-03-01 03:29:48", "type": "best_practices", "page_metadata": {"favicon": "https://elysiajs.com/assets/elysia.png", "ogTitle": "Eden Treaty Parameters - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "description": "A VitePress site", "og:image:width": "1920", "generator": "VitePress v1.6.3", "language": "en-US", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "title": "Eden Treaty Parameters - ElysiaJS | ElysiaJS", "og:title": "Eden Treaty Parameters - ElysiaJS", "scrapeId": "b40d4b89-428d-4d6c-b97b-161aebfc4f76", "sourceURL": "https://elysiajs.com/eden/treaty/parameters", "url": "https://elysiajs.com/eden/treaty/parameters", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Treaty Configuration is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Treaty Configuration in elysiajs.\n\n# Eden Treaty Configuration\n\nThis page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.Here's a quick rundown of what this is about:\n\n## Config\n\nEden Treaty accepts 2 parameters:\n\n- **urlOrInstance** - URL endpoint or Elysia instance\n- **options** (optional) - Customize fetch behavior\n\n## urlOrInstance\n\nAccept either URL endpoint as string or a literal Elysia instance.\n\nEden will change the behavior based on type as follows:\n\n### URL Endpoint (string)\nIf URL endpoint is passed, Eden Treaty will use `fetch` or `config.fetcher` to create a network request to an Elysia instance.\n\n```typescript\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst api = treaty<App>('localhost:3000')\n```\n\nYou may or may not specified a protocol for URL endpoint.\n\nElysia will appends the endpoints automatically as follows:\n\n1. If protocol is specified, use the URL directly\n2. If the URL is localhost and ENV is not production, use http\n3. Otherwise use https\n\nThis also apply to Web Socket as well for determining between **ws://** or **wss://**.\n\n### Elysia Instance\nIf Elysia instance is passed, Eden Treaty will create a `Request` class and pass to `Elysia.handle` directly without creating a network request.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/hi', 'Hi Elysia')\n    .listen(3000)\n\nconst api = treaty(app)\n```\n\nIf an instance is passed, generic is not needed to be pass as Eden Treaty can infers the type from a parameter directly.\n\nThis patterns is recommended for performing unit tests, or creating a type-safe reverse proxy server or micro-services.\n\n## Options\n\n2nd optional parameters for Eden Treaty to customize fetch behavior, accepting parameters as follows:\n\n- [fetch](https://elysiajs.com/eden/treaty/config#fetch) - add default parameters to fetch initialization (RequestInit)\n- [headers](https://elysiajs.com/eden/treaty/config#headers) - define default headers\n- [fetcher](https://elysiajs.com/eden/treaty/config#fetcher) - custom fetch function eg. Axios, unfetch\n- [onRequest](https://elysiajs.com/eden/treaty/config#onrequest) - Intercept and modify fetch request before firing\n- [onResponse](https://elysiajs.com/eden/treaty/config#onresponse) - Intercept and modify fetch's response.\n\n## Fetch\n\nDefault parameters append to 2nd parameters of fetch extends type of **Fetch.RequestInit**.\n\n```typescript\nexport type App = typeof app\nimport { treaty } from '@elysiajs/eden'\n// ---cut---\ntreaty<App>('localhost:3000', {\n    fetch: {\n        credentials: 'include'\n    }\n})\n```\n\nAll parameters that passed to fetch, will be passed to fetcher, which is an equivalent to:\n\n```typescript\nfetch('http://localhost:3000', {\n    credentials: 'include'\n})\n```\n\n## Headers\n\nProvide an additional default headers to fetch, a shorthand of `options.fetch.headers`.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\nAll parameters that passed to fetch, will be passed to fetcher, which is an equivalent to:\n\n```typescript\nfetch('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\nheaders may accepts the following as parameters:\n\n- Object\n- Function\n\n### Headers Object\nIf object is passed, then it will be passed to fetch directly\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\n### Function\nYou may specify a headers as a function to return custom headers based on condition\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers(path, options) {\n        if(path.startsWith('user'))\n            return {\n                authorization: 'Bearer 12345'\n            }\n    }\n})\n```\n\nYou may return object to append its value to fetch headers.\n\nheaders function accepts 2 parameters:\n\n- path `string` - path which will be sent to parameter\n  - note: hostname will **exclude** eg. (/user/griseo)\n- options `RequestInit`: Parameters that passed through 2nd parameter of fetch\n\n### Array\nYou may define a headers function as an array if multiple conditions are need.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers: [\n      (path, options) => {\n        if(path.startsWith('user'))\n            return {\n                authorization: 'Bearer 12345'\n            }\n        }\n    ]\n})\n```\n\nEden Treaty will **run all functions** even if the value is already returned.\n\n## Headers Priority\n\nEden Treaty will prioritize the order headers if duplicated as follows:\n\n1. Inline method - Passed in method function directly\n2. headers - Passed in `config.headers`\n   - If `config.headers` is array, parameters that come after will be prioritize\n3. fetch - Passed in `config.fetch.headers`\n\nFor example, for the following example:\n\n```typescript\nconst api = treaty<App>('localhost:3000', {\n    headers: {\n        authorization: 'Bearer Aponia'\n    }\n})\n\napi.profile.get({\n    headers: {\n        authorization: 'Bearer Griseo'\n    }\n})\n```\n\nThis will be results in:\n\n```typescript\nfetch('http://localhost:3000', {\n    headers: {\n        authorization: 'Bearer Griseo'\n    }\n})\n```\n\nIf inline function doesn't specified headers, then the result will be \" **Bearer Aponia**\" instead.\n\n## Fetcher\n\nProvide a custom fetcher function instead of using an environment's default fetch.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    fetcher(url, options) {\n        return fetch(url, options)\n    }\n})\n```\n\nIt's recommended to replace fetch if you want to use other client other than fetch, eg. Axios, unfetch.\n\n## OnRequest\n\nIntercept and modify fetch request before firing.\n\nYou may return object to append the value to **RequestInit**.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onRequest(path, options) {\n        if(path.startsWith('user'))\n            return {\n                headers: {\n                    authorization: 'Bearer 12345'\n                }\n            }\n    }\n})\n```\n\nIf value is returned, Eden Treaty will perform a **shallow merge** for returned value and `value.headers`.\n\n**onRequest** accepts 2 parameters:\n\n- path `string` - path which will be sent to parameter\n  - note: hostname will **exclude** eg. (/user/griseo)\n- options `RequestInit`: Parameters that passed through 2nd parameter of fetch\n\n### Array\nYou may define an onRequest function as an array if multiples conditions are need.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onRequest: [\n      (path, options) => {\n        if(path.startsWith('user'))\n            return {\n                headers: {\n                    authorization: 'Bearer 12345'\n                }\n            }\n        }\n    ]\n})\n```\n\nEden Treaty will **run all functions** even if the value is already returned.\n\n## onResponse\n\nIntercept and modify fetch's response or return a new value.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onResponse(response) {\n        if(response.ok)\n            return response.json()\n    }\n})\n```\n\n**onRequest** accepts 1 parameter:\n\n- response `Response` - Web Standard Response normally returned from `fetch`\n\n### Array\nYou may define an onResponse function as an array if multiple conditions are need.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onResponse: [\n        (response) => {\n            if(response.ok)\n                return response.json()\n        }\n    ]\n})\n```\n\nUnlike [headers](https://elysiajs.com/eden/treaty/config#headers) and [onRequest](https://elysiajs.com/eden/treaty/config#onrequest), Eden Treaty will loop through functions until a returned value is found or error thrown, the returned value will be use as a new response.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "overview", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I config in elysiajs?\n\nAssistant: To config in elysiajs, here's what you do:\nEden Treaty accepts 2 parameters:\n\n- **urlOrInstance** - URL endpoint or Elysia instance\n- **options** (optional) - Customize fetch behavior.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I urlorinstance in elysiajs?\n\nAssistant: To urlorinstance in elysiajs, here's what you do:\nAccept either URL endpoint as string or a literal Elysia instance.\n\nEden will change the behavior based on type as follows:\n\n### URL Endpoint (string)\nIf URL endpoint is passed, Eden Treaty will use `fetch` or `config.fetcher` to create a network request to an Elysia instance.\n\n```typescript\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst api = treaty<App>('localhost:3000')\n```\n\nYou may or may not specified a protocol for URL endpoint.\n\nElysia will appends the endpoints automatically as follows:\n\n1. If protocol is specified, use the URL directly\n2. If the URL is localhost and ENV is not production, use http\n3. Otherwise use https\n\nThis also apply to Web Socket as well for determining between **ws://** or **wss://**.\n\n### Elysia Instance\nIf Elysia instance is passed, Eden Treaty will create a `Request` class and pass to `Elysia.handle` directly without creating a network request.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/hi', 'Hi Elysia')\n    .listen(3000)\n\nconst api = treaty(app)\n```\n\nIf an instance is passed, generic is not needed to be pass as Eden Treaty can infers the type from a parameter directly.\n\nThis patterns is recommended for performing unit tests, or creating a type-safe reverse proxy server or micro-services..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I options in elysiajs?\n\nAssistant: To options in elysiajs, here's what you do:\n2nd optional parameters for Eden Treaty to customize fetch behavior, accepting parameters as follows:\n\n- [fetch](https://elysiajs.com/eden/treaty/config#fetch) - add default parameters to fetch initialization (RequestInit)\n- [headers](https://elysiajs.com/eden/treaty/config#headers) - define default headers\n- [fetcher](https://elysiajs.com/eden/treaty/config#fetcher) - custom fetch function eg. Axios, unfetch\n- [onRequest](https://elysiajs.com/eden/treaty/config#onrequest) - Intercept and modify fetch request before firing\n- [onResponse](https://elysiajs.com/eden/treaty/config#onresponse) - Intercept and modify fetch's response..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I fetch in elysiajs?\n\nAssistant: To fetch in elysiajs, here's what you do:\nDefault parameters append to 2nd parameters of fetch extends type of **Fetch.RequestInit**.\n\n```typescript\nexport type App = typeof app\nimport { treaty } from '@elysiajs/eden'\n// ---cut---\ntreaty<App>('localhost:3000', {\n    fetch: {\n        credentials: 'include'\n    }\n})\n```\n\nAll parameters that passed to fetch, will be passed to fetcher, which is an equivalent to:\n\n```typescript\nfetch('http://localhost:3000', {\n    credentials: 'include'\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I headers in elysiajs?\n\nAssistant: To headers in elysiajs, here's what you do:\nProvide an additional default headers to fetch, a shorthand of `options.fetch.headers`.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\nAll parameters that passed to fetch, will be passed to fetcher, which is an equivalent to:\n\n```typescript\nfetch('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\nheaders may accepts the following as parameters:\n\n- Object\n- Function\n\n### Headers Object\nIf object is passed, then it will be passed to fetch directly\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\n### Function\nYou may specify a headers as a function to return custom headers based on condition\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers(path, options) {\n        if(path.startsWith('user'))\n            return {\n                authorization: 'Bearer 12345'\n            }\n    }\n})\n```\n\nYou may return object to append its value to fetch headers.\n\nheaders function accepts 2 parameters:\n\n- path `string` - path which will be sent to parameter\n  - note: hostname will **exclude** eg. (/user/griseo)\n- options `RequestInit`: Parameters that passed through 2nd parameter of fetch\n\n### Array\nYou may define a headers function as an array if multiple conditions are need.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    headers: [\n      (path, options) => {\n        if(path.startsWith('user'))\n            return {\n                authorization: 'Bearer 12345'\n            }\n        }\n    ]\n})\n```\n\nEden Treaty will **run all functions** even if the value is already returned..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I headers priority in elysiajs?\n\nAssistant: To headers priority in elysiajs, here's what you do:\nEden Treaty will prioritize the order headers if duplicated as follows:\n\n1. Inline method - Passed in method function directly\n2. headers - Passed in `config.headers`\n   - If `config.headers` is array, parameters that come after will be prioritize\n3. fetch - Passed in `config.fetch.headers`\n\nFor example, for the following example:\n\n```typescript\nconst api = treaty<App>('localhost:3000', {\n    headers: {\n        authorization: 'Bearer Aponia'\n    }\n})\n\napi.profile.get({\n    headers: {\n        authorization: 'Bearer Griseo'\n    }\n})\n```\n\nThis will be results in:\n\n```typescript\nfetch('http://localhost:3000', {\n    headers: {\n        authorization: 'Bearer Griseo'\n    }\n})\n```\n\nIf inline function doesn't specified headers, then the result will be \" **Bearer Aponia**\" instead..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I fetcher in elysiajs?\n\nAssistant: To fetcher in elysiajs, here's what you do:\nProvide a custom fetcher function instead of using an environment's default fetch.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    fetcher(url, options) {\n        return fetch(url, options)\n    }\n})\n```\n\nIt's recommended to replace fetch if you want to use other client other than fetch, eg. Axios, unfetch..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I onrequest in elysiajs?\n\nAssistant: To onrequest in elysiajs, here's what you do:\nIntercept and modify fetch request before firing.\n\nYou may return object to append the value to **RequestInit**.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onRequest(path, options) {\n        if(path.startsWith('user'))\n            return {\n                headers: {\n                    authorization: 'Bearer 12345'\n                }\n            }\n    }\n})\n```\n\nIf value is returned, Eden Treaty will perform a **shallow merge** for returned value and `value.headers`.\n\n**onRequest** accepts 2 parameters:\n\n- path `string` - path which will be sent to parameter\n  - note: hostname will **exclude** eg. (/user/griseo)\n- options `RequestInit`: Parameters that passed through 2nd parameter of fetch\n\n### Array\nYou may define an onRequest function as an array if multiples conditions are need.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onRequest: [\n      (path, options) => {\n        if(path.startsWith('user'))\n            return {\n                headers: {\n                    authorization: 'Bearer 12345'\n                }\n            }\n        }\n    ]\n})\n```\n\nEden Treaty will **run all functions** even if the value is already returned..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I onresponse in elysiajs?\n\nAssistant: To onresponse in elysiajs, here's what you do:\nIntercept and modify fetch's response or return a new value.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onResponse(response) {\n        if(response.ok)\n            return response.json()\n    }\n})\n```\n\n**onRequest** accepts 1 parameter:\n\n- response `Response` - Web Standard Response normally returned from `fetch`\n\n### Array\nYou may define an onResponse function as an array if multiple conditions are need.\n\n```typescript\ntreaty<App>('localhost:3000', {\n    onResponse: [\n        (response) => {\n            if(response.ok)\n                return response.json()\n        }\n    ]\n})\n```\n\nUnlike [headers](https://elysiajs.com/eden/treaty/config#headers) and [onRequest](https://elysiajs.com/eden/treaty/config#onrequest), Eden Treaty will loop through functions until a returned value is found or error thrown, the returned value will be use as a new response..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "section_detail", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Treaty Configuration in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Using URL Endpoint**:\n\n```yaml\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst api = treaty<App>('localhost:3000')\n```\n\nThis snippet shows you how to using url endpoint, which is an important aspect of eden treaty configuration.\n\n**Using Elysia Instance**:\n\n```yaml\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .get('/hi', 'Hi Elysia')\n    .listen(3000)\n\nconst api = treaty(app)\n```\n\nThis snippet shows you how to using elysia instance, which is an important aspect of eden treaty configuration.\n\n**Fetch Example**:\n\n```yaml\nexport type App = typeof app\nimport { treaty } from '@elysiajs/eden'\n// ---cut---\ntreaty<App>('localhost:3000', {\n    fetch: {\n        credentials: 'include'\n    }\n})\n```\n\nThis snippet shows you how to fetch example, which is an important aspect of eden treaty configuration.\n\n**Headers Example**:\n\n```yaml\ntreaty<App>('localhost:3000', {\n    headers: {\n        'X-Custom': 'Griseo'\n    }\n})\n```\n\nThis snippet shows you how to headers example, which is an important aspect of eden treaty configuration.\n\n**Headers Function Example**:\n\n```yaml\ntreaty<App>('localhost:3000', {\n    headers(path, options) {\n        if(path.startsWith('user'))\n            return {\n                authorization: 'Bearer 12345'\n            }\n    }\n})\n```\n\nThis snippet shows you how to headers function example, which is an important aspect of eden treaty configuration.\n\n**OnRequest Example**:\n\n```yaml\ntreaty<App>('localhost:3000', {\n    onRequest(path, options) {\n        if(path.startsWith('user'))\n            return {\n                headers: {\n                    authorization: 'Bearer 12345'\n                }\n            }\n    }\n})\n```\n\nThis snippet shows you how to onrequest example, which is an important aspect of eden treaty configuration.\n\n**OnResponse Example**:\n\n```yaml\ntreaty<App>('localhost:3000', {\n    onResponse(response) {\n        if(response.ok)\n            return response.json()\n    }\n})\n```\n\nThis snippet shows you how to onresponse example, which is an important aspect of eden treaty configuration.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "code_examples", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Treaty Configuration in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse Elysia instance for unit tests or type-safe reverse proxy servers.\n\nSpecify headers as functions for dynamic header values based on request conditions.\n\nUtilize custom fetchers for alternative HTTP clients like Axios or unfetch.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/config", "title": "Eden Treaty Configuration", "description": "This page covers the configuration options available for the Eden Treaty, including parameters for URL or Elysia instance, options for fetch behavior, and how to customize headers and request/response handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:30:26", "type": "best_practices", "page_metadata": {"twitter:card": "summary_large_image", "og:title": "Eden Treaty Config - ElysiaJS", "title": "Eden Treaty Config - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "language": "en-US", "og:image:height": "1080", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Config - ElysiaJS", "generator": "VitePress v1.6.3", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "og:image:width": "1920", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "scrapeId": "ee5d5b0b-25b3-4723-9b50-cf45216ac0fb", "sourceURL": "https://elysiajs.com/eden/treaty/config", "url": "https://elysiajs.com/eden/treaty/config", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Response is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Response in elysiajs.\n\n# Response\n\nThis page covers the response handling in Eden Treaty, including how to manage promises, error handling, and stream responses.Here's a quick rundown of what this is about:\n\n## Response\n\nOnce the fetch method is called, Eden Treaty return a promise containing an object with the following properties:\n\n- data - returned value of the response (2xx)\n- error - returned value from the response (>= 3xx)\n- response `Response` - Web Standard Response class\n- status `number` - HTTP status code\n- headers `FetchRequestInit['headers']` - response headers\n\nOnce returned, you must provide error handling to ensure that the response data value is unwrapped, otherwise the value will be nullable. Elysia provides a `error()` helper function to handle the error, and Eden will provide type narrowing for the error value.\n\n## Code Example\n\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .post('/user', ({ body: { name }, error }) => {\n        if(name === 'Otto')\n            return error(400, 'Bad Request')\n\n        return name\n    }, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\nconst submit = async (name: string) => {\n    const { data, error } = await api.user.post({\n        name\n    })\n\n    // type: string | null\n    console.log(data)\n\n    if (error)\n        switch(error.status) {\n            case 400:\n                // Error type will be narrow down\n                throw error.value\n\n            default:\n                throw error.value\n        }\n\n    // Once the error is handled, type will be unwrapped\n    // type: string\n    return data\n}\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/response", "title": "Response", "description": "This page covers the response handling in Eden Treaty, including how to manage promises, error handling, and stream responses.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:30:40", "type": "overview", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Response - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "title": "Eden Treaty Response - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Response - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "4eef3808-b944-4e93-ab7c-5eb664c3b740", "sourceURL": "https://elysiajs.com/eden/treaty/response", "url": "https://elysiajs.com/eden/treaty/response", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I response in elysiajs?\n\nAssistant: To response in elysiajs, here's what you do:\nOnce the fetch method is called, Eden Treaty return a promise containing an object with the following properties:\n\n- data - returned value of the response (2xx)\n- error - returned value from the response (>= 3xx)\n- response `Response` - Web Standard Response class\n- status `number` - HTTP status code\n- headers `FetchRequestInit['headers']` - response headers\n\nOnce returned, you must provide error handling to ensure that the response data value is unwrapped, otherwise the value will be nullable. Elysia provides a `error()` helper function to handle the error, and Eden will provide type narrowing for the error value..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/response", "title": "Response", "description": "This page covers the response handling in Eden Treaty, including how to manage promises, error handling, and stream responses.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:30:40", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Response - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "title": "Eden Treaty Response - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Response - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "4eef3808-b944-4e93-ab7c-5eb664c3b740", "sourceURL": "https://elysiajs.com/eden/treaty/response", "url": "https://elysiajs.com/eden/treaty/response", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I code example in elysiajs?\n\nAssistant: To code example in elysiajs, here's what you do:\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .post('/user', ({ body: { name }, error }) => {\n        if(name === 'Otto')\n            return error(400, 'Bad Request')\n\n        return name\n    }, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\nconst submit = async (name: string) => {\n    const { data, error } = await api.user.post({\n        name\n    })\n\n    // type: string | null\n    console.log(data)\n\n    if (error)\n        switch(error.status) {\n            case 400:\n                // Error type will be narrow down\n                throw error.value\n\n            default:\n                throw error.value\n        }\n\n    // Once the error is handled, type will be unwrapped\n    // type: string\n    return data\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/response", "title": "Response", "description": "This page covers the response handling in Eden Treaty, including how to manage promises, error handling, and stream responses.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:30:40", "type": "section_detail", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Response - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "title": "Eden Treaty Response - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Response - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "4eef3808-b944-4e93-ab7c-5eb664c3b740", "sourceURL": "https://elysiajs.com/eden/treaty/response", "url": "https://elysiajs.com/eden/treaty/response", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Response in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Response Handling Example**:\n\n```yaml\n```typescript\nimport { Elysia, t } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n    .post('/user', ({ body: { name }, error }) => {\n        if(name === 'Otto')\n            return error(400, 'Bad Request')\n\n        return name\n    }, {\n        body: t.Object({\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nconst api = treaty<typeof app>('localhost:3000')\n\nconst submit = async (name: string) => {\n    const { data, error } = await api.user.post({\n        name\n    })\n\n    // type: string | null\n    console.log(data)\n\n    if (error)\n        switch(error.status) {\n            case 400:\n                // Error type will be narrow down\n                throw error.value\n\n            default:\n                throw error.value\n        }\n\n    // Once the error is handled, type will be unwrapped\n    // type: string\n    return data\n}\n```\n```\n\nThis snippet shows you how to response handling example, which is an important aspect of response.\n\n**Stream Response Example**:\n\n```yaml\n```typescript\nimport { Elysia } from 'elysia'\nimport { treaty } from '@elysiajs/eden'\n\nconst app = new Elysia()\n\t.get('/ok', function* () {\n\t\tyield 1\n\t\tyield 2\n\t\tyield 3\n\t})\n\nconst { data, error } = await treaty(app).ok.get()\nif (error) throw error\n\nfor await (const chunk of data)\n\tconsole.log(chunk)\n```\n```\n\nThis snippet shows you how to stream response example, which is an important aspect of response.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/response", "title": "Response", "description": "This page covers the response handling in Eden Treaty, including how to manage promises, error handling, and stream responses.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:30:40", "type": "code_examples", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Response - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "title": "Eden Treaty Response - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Response - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "4eef3808-b944-4e93-ab7c-5eb664c3b740", "sourceURL": "https://elysiajs.com/eden/treaty/response", "url": "https://elysiajs.com/eden/treaty/response", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Response in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf the server responds with an HTTP status >= 300, then value will be always be null, and `error` will have a returned value instead.\n\nBy default, Elysia infers `error` and `response` type to TypeScript automatically, and Eden will be providing auto-completion and type narrowing for accurate behavior.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/response", "title": "Response", "description": "This page covers the response handling in Eden Treaty, including how to manage promises, error handling, and stream responses.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:30:40", "type": "best_practices", "page_metadata": {"language": "en-US", "twitter:card": "summary_large_image", "generator": "VitePress v1.6.3", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image:height": "1080", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Response - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "description": "A VitePress site", "title": "Eden Treaty Response - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Response - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "scrapeId": "4eef3808-b944-4e93-ab7c-5eb664c3b740", "sourceURL": "https://elysiajs.com/eden/treaty/response", "url": "https://elysiajs.com/eden/treaty/response", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Treaty is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Treaty in elysiajs.\n\n# Eden Treaty\n\nEden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.Here's a quick rundown of what this is about:\n\n## Overview\n\nEden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.\n\n## Using Eden Treaty\n\nTo use Eden Treaty, first export your existing Elysia server type:\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/hi', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThen import the server type and consume the Elysia API on the client:\n\n```typescript\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst app = treaty<App>('localhost:3000')\n\n// response type: 'Hi Elysia'\nconst { data, error } = await app.hi.get()\n```\n\n## Tree like syntax\n\nHTTP Path is a resource indicator for a file system tree.\n\nFile system consists of multiple levels of folders, for example:\n\n- /documents/elysia\n- /documents/kalpas\n- /documents/kelvin\n\nEach level is separated by **/** (slash) and a name.\n\nHowever in JavaScript, instead of using **\"/\"** (slash) we use **\".\"** (dot) to access deeper resources.\n\nEden Treaty turns an Elysia server into a tree-like file system that can be accessed in the JavaScript frontend instead.\n\n| Path | Treaty |\n| --- | --- |\n| / | .index |\n| /hi | .hi |\n| /deep/nested | .deep.nested |\n\nCombined with the HTTP method, we can interact with the Elysia server.\n\n| Path | Method | Treaty |\n| --- | --- | --- |\n| / | GET | .index.get() |\n| /hi | GET | .hi.get() |\n| /deep/nested | GET | .deep.nested.get() |\n| /deep/nested | POST | .deep.nested.post() |\n\n## Dynamic path\n\nHowever, dynamic path parameters cannot be expressed using notation. If they are fully replaced, we don't know what the parameter name is supposed to be.\n\n```typescript\n// ❌ Unclear what the value is supposed to represent?\ntreaty.item['skadi'].get()\n```\n\nTo handle this, we can specify a dynamic path using a function to provide a key value instead.\n\n```typescript\n// ✅ Clear that value is dynamic path is 'name'\ntreaty.item({ name: 'Skadi' }).get()\n```\n\n| Path | Treaty |\n| --- | --- |\n| /item | .item |\n| /item/:name | .item({ name: 'Skadi' }) |\n| /item/:name/id | .item({ name: 'Skadi' }).id |\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "overview", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I overview in elysiajs?\n\nAssistant: To overview in elysiajs, here's what you do:\nEden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I using eden treaty in elysiajs?\n\nAssistant: To using eden treaty in elysiajs, here's what you do:\nTo use Eden Treaty, first export your existing Elysia server type:\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/hi', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThen import the server type and consume the Elysia API on the client:\n\n```typescript\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst app = treaty<App>('localhost:3000')\n\n// response type: 'Hi Elysia'\nconst { data, error } = await app.hi.get()\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I tree like syntax in elysiajs?\n\nAssistant: To tree like syntax in elysiajs, here's what you do:\nHTTP Path is a resource indicator for a file system tree.\n\nFile system consists of multiple levels of folders, for example:\n\n- /documents/elysia\n- /documents/kalpas\n- /documents/kelvin\n\nEach level is separated by **/** (slash) and a name.\n\nHowever in JavaScript, instead of using **\"/\"** (slash) we use **\".\"** (dot) to access deeper resources.\n\nEden Treaty turns an Elysia server into a tree-like file system that can be accessed in the JavaScript frontend instead.\n\n| Path | Treaty |\n| --- | --- |\n| / | .index |\n| /hi | .hi |\n| /deep/nested | .deep.nested |\n\nCombined with the HTTP method, we can interact with the Elysia server.\n\n| Path | Method | Treaty |\n| --- | --- | --- |\n| / | GET | .index.get() |\n| /hi | GET | .hi.get() |\n| /deep/nested | GET | .deep.nested.get() |\n| /deep/nested | POST | .deep.nested.post() |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I dynamic path in elysiajs?\n\nAssistant: To dynamic path in elysiajs, here's what you do:\nHowever, dynamic path parameters cannot be expressed using notation. If they are fully replaced, we don't know what the parameter name is supposed to be.\n\n```typescript\n// ❌ Unclear what the value is supposed to represent?\ntreaty.item['skadi'].get()\n```\n\nTo handle this, we can specify a dynamic path using a function to provide a key value instead.\n\n```typescript\n// ✅ Clear that value is dynamic path is 'name'\ntreaty.item({ name: 'Skadi' }).get()\n```\n\n| Path | Treaty |\n| --- | --- |\n| /item | .item |\n| /item/:name | .item({ name: 'Skadi' }) |\n| /item/:name/id | .item({ name: 'Skadi' }).id |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "section_detail", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Treaty in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Server Example**:\n\n```yaml\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/hi', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThis snippet shows you how to server example, which is an important aspect of eden treaty.\n\n**Client Example**:\n\n```yaml\n// client.ts\nimport { treaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst app = treaty<App>('localhost:3000')\n\n// response type: 'Hi Elysia'\nconst { data, error } = await app.hi.get()\n```\n\nThis snippet shows you how to client example, which is an important aspect of eden treaty.\n\n**Dynamic Path Example**:\n\n```yaml\n// ❌ Unclear what the value is supposed to represent?\ntreaty.item['skadi'].get()\n\n// ✅ Clear that value is dynamic path is 'name'\ntreaty.item({ name: 'Skadi' }).get()\n```\n\nThis snippet shows you how to dynamic path example, which is an important aspect of eden treaty.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "code_examples", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Treaty in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUse type safety and auto-completion features provided by Eden Treaty for better development experience.\n\nWhen defining dynamic paths, use functions to clarify the parameter names for better readability.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/overview", "title": "Eden Treaty", "description": "Eden Treaty is an object representation to interact with a server and features type safety, auto-completion, and error handling.", "has_code_examples": true, "has_best_practices": true, "section_count": 4, "timestamp": "2025-03-01 03:30:55", "type": "best_practices", "page_metadata": {"og:image:width": "1920", "description": "A VitePress site", "title": "Overview - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image:height": "1080", "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "og:title": "Eden Treaty Overview - ElysiaJS", "twitter:card": "summary_large_image", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing end-to-end type safety and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogTitle": "Eden Treaty Overview - ElysiaJS", "language": "en-US", "scrapeId": "ae25d799-15c2-4de7-becb-30c895640196", "sourceURL": "https://elysiajs.com/eden/treaty/overview", "url": "https://elysiajs.com/eden/treaty/overview", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what WebSocket is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain WebSocket in elysiajs.\n\n# WebSocket\n\nEden Treaty supports WebSocket using `subscribe` method.Here's a quick rundown of what this is about:\n\n## WebSocket\n\nEden Treaty supports WebSocket using `subscribe` method.\n\n## Response\n\nEden.subscribe returns EdenWS which extends the WebSocket results in identical syntax. If more control is need, EdenWebSocket.raw can be accessed to interact with the native WebSocket API.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/websocket", "title": "WebSocket", "description": "Eden Treaty supports WebSocket using `subscribe` method.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:02", "type": "overview", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Web Socket - ElysiaJS", "twitter:card": "summary_large_image", "title": "Eden Treaty Web Socket - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "og:image:height": "1080", "ogTitle": "Eden Treaty Web Socket - ElysiaJS", "og:image:width": "1920", "language": "en-US", "scrapeId": "13220a82-07a1-488d-b587-a9c2d14b16f3", "sourceURL": "https://elysiajs.com/eden/treaty/websocket", "url": "https://elysiajs.com/eden/treaty/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket in elysiajs?\n\nAssistant: To websocket in elysiajs, here's what you do:\nEden Treaty supports WebSocket using `subscribe` method..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/websocket", "title": "WebSocket", "description": "Eden Treaty supports WebSocket using `subscribe` method.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:02", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Web Socket - ElysiaJS", "twitter:card": "summary_large_image", "title": "Eden Treaty Web Socket - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "og:image:height": "1080", "ogTitle": "Eden Treaty Web Socket - ElysiaJS", "og:image:width": "1920", "language": "en-US", "scrapeId": "13220a82-07a1-488d-b587-a9c2d14b16f3", "sourceURL": "https://elysiajs.com/eden/treaty/websocket", "url": "https://elysiajs.com/eden/treaty/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I response in elysiajs?\n\nAssistant: To response in elysiajs, here's what you do:\nEden.subscribe returns EdenWS which extends the WebSocket results in identical syntax. If more control is need, EdenWebSocket.raw can be accessed to interact with the native WebSocket API..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/websocket", "title": "WebSocket", "description": "Eden Treaty supports WebSocket using `subscribe` method.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:02", "type": "section_detail", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Web Socket - ElysiaJS", "twitter:card": "summary_large_image", "title": "Eden Treaty Web Socket - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "og:image:height": "1080", "ogTitle": "Eden Treaty Web Socket - ElysiaJS", "og:image:width": "1920", "language": "en-US", "scrapeId": "13220a82-07a1-488d-b587-a9c2d14b16f3", "sourceURL": "https://elysiajs.com/eden/treaty/websocket", "url": "https://elysiajs.com/eden/treaty/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for WebSocket in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**WebSocket Example**:\n\n```yaml\nimport {\n  Elysia,\n  t\n} from \"elysia\";\nimport {\n  treaty\n} from \"@elysiajs/eden\";\n\nconst app = new Elysia()\n  .ws(\"/chat\", {\n    body: t.String(),\n    response: t.String(),\n    message(ws, message) {\n      ws.send(message);\n    },\n  })\n  .listen(3000);\n\nconst api = treaty<typeof app>(\"localhost:3000\");\n\nconst chat = api.chat.subscribe();\n\nchat.subscribe((message) => {\n  console.log(\"got\", message);\n});\n\nchat.on(\"open\", () => {\n  chat.send(\"hello from client\");\n});\n```\n\nThis snippet shows you how to websocket example, which is an important aspect of websocket.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/websocket", "title": "WebSocket", "description": "Eden Treaty supports WebSocket using `subscribe` method.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:02", "type": "code_examples", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Web Socket - ElysiaJS", "twitter:card": "summary_large_image", "title": "Eden Treaty Web Socket - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "og:image:height": "1080", "ogTitle": "Eden Treaty Web Socket - ElysiaJS", "og:image:width": "1920", "language": "en-US", "scrapeId": "13220a82-07a1-488d-b587-a9c2d14b16f3", "sourceURL": "https://elysiajs.com/eden/treaty/websocket", "url": "https://elysiajs.com/eden/treaty/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using WebSocket in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEden.subscribe accepts the same parameter as get and head.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/websocket", "title": "WebSocket", "description": "Eden Treaty supports WebSocket using `subscribe` method.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:02", "type": "best_practices", "page_metadata": {"ogImage": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:title": "Eden Treaty Web Socket - ElysiaJS", "twitter:card": "summary_large_image", "title": "Eden Treaty Web Socket - ElysiaJS | ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "og:image:height": "1080", "ogTitle": "Eden Treaty Web Socket - ElysiaJS", "og:image:width": "1920", "language": "en-US", "scrapeId": "13220a82-07a1-488d-b587-a9c2d14b16f3", "sourceURL": "https://elysiajs.com/eden/treaty/websocket", "url": "https://elysiajs.com/eden/treaty/websocket", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Eden Treaty Legacy is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Eden Treaty Legacy in elysiajs.\n\n# Eden Treaty Legacy\n\nThis is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.Here's a quick rundown of what this is about:\n\n## Anatomy\n\nEden Treaty will transform all existing paths to object-like representation, that can be described as:\n\n```typescript\nEdenTreaty.<1>.<2>.<n>.<method>({\n    ...body,\n    $query?: {},\n    $fetch?: RequestInit\n})\n```\n\n## Path\n\nEden will transform `/` into `.` which can be called with a registered `method`, for example:\n\n- **/path** -\\> .path\n- **/nested/path** -\\> .nested.path\n\n## Path parameters\n\nPath parameters will be mapped automatically by their name in the URL.\n\n- **/id/:id** -\\> .id. `<anyThing>`\n- eg: .id.hi\n- eg: .id['123']\n\n## Query\n\nYou can append queries to path with `$query`:\n\n```typescript\napp.get({\n    $query: {\n        name: 'Eden',\n        code: 'Gold'\n    }\n})\n```\n\n## Fetch\n\nEden Treaty is a fetch wrapper, you can add any valid [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) parameters to Eden by passing it to `$fetch`:\n\n```typescript\napp.post({\n    $fetch: {\n        headers: {\n            'x-organization': 'MANTIS'\n        }\n    }\n})\n```\n\n## Error Handling\n\nEden Treaty will return a value of `data` and `error` as a result, both fully typed.\n\n```typescript\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = app.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            warnUser(error.value)\n            break\n\n        case 500:\n        case 502:\n            emergencyCallDev(error.value)\n            break\n\n        default:\n            reportError(error.value)\n            break\n    }\n\n    throw error\n}\n\nconst { id, name } = nendoroid\n```\n\n## Error type based on status\n\nBoth Eden Treaty and Eden Fetch can narrow down an error type based on status code if you explicitly provided an error type in the Elysia server.\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .model({\n        nendoroid: t.Object({\n            id: t.Number(),\n            name: t.String()\n        }),\n        error: t.Object({\n            message: t.String()\n        })\n    })\n    .get('/', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: 'nendoroid',\n        response: {\n            200: 'nendoroid',\n            400: 'error',\n            401: 'error'\n        }\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nAn on the client side:\n\n```typescript\nconst { data: nendoroid, error } = app.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            // narrow down to type 'error' described in the server\n            warnUser(error.value)\n            break\n\n        default:\n            // typed as unknown\n            reportError(error.value)\n            break\n    }\n\n    throw error\n}\n```\n\n## WebSocket\n\nEden supports WebSocket using the same API as a normal route.\n\n```typescript\n// Server\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/chat', {\n        message(ws, message) {\n            ws.send(message)\n        },\n        body: t.String(),\n        response: t.String()\n    })\n    .listen(3000)\n\ntype App = typeof app\n```\n\nTo start listening to real-time data, call the `.subscribe` method:\n\n```typescript\n// Client\nimport { edenTreaty } from '@elysiajs/eden'\nconst app = edenTreaty<App>('http://localhost:')\n\nconst chat = app.chat.subscribe()\n\nchat.subscribe((message) => {\n    console.log('got', message)\n})\n\nchat.send('hello from client')\n```\n\n## File Upload\n\nYou may either pass one of the following to the field to attach file:\n\n- **File**\n- **FileList**\n- **Blob**\n\nAttaching a file will results **content-type** to be **multipart/form-data**\n\nSuppose we have the server as the following:\n\n```typescript\n// server.ts\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .post('/image', ({ body: { image, title } }) => title, {\n        body: t.Object({\n            title: t.String(),\n            image: t.Files(),\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nWe may use the client as follows:\n\n```typescript\n// client.ts\nimport { edenTreaty } from '@elysia/eden'\nimport type { Server } from './server'\n\nexport const client = edenTreaty<Server>('http://localhost:3000')\n\nconst id = <T extends HTMLElement = HTMLElement>(id: string) =>\n    document.getElementById(id)! as T\n\nconst { data } = await client.image.post({\n    title: \"Misono Mika\",\n    image: id<HTMLInputElement>('picture').files!,\n})\n```\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "overview", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I anatomy in elysiajs?\n\nAssistant: To anatomy in elysiajs, here's what you do:\nEden Treaty will transform all existing paths to object-like representation, that can be described as:\n\n```typescript\nEdenTreaty.<1>.<2>.<n>.<method>({\n    ...body,\n    $query?: {},\n    $fetch?: RequestInit\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I path in elysiajs?\n\nAssistant: To path in elysiajs, here's what you do:\nEden will transform `/` into `.` which can be called with a registered `method`, for example:\n\n- **/path** -\\> .path\n- **/nested/path** -\\> .nested.path.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I path parameters in elysiajs?\n\nAssistant: To path parameters in elysiajs, here's what you do:\nPath parameters will be mapped automatically by their name in the URL.\n\n- **/id/:id** -\\> .id. `<anyThing>`\n- eg: .id.hi\n- eg: .id['123'].\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I query in elysiajs?\n\nAssistant: To query in elysiajs, here's what you do:\nYou can append queries to path with `$query`:\n\n```typescript\napp.get({\n    $query: {\n        name: 'Eden',\n        code: 'Gold'\n    }\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I fetch in elysiajs?\n\nAssistant: To fetch in elysiajs, here's what you do:\nEden Treaty is a fetch wrapper, you can add any valid [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) parameters to Eden by passing it to `$fetch`:\n\n```typescript\napp.post({\n    $fetch: {\n        headers: {\n            'x-organization': 'MANTIS'\n        }\n    }\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I error handling in elysiajs?\n\nAssistant: To error handling in elysiajs, here's what you do:\nEden Treaty will return a value of `data` and `error` as a result, both fully typed.\n\n```typescript\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = app.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            warnUser(error.value)\n            break\n\n        case 500:\n        case 502:\n            emergencyCallDev(error.value)\n            break\n\n        default:\n            reportError(error.value)\n            break\n    }\n\n    throw error\n}\n\nconst { id, name } = nendoroid\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I error type based on status in elysiajs?\n\nAssistant: To error type based on status in elysiajs, here's what you do:\nBoth Eden Treaty and Eden Fetch can narrow down an error type based on status code if you explicitly provided an error type in the Elysia server.\n\n```typescript\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .model({\n        nendoroid: t.Object({\n            id: t.Number(),\n            name: t.String()\n        }),\n        error: t.Object({\n            message: t.String()\n        })\n    })\n    .get('/', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: 'nendoroid',\n        response: {\n            200: 'nendoroid',\n            400: 'error',\n            401: 'error'\n        }\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nAn on the client side:\n\n```typescript\nconst { data: nendoroid, error } = app.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            // narrow down to type 'error' described in the server\n            warnUser(error.value)\n            break\n\n        default:\n            // typed as unknown\n            reportError(error.value)\n            break\n    }\n\n    throw error\n}\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I websocket in elysiajs?\n\nAssistant: To websocket in elysiajs, here's what you do:\nEden supports WebSocket using the same API as a normal route.\n\n```typescript\n// Server\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/chat', {\n        message(ws, message) {\n            ws.send(message)\n        },\n        body: t.String(),\n        response: t.String()\n    })\n    .listen(3000)\n\ntype App = typeof app\n```\n\nTo start listening to real-time data, call the `.subscribe` method:\n\n```typescript\n// Client\nimport { edenTreaty } from '@elysiajs/eden'\nconst app = edenTreaty<App>('http://localhost:')\n\nconst chat = app.chat.subscribe()\n\nchat.subscribe((message) => {\n    console.log('got', message)\n})\n\nchat.send('hello from client')\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I file upload in elysiajs?\n\nAssistant: To file upload in elysiajs, here's what you do:\nYou may either pass one of the following to the field to attach file:\n\n- **File**\n- **FileList**\n- **Blob**\n\nAttaching a file will results **content-type** to be **multipart/form-data**\n\nSuppose we have the server as the following:\n\n```typescript\n// server.ts\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .post('/image', ({ body: { image, title } }) => title, {\n        body: t.Object({\n            title: t.String(),\n            image: t.Files(),\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nWe may use the client as follows:\n\n```typescript\n// client.ts\nimport { edenTreaty } from '@elysia/eden'\nimport type { Server } from './server'\n\nexport const client = edenTreaty<Server>('http://localhost:3000')\n\nconst id = <T extends HTMLElement = HTMLElement>(id: string) =>\n    document.getElementById(id)! as T\n\nconst { data } = await client.image.post({\n    title: \"Misono Mika\",\n    image: id<HTMLInputElement>('picture').files!,\n})\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "section_detail", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Eden Treaty Legacy in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Server Example**:\n\n```yaml\n// server.ts\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hi Elysia')\n    .get('/id/:id', ({ params: { id } }) => id)\n    .post('/mirror', ({ body }) => body, {\n        body: t.Object({\n            id: t.Number(),\n            name: t.String()\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThis snippet shows you how to server example, which is an important aspect of eden treaty legacy.\n\n**Client Example**:\n\n```yaml\n// client.ts\nimport { edenTreaty } from '@elysiajs/eden'\nimport type { App } from './server'\n\nconst app = edenTreaty<App>('http://localhost:')\n\n// response type: 'Hi Elysia'\nconst { data: pong, error } = app.get()\n\n// response type: 1895\nconst { data: id, error } = app.id['1895'].get()\n\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = app.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n```\n\nThis snippet shows you how to client example, which is an important aspect of eden treaty legacy.\n\n**Error Handling Example**:\n\n```yaml\n// response type: { id: 1895, name: 'Skadi' }\nconst { data: nendoroid, error } = app.mirror.post({\n    id: 1895,\n    name: 'Skadi'\n})\n\nif(error) {\n    switch(error.status) {\n        case 400:\n        case 401:\n            warnUser(error.value)\n            break\n\n        case 500:\n        case 502:\n            emergencyCallDev(error.value)\n            break\n\n        default:\n            reportError(error.value)\n            break\n    }\n\n    throw error\n}\n\nconst { id, name } = nendoroid\n```\n\nThis snippet shows you how to error handling example, which is an important aspect of eden treaty legacy.\n\n**WebSocket Example**:\n\n```yaml\n// Server\nimport { Elysia, t } from 'elysia'\n\nconst app = new Elysia()\n    .ws('/chat', {\n        message(ws, message) {\n            ws.send(message)\n        },\n        body: t.String(),\n        response: t.String()\n    })\n    .listen(3000)\n\ntype App = typeof app\n```\n\nThis snippet shows you how to websocket example, which is an important aspect of eden treaty legacy.\n\n**File Upload Example**:\n\n```yaml\n// server.ts\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .post('/image', ({ body: { image, title } }) => title, {\n        body: t.Object({\n            title: t.String(),\n            image: t.Files(),\n        })\n    })\n    .listen(3000)\n\nexport type App = typeof app\n```\n\nThis snippet shows you how to file upload example, which is an important aspect of eden treaty legacy.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "code_examples", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Eden Treaty Legacy in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEden Treaty is fully type-safe with auto-completion support.\n\nIf a path doesn't support path parameters, TypeScript will show an error.\n\nBoth data, and error will be typed as nullable until you can confirm their statuses with a type guard.\n\nError is wrapped with an Error with its value return from the server can be retrieve from Error.value.\n\nWe can use schema to enforce type-safety on WebSockets, just like a normal route.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/legacy", "title": "Eden Treaty Legacy", "description": "This is a documentation for Eden Treaty 1 or (edenTreaty). For a new project, we recommended starting with Eden Treaty 2 (treaty) instead. Eden Treaty is an object-like representation of an Elysia server, providing accessor like a normal object with type directly from the server, helping us to move faster, and make sure that nothing break.", "has_code_examples": true, "has_best_practices": true, "section_count": 9, "timestamp": "2025-03-01 03:31:31", "type": "best_practices", "page_metadata": {"title": "Eden Treaty Legacy - ElysiaJS | ElysiaJS", "ogTitle": "Eden Treaty Legacy - ElysiaJS", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "og:image:width": "1920", "og:title": "Eden Treaty Legacy - ElysiaJS", "description": "A VitePress site", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "viewport": "width=device-width,initial-scale=1,user-scalable=no", "og:image": "https://elysiajs.com/assets/cover.jpg", "language": "en-US", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "generator": "VitePress v1.6.3", "twitter:card": "summary_large_image", "scrapeId": "1e904ab0-b289-48cc-aeb4-a071aa745132", "sourceURL": "https://elysiajs.com/eden/treaty/legacy", "url": "https://elysiajs.com/eden/treaty/legacy", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Unit Test is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Unit Test in elysiajs.\n\n# Unit Test\n\nThis page covers how to create unit tests for Elysia using Eden Treaty, ensuring type safety and end-to-end testing.Here's a quick rundown of what this is about:\n\n## Unit Test\n\nAccording to Eden Treaty config and Unit Test, we may pass an Elysia instance to Eden Treaty directly to interact with Elysia server directly without sending a network request.\n\nWe may use this patterns to create a unit test with end-to-end type safety and type-level test all at once.\n\n## Type safety test\n\nTo perform a type safety test, simply run tsc to test folders.\n\nThis is useful to ensure type integrity for both client and server, especially during migrations.\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/unit-test", "title": "Unit Test", "description": "This page covers how to create unit tests for Elysia using Eden Treaty, ensuring type safety and end-to-end testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:37", "type": "overview", "page_metadata": {"ogTitle": "Eden Treaty Unit Test - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Eden Treaty Unit Test - ElysiaJS | ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "description": "A VitePress site", "og:title": "Eden Treaty Unit Test - ElysiaJS", "scrapeId": "983791fb-d698-4167-b4e7-e2d849e0551e", "sourceURL": "https://elysiajs.com/eden/treaty/unit-test", "url": "https://elysiajs.com/eden/treaty/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I unit test in elysiajs?\n\nAssistant: To unit test in elysiajs, here's what you do:\nAccording to Eden Treaty config and Unit Test, we may pass an Elysia instance to Eden Treaty directly to interact with Elysia server directly without sending a network request.\n\nWe may use this patterns to create a unit test with end-to-end type safety and type-level test all at once..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/unit-test", "title": "Unit Test", "description": "This page covers how to create unit tests for Elysia using Eden Treaty, ensuring type safety and end-to-end testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:37", "type": "section_detail", "page_metadata": {"ogTitle": "Eden Treaty Unit Test - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Eden Treaty Unit Test - ElysiaJS | ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "description": "A VitePress site", "og:title": "Eden Treaty Unit Test - ElysiaJS", "scrapeId": "983791fb-d698-4167-b4e7-e2d849e0551e", "sourceURL": "https://elysiajs.com/eden/treaty/unit-test", "url": "https://elysiajs.com/eden/treaty/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I type safety test in elysiajs?\n\nAssistant: To type safety test in elysiajs, here's what you do:\nTo perform a type safety test, simply run tsc to test folders.\n\nThis is useful to ensure type integrity for both client and server, especially during migrations..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/unit-test", "title": "Unit Test", "description": "This page covers how to create unit tests for Elysia using Eden Treaty, ensuring type safety and end-to-end testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:37", "type": "section_detail", "page_metadata": {"ogTitle": "Eden Treaty Unit Test - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Eden Treaty Unit Test - ElysiaJS | ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "description": "A VitePress site", "og:title": "Eden Treaty Unit Test - ElysiaJS", "scrapeId": "983791fb-d698-4167-b4e7-e2d849e0551e", "sourceURL": "https://elysiajs.com/eden/treaty/unit-test", "url": "https://elysiajs.com/eden/treaty/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Unit Test in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Unit Test Example**:\n\n```yaml\n// test/index.test.ts\nimport {\ndescribe,\nexpect,\nit } from 'bun:test'\nimport {\nElysia } from 'elysia'\nimport {\ntreaty } from '@elysiajs/eden'\n\nconst\napp = new\nElysia().\nget('/hello', 'hi')\nconst\napi =\ntreaty(\napp)\n\ndescribe('Elysia', () => {\n\nit('return a response', async () => {\n        const {\ndata } = await\napi.\nhello.\nget()\n\n\nexpect(\ndata).\ntoBe('hi')\n\n    })\n})\n```\n\nThis snippet shows you how to unit test example, which is an important aspect of unit test.\n\n**Type Safety Test Command**:\n\n```yaml\ntsc --noEmit test/**/*.ts\n```\n\nThis snippet shows you how to type safety test command, which is an important aspect of unit test.\n\n", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/unit-test", "title": "Unit Test", "description": "This page covers how to create unit tests for Elysia using Eden Treaty, ensuring type safety and end-to-end testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:37", "type": "code_examples", "page_metadata": {"ogTitle": "Eden Treaty Unit Test - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Eden Treaty Unit Test - ElysiaJS | ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "description": "A VitePress site", "og:title": "Eden Treaty Unit Test - ElysiaJS", "scrapeId": "983791fb-d698-4167-b4e7-e2d849e0551e", "sourceURL": "https://elysiajs.com/eden/treaty/unit-test", "url": "https://elysiajs.com/eden/treaty/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Unit Test in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nEnsure type integrity for both client and server during migrations.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/eden/treaty/unit-test", "title": "Unit Test", "description": "This page covers how to create unit tests for Elysia using Eden Treaty, ensuring type safety and end-to-end testing.", "has_code_examples": true, "has_best_practices": true, "section_count": 2, "timestamp": "2025-03-01 03:31:37", "type": "best_practices", "page_metadata": {"ogTitle": "Eden Treaty Unit Test - ElysiaJS", "ogDescription": "Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "og:image": "https://elysiajs.com/assets/cover.jpg", "ogImage": "https://elysiajs.com/assets/cover.jpg", "twitter:card": "summary_large_image", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "title": "Eden Treaty Unit Test - ElysiaJS | ElysiaJS", "og:image:width": "1920", "og:image:height": "1080", "og:description": ["Ergonomic Framework for Humans. TypeScript framework supercharged by Bun with End - to - End Type Safety, unified type system and outstanding developer experience", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation.", "Eden Treaty is an object-like representation of an Elysia server, providing an end-to-end type safety, and a significantly improved developer experience. With Eden, we can fetch an API from Elysia server fully type-safe without code generation."], "generator": "VitePress v1.6.3", "favicon": "https://elysiajs.com/assets/elysia.png", "language": "en-US", "description": "A VitePress site", "og:title": "Eden Treaty Unit Test - ElysiaJS", "scrapeId": "983791fb-d698-4167-b4e7-e2d849e0551e", "sourceURL": "https://elysiajs.com/eden/treaty/unit-test", "url": "https://elysiajs.com/eden/treaty/unit-test", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Elysia Tutorial is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Elysia Tutorial in elysiajs.\n\n# Elysia Tutorial\n\nWe will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.Here's a quick rundown of what this is about:\n\n## Not a fan of tutorial?\n\nIf you prefers to a more try-it-yourself approach, you can skip this tutorial and go straight to the key concept page to get a good understanding of how Elysia works.\n\n## Setup\n\nElysia is built on Bun, an alternative runtime to Node.js.\n\nInstall Bun if you haven't already.\n\nMacOS/Linux\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\nWindows\n\n```bash\npowershell -c \"irm bun.sh/install.ps1 | iex\"\n```\n\n## Create a new project\n\n```bash\n# Create a new project\nbun create elysia hi-elysia\n\n# cd into the project\ncd hi-elysia\n\n# Install dependencies\nbun install\n``` \nThis will create a barebone project with Elysia and basic TypeScript config.\n\n## Start the development server\n\n```bash\nbun dev\n```\nOpen your browser and go to http://localhost:3000, you should see Hello Elysia message on the screen.\n\nElysia use Bun with `--watch` flag to automatically reload the server when you make changes.\n\n## Route\n\nTo add a new route, we specify an HTTP method, a pathname, and a value.\n\nLet's start by opening the `src/index.ts` file as follows:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nOpen http://localhost:3000/hello, you should see Do you miss me?.\n\nThere are several HTTP methods we can use, but we will use the following for this tutorial:\n\n- get\n- post\n- put\n- patch\n- delete\n\nOther methods are available, use the same syntax as `get`\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/hello', 'Do you miss me?')\n    .post('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nElysia accepts both value and function as a response.\n\nHowever, we can use function to access `Context` (route and instance information).\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/', ({ path }) => path)\n    .post('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\n## Swagger\n\nEntering a URL to the browser can only interact with the GET method. To interact with other methods, we need a REST Client like Postman or Insomnia.\n\nLuckily, Elysia comes with a OpenAPI Schema with Scalar to interact with our API.\n\n```bash\n# Install the Swagger plugin\nbun add @elysiajs/swagger\n```\n\nThen apply the plugin to the Elysia instance.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    // Apply the swagger plugin\n    .use(swagger())\n    .get('/', ({ path }) => path)\n    .post('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nNavigate to http://localhost:3000/swagger, you should see the documentation like this: ![Scalar Documentation landing](https://elysiajs.com/tutorial/scalar-landing.webp)\n\nNow we can interact with all the routes we have created.\n\nScroll to /hello and click a blue Test Request button to show the form.\n\nWe can see the result by clicking the black Send button. ![Scalar Documentation landing](https://elysiajs.com/tutorial/scalar-request.webp)\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "overview", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I not a fan of tutorial? in elysiajs?\n\nAssistant: To not a fan of tutorial? in elysiajs, here's what you do:\nIf you prefers to a more try-it-yourself approach, you can skip this tutorial and go straight to the key concept page to get a good understanding of how Elysia works..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "section_detail", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I setup in elysiajs?\n\nAssistant: To setup in elysiajs, here's what you do:\nElysia is built on Bun, an alternative runtime to Node.js.\n\nInstall Bun if you haven't already.\n\nMacOS/Linux\n\n```bash\ncurl -fsSL https://bun.sh/install | bash\n```\n\nWindows\n\n```bash\npowershell -c \"irm bun.sh/install.ps1 | iex\"\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "section_detail", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I create a new project in elysiajs?\n\nAssistant: To create a new project in elysiajs, here's what you do:\n```bash\n# Create a new project\nbun create elysia hi-elysia\n\n# cd into the project\ncd hi-elysia\n\n# Install dependencies\nbun install\n``` \nThis will create a barebone project with Elysia and basic TypeScript config..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "section_detail", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I start the development server in elysiajs?\n\nAssistant: To start the development server in elysiajs, here's what you do:\n```bash\nbun dev\n```\nOpen your browser and go to http://localhost:3000, you should see Hello Elysia message on the screen.\n\nElysia use Bun with `--watch` flag to automatically reload the server when you make changes..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "section_detail", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I route in elysiajs?\n\nAssistant: To route in elysiajs, here's what you do:\nTo add a new route, we specify an HTTP method, a pathname, and a value.\n\nLet's start by opening the `src/index.ts` file as follows:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nOpen http://localhost:3000/hello, you should see Do you miss me?.\n\nThere are several HTTP methods we can use, but we will use the following for this tutorial:\n\n- get\n- post\n- put\n- patch\n- delete\n\nOther methods are available, use the same syntax as `get`\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/hello', 'Do you miss me?')\n    .post('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nElysia accepts both value and function as a response.\n\nHowever, we can use function to access `Context` (route and instance information).\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/', ({ path }) => path)\n    .post('/hello', 'Do you miss me?')\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "section_detail", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I swagger in elysiajs?\n\nAssistant: To swagger in elysiajs, here's what you do:\nEntering a URL to the browser can only interact with the GET method. To interact with other methods, we need a REST Client like Postman or Insomnia.\n\nLuckily, Elysia comes with a OpenAPI Schema with Scalar to interact with our API.\n\n```bash\n# Install the Swagger plugin\nbun add @elysiajs/swagger\n```\n\nThen apply the plugin to the Elysia instance.\n\n```typescript\nimport { Elysia } from 'elysia'\nimport { swagger } from '@elysiajs/swagger'\n\nconst app = new Elysia()\n    // Apply the swagger plugin\n    .use(swagger())\n    .get('/', ({ path }) => path)\n    .post('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nNavigate to http://localhost:3000/swagger, you should see the documentation like this: ![Scalar Documentation landing](https://elysiajs.com/tutorial/scalar-landing.webp)\n\nNow we can interact with all the routes we have created.\n\nScroll to /hello and click a blue Test Request button to show the form.\n\nWe can see the result by clicking the black Send button. ![Scalar Documentation landing](https://elysiajs.com/tutorial/scalar-request.webp).\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "section_detail", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Elysia Tutorial in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Setup Bun**:\n\n```yaml\ncurl -fsSL https://bun.sh/install | bash\n```\n\nThis snippet shows you how to setup bun, which is an important aspect of elysia tutorial.\n\n**Create a new project**:\n\n```yaml\n# Create a new project\nbun create elysia hi-elysia\n\n# cd into the project\ncd hi-elysia\n\n# Install dependencies\nbun install\n```\n\nThis snippet shows you how to create a new project, which is an important aspect of elysia tutorial.\n\n**Start the development server**:\n\n```yaml\nbun dev\n```\n\nThis snippet shows you how to start the development server, which is an important aspect of elysia tutorial.\n\n**Basic Route Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', () => 'Hello Elysia')\n    .get('/hello', 'Do you miss me?')\n    .listen(3000)\n```\n\nThis snippet shows you how to basic route example, which is an important aspect of elysia tutorial.\n\n", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "code_examples", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Elysia Tutorial in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nIf you prefer a more try-it-yourself approach, you can skip this tutorial and go straight to the key concept page to get a good understanding of how Elysia works.\n\nElysia uses Bun with `--watch` flag to automatically reload the server when you make changes.\n\nWhen using Swagger, ensure to install the Swagger plugin before applying it to the Elysia instance.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/tutorial", "title": "Elysia Tutorial", "description": "We will be building a small CRUD note-taking API server. There's no database or other \"production ready\" features. This tutorial is going to only focus on Elysia feature and how to use Elysia only. We expected it to take around 15-20 minutes if you follow along.", "has_code_examples": true, "has_best_practices": true, "section_count": 6, "timestamp": "2025-03-01 03:31:58", "type": "best_practices", "page_metadata": {"description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "favicon": "https://elysiajs.com/assets/elysia.png", "generator": "VitePress v1.6.3", "ogTitle": "Tutorial - ElysiaJS", "viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "ogDescription": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:image:height": "1080", "og:title": "Tutorial - ElysiaJS", "og:description": "Elysia is a library built for Bun and the only prerequisite. To start, bootstrap a new project with \"bun create elysia hi-elysia\" and start the development server with \"bun dev\". This is all it needs to do a quick start or get started with ElysiaJS.", "title": "Tutorial - ElysiaJS | ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "twitter:card": "summary_large_image", "language": "en-US", "scrapeId": "6a72154d-f38b-4d25-95e1-520c2540e1e9", "sourceURL": "https://elysiajs.com/tutorial", "url": "https://elysiajs.com/tutorial", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you explain what Routing is in elysiajs?\n\nAssistant: Sure, I'd be happy to explain Routing in elysiajs.\n\n# Routing\n\nWeb servers use the request's path and HTTP method to look up the correct resource, referred to as routing.Here's a quick rundown of what this is about:\n\n## Routing\n\nWeb servers use the request's **path and HTTP method** to look up the correct resource, refers as **\"routing\"**.\n\nWe can define a route by calling a **method named after HTTP verbs**, passing a path and a function to execute when matched.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hello')\n    .get('/hi', 'hi')\n    .listen(3000)\n```\n\nWe can access the web server by going to **[http://localhost:3000](http://localhost:3000/)**\n\nBy default, web browsers will send a GET method when visiting a page.\n\nlocalhost//hi\n\nGET\n\nhello\n\nTIP\n\nUsing an interactive browser above, hover on a blue highlight area to see difference result between each path\n\n## Path type\n\nPath in Elysia can be grouped into 3 types:\n\n- **static paths** - static string to locate the resource\n- **dynamic paths** - segment can be any value\n- **wildcards** - path until a specific point can be anything\n\nYou can use all of the path types together to compose a behavior for your web server.\n\nThe priorities are as follows:\n\n1. static paths\n2. dynamic paths\n3. wildcards\n\nIf the path is resolved as the static wild dynamic path is presented, Elysia will resolve the static path rather than the dynamic path.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/1', 'static path')\n    .get('/id/:id', 'dynamic path')\n    .get('/id/*', 'wildcard path')\n    .listen(3000)\n```\n\nlocalhost/id/1/id/2/id/2/a\n\nGET\n\nstatic path\n\nHere the server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | static path |\n| /id/2 | dynamic path |\n| /id/2/a | wildcard path |\n\n## Static Path\n\nA path or pathname is an identifier to locate resources of a server.\n\n```bash\nhttp://localhost:/path/page\n```\n\nElysia uses the path and method to look up the correct resource.\n\n![URL Representation](https://elysiajs.com/essential/url-object.svg)\n\nA path starts after the origin. Prefix with **/** and ends before search query **(?)**\n\nWe can categorize the URL and path as follows:\n\n| URL | Path |\n| --- | --- |\n| [http://site.com/](https://site.com/) | / |\n| [http://site.com/hello](https://site.com/hello) | /hello |\n| [http://site.com/hello/world](https://site.com/hello/world) | /hello/world |\n| [http://site.com/hello?name=salt](https://site.com/hello?name=salt) | /hello |\n| [http://site.com/hello#title](https://site.com/hello#title) | /hello |\n\nTIP\n\nIf the path is not specified, the browser and web server will treat the path as '/' as a default value.\n\nElysia will look up each request for [route](https://elysiajs.com/essential/route.html) and response using [handler](https://elysiajs.com/essential/handler.html) function.\n\n## Dynamic path\n\nURLs can be both static and dynamic.\n\nStatic paths are hardcoded strings that can be used to locate resources of the server, while dynamic paths match some part and captures the value to extract extra information.\n\nFor instance, we can extract the user ID from the pathname. For example:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .listen(3000)\n```\n\nHere dynamic path is created with `/id/:id` which tells Elysia to match any path up until `/id`. What comes after that is then stored as **params** object.\n\nlocalhost/id/1/id/123/id/anything/id/id/anything/test\n\nGET\n\n1\n\nWhen requested, the server should return the response as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | 1 |\n| /id/123 | 123 |\n| /id/anything | anything |\n| /id/anything?name=salt | anything |\n| /id | Not Found |\n| /id/anything/rest | Not Found |\n\nDynamic paths are great to include things like IDs, which then can be used later.\n\nWe refer to the named variable path as **path parameter** or **params** for short.\n\n## Segment\n\nURL segments are each path that is composed into a full path.\n\nSegments are separated by `/`. ![Representation of URL segments](https://elysiajs.com/essential/url-segment.webp)\n\nPath parameters in Elysia are represented by prefixing a segment with ':' followed by a name. ![Representation of path parameter](https://elysiajs.com/essential/path-parameter.webp)\n\nPath parameters allow Elysia to capture a specific segment of a URL.\n\nThe named path parameter will then be stored in `Context.params`.\n\n| Route | Path | Params |\n| --- | --- | --- |\n| /id/:id | /id/1 | id=1 |\n| /id/:id | /id/hi | id=hi |\n| /id/:name | /id/hi | name=hi |\n\n## Multiple path parameters\n\nYou can have as many path parameters as you like, which will then be stored into a `params` object.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .get('/id/:id/:name', ({ params: { id, name } }) => id + ' ' + name)\n    .listen(3000)\n```\n\nlocalhost/id/1/id/123/id/anything/id/id/anything/rest\n\nGET\n\n1\n\nThe server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | 1 |\n| /id/123 | 123 |\n| /id/anything | anything |\n| /id/anything?name=salt | anything |\n| /id | Not Found |\n| /id/anything/rest | anything rest |\n\n## Optional path parameters\n\nSometimes we might want a static and dynamic path to resolve the same handler.\n\nWe can make a path parameter optional by adding a question mark `?` after the parameter name.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id?', ({ params: { id } }) => `id ${id}`)\n    .listen(3000)\n```\n\nlocalhost/id/id/1\n\nGET\n\nid: undefined\n\nThe server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id | id undefined |\n| /id/1 | id 1 |\n\n## Wildcards\n\nDynamic paths allow capturing certain segments of the URL.\n\nHowever, when you need a value of the path to be more dynamic and want to capture the rest of the URL segment, a wildcard can be used.\n\nWildcards can capture the value after segment regardless of amount by using \"*\".\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/*', ({ params }) => params['*'])\n    .listen(3000)\n```\n\nlocalhost/id/1/id/123/id/anything/id/id/anything/rest\n\nGET\n\n1\n\nIn this case the server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | 1 |\n| /id/123 | 123 |\n| /id/anything | anything |\n| /id/anything?name=salt | anything |\n| /id | Not Found |\n| /id/anything/rest | anything/rest |\n\nWildcards are useful for capturing a path until a specific point.\n\nTIP\n\nYou can use a wildcard with a path parameter.\n\n## HTTP Verb\n\nHTTP defines a set of request methods to indicate the desired action to be performed for a given resource.\n\nThere are several HTTP verbs, but the most common ones are:\n\n### GET\n\nRequests using GET should only retrieve data.\n\n### POST\n\nSubmits a payload to the specified resource, often causing state change or side effect.\n\n### PUT\n\nReplaces all current representations of the target resource using the request's payload.\n\n### PATCH\n\nApplies partial modifications to a resource.\n\n### DELETE\n\nDeletes the specified resource.\n\n* * *\n\nTo handle each of the different verbs, Elysia has a built-in API for several HTTP verbs by default, similar to `Elysia.get`\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hello')\n    .post('/hi', 'hi')\n    .listen(3000)\n```\n\nlocalhost//hi\n\nGET\n\nhello\n\nElysia HTTP methods accepts the following parameters:\n\n- **path**: Pathname\n- **function**: Function to respond to the client\n- **hook**: Additional metadata\n\nYou can read more about the HTTP methods on [HTTP Request Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods).\n\n## Custom Method\n\nWe can accept custom HTTP Methods with `Elysia.route`.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/get', 'hello')\n    .post('/post', 'hi')\n    .route('M-SEARCH', '/m-search', 'connect')\n    .listen(3000)\n```\n\nlocalhost/get/post/m-search\n\nGET\n\nhello\n\n**Elysia.route** accepts the following:\n\n- **method**: HTTP Verb\n- **path**: Pathname\n- **function**: Function to response to the client\n- **hook**: Additional metadata\n\nWhen navigating to each method, you should see the results as the following:\n\n| Path | Method | Result |\n| --- | --- | --- |\n| / | GET | hello |\n| / | POST | hi |\n| / | M-SEARCH | connect |\n\nTIP\n\nBased on [RFC 7231](https://www.rfc-editor.org/rfc/rfc7231#section-4.1), HTTP Verb is case-sensitive.\nIt's recommended to use the UPPERCASE convention for defining a custom HTTP Verb with Elysia.\n\n## Elysia.all\n\nElysia provides an `Elysia.all` for handling any HTTP method for a specified path using the same API like **Elysia.get** and **Elysia.post**.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .all('/', 'hi')\n    .listen(3000)\n```\n\nlocalhost//\n\nGET\n\nhi\n\nAny HTTP method that matches the path, will be handled as follows:\n\n| Path | Method | Result |\n| --- | --- | --- |\n| / | GET | hi |\n| / | POST | hi |\n| / | DELETE | hi |\n\n## Handle\n\nMost developers use REST clients like Postman, Insomnia or Hoppscotch to test their API.\n\nHowever, Elysia can be programmatically test using `Elysia.handle`.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', 'hello')\n    .post('/hi', 'hi')\n    .listen(3000)\n\napp.handle(new Request('http://localhost/')).then(console.log)\n```\n\n**Elysia.handle** is a function to process an actual request sent to the server.\n\nTIP\n\nUnlike unit test's mock, **you can expect it to behave like an actual request** sent to the server.\nBut also useful for simulating or creating unit tests.\n\n## 404\n\nIf no path matches the defined routes, Elysia will pass the request to [error](https://elysiajs.com/essential/life-cycle.html#on-error) life cycle before returning a **\"NOT_FOUND\"** with an HTTP status of 404.\n\nWe can handle a custom 404 error by returning a value from `error` life cycle like this:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hi')\n    .onError(({ code }) => {\n        if (code === 'NOT_FOUND') {\n            return 'Route not found :('\n        }\n    })\n    .listen(3000)\n```\n\nlocalhost//hi\n\nGET\n\nhello\n\nWhen navigating to your web server, you should see the result as follows:\n\n| Path | Method | Result |\n| --- | --- | --- |\n| / | GET | hi |\n| / | POST | Route not found :( |\n| /hi | GET | Route not found :( |\n\nYou can learn more about life cycle and error handling in [Life Cycle Events](https://elysiajs.com/essential/life-cycle.html#events) and [Error Handling](https://elysiajs.com/essential/life-cycle.html#on-error).\n\nTIP\n\nHTTP Status is used to indicate the type of response. By default if everything is correct, the server will return a '200 OK' status code (If a route matches and there is no error, Elysia will return 200 as default)\nIf the server fails to find any route to handle, like in this case, then the server shall return a '404 NOT FOUND' status code.\n\n## Group\n\nWhen creating a web server, you would often have multiple routes sharing the same prefix:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .post('/user/sign-in', 'Sign in')\n    .post('/user/sign-up', 'Sign up')\n    .post('/user/profile', 'Profile')\n    .listen(3000)\n```\n\nlocalhost/user/sign-in/user/sign-up/user/profile\n\nPOST\n\nSign in\n\nThis can be improved with `Elysia.group`, allowing us to apply prefixes to multiple routes at the same time by grouping them together:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .group('/user', (app) =>\n        app\n            .post('/sign-in', 'Sign in')\n            .post('/sign-up', 'Sign up')\n            .post('/profile', 'Profile')\n    )\n    .listen(3000)\n```\n\nlocalhost/user/sign-in/user/sign-up/user/profile\n\nPOST\n\nSign in\n\nThis code behaves the same as our first example and should be structured as follows:\n\n| Path | Result |\n| --- | --- |\n| /user/sign-in | Sign in |\n| /user/sign-up | Sign up |\n| /user/profile | Profile |\n\n`.group()` can also accept an optional guard parameter to reduce boilerplate of using groups and guards together:\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .group('/user', {\n        body: t.Literal('Rikuhachima Aru')\n    }, (app) =>\n        app\n            .post('/sign-in', 'Sign in')\n            .post('/sign-up', 'Sign up')\n            .post('/profile', 'Profile')\n    )\n    .listen(3000)\n```\n\n## Prefix\n\nWe can separate a group into a separate plugin instance to reduce nesting by providing a **prefix** to the constructor.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst users = new Elysia({ prefix: '/user' })\n    .post('/sign-in', 'Sign in')\n    .post('/sign-up', 'Sign up')\n    .post('/profile', 'Profile')\n\nnew Elysia()\n    .use(users)\n    .get('/', 'hello world')\n    .listen(3000)\n```\n\nlocalhost//user/sign-in/user/sign-up/user/profile\n\nGET\n\nhello world\n\nThis should give you a solid starting point!", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "overview", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I routing in elysiajs?\n\nAssistant: To routing in elysiajs, here's what you do:\nWeb servers use the request's **path and HTTP method** to look up the correct resource, refers as **\"routing\"**.\n\nWe can define a route by calling a **method named after HTTP verbs**, passing a path and a function to execute when matched.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hello')\n    .get('/hi', 'hi')\n    .listen(3000)\n```\n\nWe can access the web server by going to **[http://localhost:3000](http://localhost:3000/)**\n\nBy default, web browsers will send a GET method when visiting a page.\n\nlocalhost//hi\n\nGET\n\nhello\n\nTIP\n\nUsing an interactive browser above, hover on a blue highlight area to see difference result between each path.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I path type in elysiajs?\n\nAssistant: To path type in elysiajs, here's what you do:\nPath in Elysia can be grouped into 3 types:\n\n- **static paths** - static string to locate the resource\n- **dynamic paths** - segment can be any value\n- **wildcards** - path until a specific point can be anything\n\nYou can use all of the path types together to compose a behavior for your web server.\n\nThe priorities are as follows:\n\n1. static paths\n2. dynamic paths\n3. wildcards\n\nIf the path is resolved as the static wild dynamic path is presented, Elysia will resolve the static path rather than the dynamic path.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/1', 'static path')\n    .get('/id/:id', 'dynamic path')\n    .get('/id/*', 'wildcard path')\n    .listen(3000)\n```\n\nlocalhost/id/1/id/2/id/2/a\n\nGET\n\nstatic path\n\nHere the server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | static path |\n| /id/2 | dynamic path |\n| /id/2/a | wildcard path |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I static path in elysiajs?\n\nAssistant: To static path in elysiajs, here's what you do:\nA path or pathname is an identifier to locate resources of a server.\n\n```bash\nhttp://localhost:/path/page\n```\n\nElysia uses the path and method to look up the correct resource.\n\n![URL Representation](https://elysiajs.com/essential/url-object.svg)\n\nA path starts after the origin. Prefix with **/** and ends before search query **(?)**\n\nWe can categorize the URL and path as follows:\n\n| URL | Path |\n| --- | --- |\n| [http://site.com/](https://site.com/) | / |\n| [http://site.com/hello](https://site.com/hello) | /hello |\n| [http://site.com/hello/world](https://site.com/hello/world) | /hello/world |\n| [http://site.com/hello?name=salt](https://site.com/hello?name=salt) | /hello |\n| [http://site.com/hello#title](https://site.com/hello#title) | /hello |\n\nTIP\n\nIf the path is not specified, the browser and web server will treat the path as '/' as a default value.\n\nElysia will look up each request for [route](https://elysiajs.com/essential/route.html) and response using [handler](https://elysiajs.com/essential/handler.html) function..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I dynamic path in elysiajs?\n\nAssistant: To dynamic path in elysiajs, here's what you do:\nURLs can be both static and dynamic.\n\nStatic paths are hardcoded strings that can be used to locate resources of the server, while dynamic paths match some part and captures the value to extract extra information.\n\nFor instance, we can extract the user ID from the pathname. For example:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .listen(3000)\n```\n\nHere dynamic path is created with `/id/:id` which tells Elysia to match any path up until `/id`. What comes after that is then stored as **params** object.\n\nlocalhost/id/1/id/123/id/anything/id/id/anything/test\n\nGET\n\n1\n\nWhen requested, the server should return the response as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | 1 |\n| /id/123 | 123 |\n| /id/anything | anything |\n| /id/anything?name=salt | anything |\n| /id | Not Found |\n| /id/anything/rest | Not Found |\n\nDynamic paths are great to include things like IDs, which then can be used later.\n\nWe refer to the named variable path as **path parameter** or **params** for short..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I segment in elysiajs?\n\nAssistant: To segment in elysiajs, here's what you do:\nURL segments are each path that is composed into a full path.\n\nSegments are separated by `/`. ![Representation of URL segments](https://elysiajs.com/essential/url-segment.webp)\n\nPath parameters in Elysia are represented by prefixing a segment with ':' followed by a name. ![Representation of path parameter](https://elysiajs.com/essential/path-parameter.webp)\n\nPath parameters allow Elysia to capture a specific segment of a URL.\n\nThe named path parameter will then be stored in `Context.params`.\n\n| Route | Path | Params |\n| --- | --- | --- |\n| /id/:id | /id/1 | id=1 |\n| /id/:id | /id/hi | id=hi |\n| /id/:name | /id/hi | name=hi |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I multiple path parameters in elysiajs?\n\nAssistant: To multiple path parameters in elysiajs, here's what you do:\nYou can have as many path parameters as you like, which will then be stored into a `params` object.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .get('/id/:id/:name', ({ params: { id, name } }) => id + ' ' + name)\n    .listen(3000)\n```\n\nlocalhost/id/1/id/123/id/anything/id/id/anything/rest\n\nGET\n\n1\n\nThe server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | 1 |\n| /id/123 | 123 |\n| /id/anything | anything |\n| /id/anything?name=salt | anything |\n| /id | Not Found |\n| /id/anything/rest | anything rest |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I optional path parameters in elysiajs?\n\nAssistant: To optional path parameters in elysiajs, here's what you do:\nSometimes we might want a static and dynamic path to resolve the same handler.\n\nWe can make a path parameter optional by adding a question mark `?` after the parameter name.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id?', ({ params: { id } }) => `id ${id}`)\n    .listen(3000)\n```\n\nlocalhost/id/id/1\n\nGET\n\nid: undefined\n\nThe server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id | id undefined |\n| /id/1 | id 1 |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I wildcards in elysiajs?\n\nAssistant: To wildcards in elysiajs, here's what you do:\nDynamic paths allow capturing certain segments of the URL.\n\nHowever, when you need a value of the path to be more dynamic and want to capture the rest of the URL segment, a wildcard can be used.\n\nWildcards can capture the value after segment regardless of amount by using \"*\".\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/*', ({ params }) => params['*'])\n    .listen(3000)\n```\n\nlocalhost/id/1/id/123/id/anything/id/id/anything/rest\n\nGET\n\n1\n\nIn this case the server will respond as follows:\n\n| Path | Response |\n| --- | --- |\n| /id/1 | 1 |\n| /id/123 | 123 |\n| /id/anything | anything |\n| /id/anything?name=salt | anything |\n| /id | Not Found |\n| /id/anything/rest | anything/rest |\n\nWildcards are useful for capturing a path until a specific point.\n\nTIP\n\nYou can use a wildcard with a path parameter..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I http verb in elysiajs?\n\nAssistant: To http verb in elysiajs, here's what you do:\nHTTP defines a set of request methods to indicate the desired action to be performed for a given resource.\n\nThere are several HTTP verbs, but the most common ones are:\n\n### GET\n\nRequests using GET should only retrieve data.\n\n### POST\n\nSubmits a payload to the specified resource, often causing state change or side effect.\n\n### PUT\n\nReplaces all current representations of the target resource using the request's payload.\n\n### PATCH\n\nApplies partial modifications to a resource.\n\n### DELETE\n\nDeletes the specified resource.\n\n* * *\n\nTo handle each of the different verbs, Elysia has a built-in API for several HTTP verbs by default, similar to `Elysia.get`\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hello')\n    .post('/hi', 'hi')\n    .listen(3000)\n```\n\nlocalhost//hi\n\nGET\n\nhello\n\nElysia HTTP methods accepts the following parameters:\n\n- **path**: Pathname\n- **function**: Function to respond to the client\n- **hook**: Additional metadata\n\nYou can read more about the HTTP methods on [HTTP Request Methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I custom method in elysiajs?\n\nAssistant: To custom method in elysiajs, here's what you do:\nWe can accept custom HTTP Methods with `Elysia.route`.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/get', 'hello')\n    .post('/post', 'hi')\n    .route('M-SEARCH', '/m-search', 'connect')\n    .listen(3000)\n```\n\nlocalhost/get/post/m-search\n\nGET\n\nhello\n\n**Elysia.route** accepts the following:\n\n- **method**: HTTP Verb\n- **path**: Pathname\n- **function**: Function to response to the client\n- **hook**: Additional metadata\n\nWhen navigating to each method, you should see the results as the following:\n\n| Path | Method | Result |\n| --- | --- | --- |\n| / | GET | hello |\n| / | POST | hi |\n| / | M-SEARCH | connect |\n\nTIP\n\nBased on [RFC 7231](https://www.rfc-editor.org/rfc/rfc7231#section-4.1), HTTP Verb is case-sensitive.\nIt's recommended to use the UPPERCASE convention for defining a custom HTTP Verb with Elysia..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I elysia.all in elysiajs?\n\nAssistant: To elysia.all in elysiajs, here's what you do:\nElysia provides an `Elysia.all` for handling any HTTP method for a specified path using the same API like **Elysia.get** and **Elysia.post**.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .all('/', 'hi')\n    .listen(3000)\n```\n\nlocalhost//\n\nGET\n\nhi\n\nAny HTTP method that matches the path, will be handled as follows:\n\n| Path | Method | Result |\n| --- | --- | --- |\n| / | GET | hi |\n| / | POST | hi |\n| / | DELETE | hi |.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I handle in elysiajs?\n\nAssistant: To handle in elysiajs, here's what you do:\nMost developers use REST clients like Postman, Insomnia or Hoppscotch to test their API.\n\nHowever, Elysia can be programmatically test using `Elysia.handle`.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', 'hello')\n    .post('/hi', 'hi')\n    .listen(3000)\n\napp.handle(new Request('http://localhost/')).then(console.log)\n```\n\n**Elysia.handle** is a function to process an actual request sent to the server.\n\nTIP\n\nUnlike unit test's mock, **you can expect it to behave like an actual request** sent to the server.\nBut also useful for simulating or creating unit tests..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I 404 in elysiajs?\n\nAssistant: To 404 in elysiajs, here's what you do:\nIf no path matches the defined routes, Elysia will pass the request to [error](https://elysiajs.com/essential/life-cycle.html#on-error) life cycle before returning a **\"NOT_FOUND\"** with an HTTP status of 404.\n\nWe can handle a custom 404 error by returning a value from `error` life cycle like this:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hi')\n    .onError(({ code }) => {\n        if (code === 'NOT_FOUND') {\n            return 'Route not found :('\n        }\n    })\n    .listen(3000)\n```\n\nlocalhost//hi\n\nGET\n\nhello\n\nWhen navigating to your web server, you should see the result as follows:\n\n| Path | Method | Result |\n| --- | --- | --- |\n| / | GET | hi |\n| / | POST | Route not found :( |\n| /hi | GET | Route not found :( |\n\nYou can learn more about life cycle and error handling in [Life Cycle Events](https://elysiajs.com/essential/life-cycle.html#events) and [Error Handling](https://elysiajs.com/essential/life-cycle.html#on-error).\n\nTIP\n\nHTTP Status is used to indicate the type of response. By default if everything is correct, the server will return a '200 OK' status code (If a route matches and there is no error, Elysia will return 200 as default)\nIf the server fails to find any route to handle, like in this case, then the server shall return a '404 NOT FOUND' status code..\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I group in elysiajs?\n\nAssistant: To group in elysiajs, here's what you do:\nWhen creating a web server, you would often have multiple routes sharing the same prefix:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .post('/user/sign-in', 'Sign in')\n    .post('/user/sign-up', 'Sign up')\n    .post('/user/profile', 'Profile')\n    .listen(3000)\n```\n\nlocalhost/user/sign-in/user/sign-up/user/profile\n\nPOST\n\nSign in\n\nThis can be improved with `Elysia.group`, allowing us to apply prefixes to multiple routes at the same time by grouping them together:\n\n```typescript\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .group('/user', (app) =>\n        app\n            .post('/sign-in', 'Sign in')\n            .post('/sign-up', 'Sign up')\n            .post('/profile', 'Profile')\n    )\n    .listen(3000)\n```\n\nlocalhost/user/sign-in/user/sign-up/user/profile\n\nPOST\n\nSign in\n\nThis code behaves the same as our first example and should be structured as follows:\n\n| Path | Result |\n| --- | --- |\n| /user/sign-in | Sign in |\n| /user/sign-up | Sign up |\n| /user/profile | Profile |\n\n`.group()` can also accept an optional guard parameter to reduce boilerplate of using groups and guards together:\n\n```typescript\nimport { Elysia, t } from 'elysia'\n\nnew Elysia()\n    .group('/user', {\n        body: t.Literal('Rikuhachima Aru')\n    }, (app) =>\n        app\n            .post('/sign-in', 'Sign in')\n            .post('/sign-up', 'Sign up')\n            .post('/profile', 'Profile')\n    )\n    .listen(3000)\n```.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: How do I prefix in elysiajs?\n\nAssistant: To prefix in elysiajs, here's what you do:\nWe can separate a group into a separate plugin instance to reduce nesting by providing a **prefix** to the constructor.\n\n```typescript\nimport { Elysia } from 'elysia'\n\nconst users = new Elysia({ prefix: '/user' })\n    .post('/sign-in', 'Sign in')\n    .post('/sign-up', 'Sign up')\n    .post('/profile', 'Profile')\n\nnew Elysia()\n    .use(users)\n    .get('/', 'hello world')\n    .listen(3000)\n```\n\nlocalhost//user/sign-in/user/sign-up/user/profile\n\nGET\n\nhello world.\nPretty straightforward, right?", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "section_detail", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: Can you give me some code examples for Routing in elysiajs?\n\nAssistant: Absolutely! Here are some practical examples to help you out:\n\n**Basic Routing Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hello')\n    .get('/hi', 'hi')\n    .listen(3000)\n```\n\nThis snippet shows you how to basic routing example, which is an important aspect of routing.\n\n**Path Type Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/1', 'static path')\n    .get('/id/:id', 'dynamic path')\n    .get('/id/*', 'wildcard path')\n    .listen(3000)\n```\n\nThis snippet shows you how to path type example, which is an important aspect of routing.\n\n**Static Path Example**:\n\n```yaml\nhttp://localhost:/path/page\n```\n\nThis snippet shows you how to static path example, which is an important aspect of routing.\n\n**Dynamic Path Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .listen(3000)\n```\n\nThis snippet shows you how to dynamic path example, which is an important aspect of routing.\n\n**Multiple Path Parameters Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id', ({ params: { id } }) => id)\n    .get('/id/:id/:name', ({ params: { id, name } }) => id + ' ' + name)\n    .listen(3000)\n```\n\nThis snippet shows you how to multiple path parameters example, which is an important aspect of routing.\n\n**Optional Path Parameters Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/:id?', ({ params: { id } }) => `id ${id}`)\n    .listen(3000)\n```\n\nThis snippet shows you how to optional path parameters example, which is an important aspect of routing.\n\n**Wildcards Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/id/*', ({ params }) => params['*'])\n    .listen(3000)\n```\n\nThis snippet shows you how to wildcards example, which is an important aspect of routing.\n\n**Custom Method Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/get', 'hello')\n    .post('/post', 'hi')\n    .route('M-SEARCH', '/m-search', 'connect')\n    .listen(3000)\n```\n\nThis snippet shows you how to custom method example, which is an important aspect of routing.\n\n**Elysia.all Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .all('/', 'hi')\n    .listen(3000)\n```\n\nThis snippet shows you how to elysia.all example, which is an important aspect of routing.\n\n**Handle Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst app = new Elysia()\n    .get('/', 'hello')\n    .post('/hi', 'hi')\n    .listen(3000)\n\napp.handle(new Request('http://localhost/')).then(console.log)\n```\n\nThis snippet shows you how to handle example, which is an important aspect of routing.\n\n**404 Handling Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .get('/', 'hi')\n    .onError(({ code }) => {\n        if (code === 'NOT_FOUND') {\n            return 'Route not found :('\n        }\n    })\n    .listen(3000)\n```\n\nThis snippet shows you how to 404 handling example, which is an important aspect of routing.\n\n**Group Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n    .group('/user', (app) =>\n        app\n            .post('/sign-in', 'Sign in')\n            .post('/sign-up', 'Sign up')\n            .post('/profile', 'Profile')\n    )\n    .listen(3000)\n```\n\nThis snippet shows you how to group example, which is an important aspect of routing.\n\n**Prefix Example**:\n\n```yaml\nimport { Elysia } from 'elysia'\n\nconst users = new Elysia({ prefix: '/user' })\n    .post('/sign-in', 'Sign in')\n    .post('/sign-up', 'Sign up')\n    .post('/profile', 'Profile')\n\nnew Elysia()\n    .use(users)\n    .get('/', 'hello world')\n    .listen(3000)\n```\n\nThis snippet shows you how to prefix example, which is an important aspect of routing.\n\n", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "code_examples", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
{"text": "System: You are a helpful elysiajs expert.\n\nUser: What are some tips for using Routing in elysiajs effectively?\n\nAssistant: Great question! Here are some tips to keep in mind:\n\nUsing an interactive browser above, hover on a blue highlight area to see difference result between each path\n\nIf the path is not specified, the browser and web server will treat the path as '/' as a default value.\n\nDynamic paths are great to include things like IDs, which then can be used later.\n\nYou can use a wildcard with a path parameter.\n\nUnlike unit test's mock, you can expect it to behave like an actual request sent to the server.\n\nHTTP Status is used to indicate the type of response. By default if everything is correct, the server will return a '200 OK' status code (If a route matches and there is no error, Elysia will return 200 as default). If the server fails to find any route to handle, like in this case, then the server shall return a '404 NOT FOUND' status code.\n\nBased on RFC 7231, HTTP Verb is case-sensitive. It's recommended to use the UPPERCASE convention for defining a custom HTTP Verb with Elysia.\n\nStick to these, and you'll avoid a lot of headaches!", "metadata": {"source_url": "https://elysiajs.com/essential/route", "title": "Routing", "description": "Web servers use the request's path and HTTP method to look up the correct resource, referred to as routing.", "has_code_examples": true, "has_best_practices": true, "section_count": 15, "timestamp": "2025-03-01 04:37:26", "type": "best_practices", "page_metadata": {"viewport": "width=device-width,initial-scale=1,user-scalable=no", "twitter:image": "https://elysiajs.com/assets/cover.jpg", "og:image:width": "1920", "ogImage": "https://elysiajs.com/assets/cover.jpg", "og:description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "ogDescription": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "generator": "VitePress v1.6.3", "title": "Route - ElysiaJS | ElysiaJS", "og:title": "Route - ElysiaJS", "ogTitle": "Route - ElysiaJS", "og:image": "https://elysiajs.com/assets/cover.jpg", "description": "To determine the correct response to a client, the web server uses path and HTTP method to look up for the correct resource. This process is known as \"routing\". We can define a route by calling a method named after an HTTP verb like `Elysia.get`, `Elysia.post` passing a path and a function to execute when matched.", "favicon": "https://elysiajs.com/assets/elysia.png", "og:image:height": "1080", "language": "en-US", "twitter:card": "summary_large_image", "scrapeId": "61385282-87d7-40c8-bc61-cdb63a14a4ea", "sourceURL": "https://elysiajs.com/essential/route", "url": "https://elysiajs.com/essential/route", "statusCode": 200}}}
